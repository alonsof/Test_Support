<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="fr-FR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANzFEKwyAMgOGreAADiUarO8DY89gFojFQ6FroWujx19cfvt8sjsahwxjMwGQIDUuDjiS5ViOR6h1JaqiM0IkacM0IRYmBONw1ae9FvQvRqmrqEJNm4AkLSJkMQo9KZiwh8/3yznZ4vr27ltlsXMdj37bj5t5N3r3Or6yfXdbfIse8rX8VaCIroQAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>OAuth Web Resource Authorization Profiles (OAuth WRAP)</source>
            <target state="new">OAuth Web Resource Authorization Profiles (OAuth WRAP)</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Azure</source>
            <target state="new">Azure</target>
            <context-group>
              <context context-type="x-metadataname">applies_to_product</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>OAuth Web Resource Authorization Profiles (OAuth WRAP)</source>
            <target state="new">OAuth Web Resource Authorization Profiles (OAuth WRAP)</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Version 0.9.7.2</source>
            <target state="new">Version 0.9.7.2</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>November 5, 2009</source>
            <target state="new">November 5, 2009</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Abstract</source>
            <target state="new">Abstract</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The OAuth Web Resource Authorization Profiles (OAuth WRAP) allow a server hosting a Protected Resource to delegate authorization to one or more authorities.</source>
            <target state="new">The OAuth Web Resource Authorization Profiles (OAuth WRAP) allow a server hosting a Protected Resource to delegate authorization to one or more authorities.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>An application (Client) accesses the Protected Resource by presenting a short lived, opaque, bearer token (Access Token) obtained from an authority (Authorization Server).</source>
            <target state="new">An application (Client) accesses the Protected Resource by presenting a short lived, opaque, bearer token (Access Token) obtained from an authority (Authorization Server).</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>There are Profiles for how a Client may obtain an Access Token  when acting autonomously or on behalf of a User.</source>
            <target state="new">There are Profiles for how a Client may obtain an Access Token  when acting autonomously or on behalf of a User.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Authors</source>
            <target state="new">Authors</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Allen Tom (atom@yahoo-inc.com)Brian Eaton (beaton@google.com)Dick Hardt (dick.hardt@microsoft.com), EditorYaron Goland (yarong@microsoft.com)</source>
            <target state="new">Allen Tom (atom@yahoo-inc.com)Brian Eaton (beaton@google.com)Dick Hardt (dick.hardt@microsoft.com), EditorYaron Goland (yarong@microsoft.com)</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>License</source>
            <target state="new">License</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>As of [insert date], the following persons or entities have made this Specification available under the Open Web Foundation Agreement Version 0.9, which is available at [http://groups.google.com/group/open-web-board/web/owf-agreement-for-final-specs---pt-9-draft][Note:  Updated URL pending.]</source>
            <target state="new">As of [insert date], the following persons or entities have made this Specification available under the Open Web Foundation Agreement Version 0.9, which is available at [http://groups.google.com/group/open-web-board/web/owf-agreement-for-final-specs---pt-9-draft][Note:  Updated URL pending.]</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Google Inc. Microsoft Corp. Yahoo!</source>
            <target state="new">Google Inc. Microsoft Corp. Yahoo!</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Inc.You can review the signed copies of the Open Web Foundation Agreement Version 0.9 for this Specification at [Insert Group Agreement Store URI], which may also include additional parties to those listed above.</source>
            <target state="new">Inc.You can review the signed copies of the Open Web Foundation Agreement Version 0.9 for this Specification at [Insert Group Agreement Store URI], which may also include additional parties to those listed above.</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Your use of this Specification may be subject to other third party rights.</source>
            <target state="new">Your use of this Specification may be subject to other third party rights.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>THIS SPECIFICATION IS PROVIDED “AS IS.”</source>
            <target state="new">THIS SPECIFICATION IS PROVIDED “AS IS.”</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The contributors expressly disclaim any warranties (express, implied, or otherwise), including implied warranties of merchantability, non-infringement, fitness for a particular purpose, or title, related to the Specification.</source>
            <target state="new">The contributors expressly disclaim any warranties (express, implied, or otherwise), including implied warranties of merchantability, non-infringement, fitness for a particular purpose, or title, related to the Specification.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>The entire risk as to implementing or otherwise using the Specification is assumed by the Specification implementer and user.</source>
            <target state="new">The entire risk as to implementing or otherwise using the Specification is assumed by the Specification implementer and user.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>IN NO EVENT WILL ANY PARTY BE LIABLE TO ANY OTHER PARTY FOR LOST PROFITS OR ANY FORM OF INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER FROM ANY CAUSES OF ACTION OF ANY KIND WITH RESPECT TO THIS SPECIFICATION OR ITS GOVERNING AGREEMENT, WHETHER BASED ON BREACH OF CONTRACT, TORT (INCLUDING NEGLIGENCE), OR OTHERWISE, AND WHETHER OR NOT THE OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</source>
            <target state="new">IN NO EVENT WILL ANY PARTY BE LIABLE TO ANY OTHER PARTY FOR LOST PROFITS OR ANY FORM OF INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER FROM ANY CAUSES OF ACTION OF ANY KIND WITH RESPECT TO THIS SPECIFICATION OR ITS GOVERNING AGREEMENT, WHETHER BASED ON BREACH OF CONTRACT, TORT (INCLUDING NEGLIGENCE), OR OTHERWISE, AND WHETHER OR NOT THE OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>1. Overview</source>
            <target state="new">1. Overview</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>As the internet has evolved, there is a growing trend for a variety of applications (Clients) to access resources through an API over HTTP or other protocols.</source>
            <target state="new">As the internet has evolved, there is a growing trend for a variety of applications (Clients) to access resources through an API over HTTP or other protocols.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Often these resources require authorization for access and are Protected Resources.</source>
            <target state="new">Often these resources require authorization for access and are Protected Resources.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>The systems that are trusted to make authorization decisions may be independent from the Protected Resources for scale and security reasons.</source>
            <target state="new">The systems that are trusted to make authorization decisions may be independent from the Protected Resources for scale and security reasons.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>The OAuth Web Resource Authorization Profiles (OAuth WRAP) enable a Protected Resource to delegate the authorization to access a Protected Resource to one or more trusted authorities.</source>
            <target state="new">The OAuth Web Resource Authorization Profiles (OAuth WRAP) enable a Protected Resource to delegate the authorization to access a Protected Resource to one or more trusted authorities.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Clients that wish to access a Protected Resource first obtain authorization from a trusted authority (Authorization Server).</source>
            <target state="new">Clients that wish to access a Protected Resource first obtain authorization from a trusted authority (Authorization Server).</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Different credentials and profiles can be used to obtain this authorization, but once authorized, the Client is provided an Access Token, and possible a Refresh Token to obtain new Access Tokens.</source>
            <target state="new">Different credentials and profiles can be used to obtain this authorization, but once authorized, the Client is provided an Access Token, and possible a Refresh Token to obtain new Access Tokens.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>The Authorization Server typically includes authorization information in the Access Token and digitally signs the Access Token.</source>
            <target state="new">The Authorization Server typically includes authorization information in the Access Token and digitally signs the Access Token.</target>
          </trans-unit>
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Protected Resource can verify that an Access Token received from a Client was issued by a trusted Authorization Server and is valid.</source>
            <target state="new">Protected Resource can verify that an Access Token received from a Client was issued by a trusted Authorization Server and is valid.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>The Protected Resource can then examine the contents of the Access Token to determine the authorization that has been granted to the Client.</source>
            <target state="new">The Protected Resource can then examine the contents of the Access Token to determine the authorization that has been granted to the Client.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>1.1 Accessing a Protected Resource</source>
            <target state="new">1.1 Accessing a Protected Resource</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>The Access Token is opaque to the Client, and can be any format agreed to between the Authorization Server and the Protected Resource enabling existing systems to reuse suitable tokens, or use a standard token format such as a Simple Web Token or JSON Web Token.</source>
            <target state="new">The Access Token is opaque to the Client, and can be any format agreed to between the Authorization Server and the Protected Resource enabling existing systems to reuse suitable tokens, or use a standard token format such as a Simple Web Token or JSON Web Token.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Since the Access Token provides the Client authorization to the Protected Resource for the life of the Access Token, the Authorization Server should issue Access Tokens that expire within an appropriate time.</source>
            <target state="new">Since the Access Token provides the Client authorization to the Protected Resource for the life of the Access Token, the Authorization Server should issue Access Tokens that expire within an appropriate time.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>When an Access Token expires, the Client requests a new Access Token from the Authorization Server, which once again computes the Client’s authorization, and issues a new Access Token.</source>
            <target state="new">When an Access Token expires, the Client requests a new Access Token from the Authorization Server, which once again computes the Client’s authorization, and issues a new Access Token.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Diagram 1 below shows the flow between the Client and Authorization Server (A,B); and then between the Client and Protected Resource (C,D):</source>
            <target state="new">Diagram 1 below shows the flow between the Client and Authorization Server (A,B); and then between the Client and Protected Resource (C,D):</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>In step A, the Client presents credentials to the Authorization Server in exchange for an Access Token.</source>
            <target state="new">In step A, the Client presents credentials to the Authorization Server in exchange for an Access Token.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>A Profile specifies the credentials and how the Client obtains them.</source>
            <target state="new">A Profile specifies the credentials and how the Client obtains them.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>This specification defines a number of Profiles; additional Profiles may be defined to support additional scenarios.</source>
            <target state="new">This specification defines a number of Profiles; additional Profiles may be defined to support additional scenarios.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>1.2 Autonomous Client Profiles</source>
            <target state="new">1.2 Autonomous Client Profiles</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>The following two Profiles ( REF _Ref240004775 \r \h 5.1 and  REF _Ref242856709 \r \h 5.2) are recommended for scenarios involving a Client acting autonomously.</source>
            <target state="new">The following two Profiles ( REF _Ref240004775 \r \h 5.1 and  REF _Ref242856709 \r \h 5.2) are recommended for scenarios involving a Client acting autonomously.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Client Account and Password Profile ( REF _Ref240004775 \r \h  \* MERGEFORMAT 5.1):<ept id="1">&lt;/embeddedLabel&gt;</ept> This is the simplest Profile.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Client Account and Password Profile ( REF _Ref240004775 \r \h  \* MERGEFORMAT 5.1):<ept id="1">&lt;/embeddedLabel&gt;</ept> This is the simplest Profile.</target>
          </trans-unit>
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>The Client is provisioned with an account name and corresponding password by the Authorization Server.</source>
            <target state="new">The Client is provisioned with an account name and corresponding password by the Authorization Server.</target>
          </trans-unit>
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>The Client presents the account name and password to the Access Token URL at the Authorization Server in exchange for an Access Token.</source>
            <target state="new">The Client presents the account name and password to the Access Token URL at the Authorization Server in exchange for an Access Token.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Assertion Profile ( REF _Ref242856709 \r \h  \* MERGEFORMAT 5.2):<ept id="1">&lt;/embeddedLabel&gt;</ept> This profile enables a Client with a SAML or other assertion recognized by the Authorization Server.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Assertion Profile ( REF _Ref242856709 \r \h  \* MERGEFORMAT 5.2):<ept id="1">&lt;/embeddedLabel&gt;</ept> This profile enables a Client with a SAML or other assertion recognized by the Authorization Server.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>The Client presents the assertion to the Access Token URL at the Authorization Server in exchange for an Access Token.</source>
            <target state="new">The Client presents the assertion to the Access Token URL at the Authorization Server in exchange for an Access Token.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>How the Client obtains the assertion is out of scope of OAuth WRAP.</source>
            <target state="new">How the Client obtains the assertion is out of scope of OAuth WRAP.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Access Tokens are short lived bearer tokens.</source>
            <target state="new">Access Tokens are short lived bearer tokens.</target>
          </trans-unit>
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>When the Protected Resource is presented with an expired Access Token by the Client, the Protected Resource returns an error.</source>
            <target state="new">When the Protected Resource is presented with an expired Access Token by the Client, the Protected Resource returns an error.</target>
          </trans-unit>
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>The Client presents the credentials once again to the Authorization Server to obtain a new Access Token.</source>
            <target state="new">The Client presents the credentials once again to the Authorization Server to obtain a new Access Token.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>1.3 User Delegation Profiles</source>
            <target state="new">1.3 User Delegation Profiles</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>Common scenarios involve the User delegating to a Client to act on the User's behalf, adding another party (the User) to the protocol.</source>
            <target state="new">Common scenarios involve the User delegating to a Client to act on the User's behalf, adding another party (the User) to the protocol.</target>
          </trans-unit>
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>In these Profiles, the Client receives a Refresh Token when it acquires the first Access Token.</source>
            <target state="new">In these Profiles, the Client receives a Refresh Token when it acquires the first Access Token.</target>
          </trans-unit>
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>When an Access Token expires, the Client presents the Refresh Token to acquire a new Access Token.</source>
            <target state="new">When an Access Token expires, the Client presents the Refresh Token to acquire a new Access Token.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>Refresh Tokens are sensitive as they represent long-lived permissions to access a Protected Resource and are always transmitted using HTTPS.</source>
            <target state="new">Refresh Tokens are sensitive as they represent long-lived permissions to access a Protected Resource and are always transmitted using HTTPS.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Username and Password Profile ( REF _Ref240004725 \r \h  \* MERGEFORMAT 5.3):<ept id="1">&lt;/embeddedLabel&gt;</ept> While the User may use a username and password to authenticate to the Authorization Server, it is undesirable for the Client to store the User’s username and password.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Username and Password Profile ( REF _Ref240004725 \r \h  \* MERGEFORMAT 5.3):<ept id="1">&lt;/embeddedLabel&gt;</ept> While the User may use a username and password to authenticate to the Authorization Server, it is undesirable for the Client to store the User’s username and password.</target>
          </trans-unit>
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>In this profile the User provides their username and password to an application (Client) they have installed on their device.</source>
            <target state="new">In this profile the User provides their username and password to an application (Client) they have installed on their device.</target>
          </trans-unit>
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>The Client presents a Client Identifier, the username and password (credentials) to the Access Token URL at the Authorization Server in exchange for an Access Token and a Refresh Token as depicted in Diagram 2 below.</source>
            <target state="new">The Client presents a Client Identifier, the username and password (credentials) to the Access Token URL at the Authorization Server in exchange for an Access Token and a Refresh Token as depicted in Diagram 2 below.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>When the Access Token expires, the Client presents the Refresh Token to the Refresh Token URL at the Authorization Server in exchange for a new Access Token (Diagram 3, steps A and B).</source>
            <target state="new">When the Access Token expires, the Client presents the Refresh Token to the Refresh Token URL at the Authorization Server in exchange for a new Access Token (Diagram 3, steps A and B).</target>
          </trans-unit>
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>The Client then uses the new Access Token to access the Protected Resource (Diagram 3, steps C and D).</source>
            <target state="new">The Client then uses the new Access Token to access the Protected Resource (Diagram 3, steps C and D).</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Web App Profile ( REF _Ref242856744 \r \h  \* MERGEFORMAT 5.4):<ept id="1">&lt;/embeddedLabel&gt;</ept> It is undesirable for a User to provide their Authorization Server username and password to web applications.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Web App Profile ( REF _Ref242856744 \r \h  \* MERGEFORMAT 5.4):<ept id="1">&lt;/embeddedLabel&gt;</ept> It is undesirable for a User to provide their Authorization Server username and password to web applications.</target>
          </trans-unit>
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>Additionally, the User may authenticate to the Authorization Server using other mechanisms then a username and password.</source>
            <target state="new">Additionally, the User may authenticate to the Authorization Server using other mechanisms then a username and password.</target>
          </trans-unit>
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>In this profile, a web application (Client) has been provisioned with a Client Identifier and Client Secret and may have registered a Callback URL.</source>
            <target state="new">In this profile, a web application (Client) has been provisioned with a Client Identifier and Client Secret and may have registered a Callback URL.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>Diagram 4 below illustrates the protocol.</source>
            <target state="new">Diagram 4 below illustrates the protocol.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>A.</source>
            <target state="new">A.</target>
          </trans-unit>
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>The Client initiates the protocol by redirecting the User to the User Authorization URL at the Authorization Server passing the Client Identifier and the Callback URL.</source>
            <target state="new">The Client initiates the protocol by redirecting the User to the User Authorization URL at the Authorization Server passing the Client Identifier and the Callback URL.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>B.</source>
            <target state="new">B.</target>
          </trans-unit>
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>The Authorization Server authenticates the User, confirms the User would like to authorize the Client to access the Protected Resource, and generates a Verification Code.</source>
            <target state="new">The Authorization Server authenticates the User, confirms the User would like to authorize the Client to access the Protected Resource, and generates a Verification Code.</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>C.</source>
            <target state="new">C.</target>
          </trans-unit>
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>The Authorization Server then redirects the User to the Callback URL at the Protected Resource passing along the Verification Code.</source>
            <target state="new">The Authorization Server then redirects the User to the Callback URL at the Protected Resource passing along the Verification Code.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>Similar to step A in Diagram 2, the Client then presents the Client Identifier, Client Secret, Callback URL and Verification code (credentials) to the Access Token URL at the Authorization Server for an Access Token and a Refresh Token.</source>
            <target state="new">Similar to step A in Diagram 2, the Client then presents the Client Identifier, Client Secret, Callback URL and Verification code (credentials) to the Access Token URL at the Authorization Server for an Access Token and a Refresh Token.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Rich App Profile ( REF _Ref243464143 \r \h 5.5):<ept id="1">&lt;/embeddedLabel&gt;</ept>  This profile is suitable when the Client is an application the User has installed on their device and a web browser is available, but it is undesirable for the User to provide their username and password to an application, or the user may not be using a username and password to authenticate to the Authorization Server.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Rich App Profile ( REF _Ref243464143 \r \h 5.5):<ept id="1">&lt;/embeddedLabel&gt;</ept>  This profile is suitable when the Client is an application the User has installed on their device and a web browser is available, but it is undesirable for the User to provide their username and password to an application, or the user may not be using a username and password to authenticate to the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>The Client initiates the protocol by directing the User's browser to the Authorization URL at the Authorization Server passing the Client Identifier and potentially a Callback URL.</source>
            <target state="new">The Client initiates the protocol by directing the User's browser to the Authorization URL at the Authorization Server passing the Client Identifier and potentially a Callback URL.</target>
          </trans-unit>
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>The Authorization Server authenticates the User, confirms the User would like to authorize the Client to access the Protected Resource, and generates a Verification Code.</source>
            <target state="new">The Authorization Server authenticates the User, confirms the User would like to authorize the Client to access the Protected Resource, and generates a Verification Code.</target>
          </trans-unit>
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>The Verification Code may be communicated back to the Client in a number of ways:</source>
            <target state="new">The Verification Code may be communicated back to the Client in a number of ways:</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>A.</source>
            <target state="new">A.</target>
          </trans-unit>
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>The Authorization Server presents the Verification Code to the User, who is instructed to enter the Verification Code directly in the Client; the Client reads the Verification Code from the title of the web page presented by the Authorization Server;</source>
            <target state="new">The Authorization Server presents the Verification Code to the User, who is instructed to enter the Verification Code directly in the Client; the Client reads the Verification Code from the title of the web page presented by the Authorization Server;</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>B.</source>
            <target state="new">B.</target>
          </trans-unit>
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>The Authorization Server redirects the User to the Callback URL that presents Client specific language for the User to enter the Verification Code into the Client; or</source>
            <target state="new">The Authorization Server redirects the User to the Callback URL that presents Client specific language for the User to enter the Verification Code into the Client; or</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>C.</source>
            <target state="new">C.</target>
          </trans-unit>
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>The Client has registered a custom scheme and the Authorization Server redirects the browser to the custom scheme that causes the User's browser to load the Client application with the Verification Code as a parameter.Similar to step A in Diagram 2, the Client then presents the Client Identifier, Callback URL (if provided) and Verification code (credentials) to the Access Token URL at the Authorization Server for an Access Token and a Refresh Token.</source>
            <target state="new">The Client has registered a custom scheme and the Authorization Server redirects the browser to the custom scheme that causes the User's browser to load the Client application with the Verification Code as a parameter.Similar to step A in Diagram 2, the Client then presents the Client Identifier, Callback URL (if provided) and Verification code (credentials) to the Access Token URL at the Authorization Server for an Access Token and a Refresh Token.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>2. Notation and Conventions</source>
            <target state="new">2. Notation and Conventions</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>[RFC2119] (Bradner, B., “Key words for use in RFCs to Indicate Requirement Levels,” .)<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://oauth.net/core/1.0a&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>[RFC2119] (Bradner, B., “Key words for use in RFCs to Indicate Requirement Levels,” .)<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://oauth.net/core/1.0a&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>Domain name examples use <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>[RFC2606] (Eastlake, D. and A. Panitz, “Reserved Top Level DNS Names,” .)<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://oauth.net/core/1.0a&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">Domain name examples use <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>[RFC2606] (Eastlake, D. and A. Panitz, “Reserved Top Level DNS Names,” .)<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://oauth.net/core/1.0a&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>3. Definitions</source>
            <target state="new">3. Definitions</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>Access Token: a short lived bearer token issued by the Authorization Server to the Client.</source>
            <target state="new">Access Token: a short lived bearer token issued by the Authorization Server to the Client.</target>
          </trans-unit>
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>The Access Token is presented by the Client to the Protected Resource to access protected resources.</source>
            <target state="new">The Access Token is presented by the Client to the Protected Resource to access protected resources.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>Authorization Server: an authorization resource that issues Access Tokens to Clients after successful authorization.</source>
            <target state="new">Authorization Server: an authorization resource that issues Access Tokens to Clients after successful authorization.</target>
          </trans-unit>
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>May be the same entity as the Protected Resource.</source>
            <target state="new">May be the same entity as the Protected Resource.</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>Client: an application that would like access to a Protected Resource.</source>
            <target state="new">Client: an application that would like access to a Protected Resource.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>Client Identifier: a value used by a Client to identify itself to the Authorization Server.</source>
            <target state="new">Client Identifier: a value used by a Client to identify itself to the Authorization Server.</target>
          </trans-unit>
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>This may be a human readable string or an opaque identifier.</source>
            <target state="new">This may be a human readable string or an opaque identifier.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>Client Secret: a secret used by a web application Client to establish ownership of the Client Identifier.</source>
            <target state="new">Client Secret: a secret used by a web application Client to establish ownership of the Client Identifier.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>Profile: a mechanism for a Client to obtain an Access Token from an Authorization Server.</source>
            <target state="new">Profile: a mechanism for a Client to obtain an Access Token from an Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>Protected Resource: a protected API that allows access via OAuth WRAP.</source>
            <target state="new">Protected Resource: a protected API that allows access via OAuth WRAP.</target>
          </trans-unit>
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>May be the same entity as the Authorization Server.</source>
            <target state="new">May be the same entity as the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>Refresh Token: a long lived bearer token used by a Client to acquire an Access Token from an Authorization Server.</source>
            <target state="new">Refresh Token: a long lived bearer token used by a Client to acquire an Access Token from an Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>User: an individual who has an account with the Authorization Server.</source>
            <target state="new">User: an individual who has an account with the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>Verification Code: a code used by a Client to verify the User has authorized the Client to have specific access to a Protected Resource.</source>
            <target state="new">Verification Code: a code used by a Client to verify the User has authorized the Client to have specific access to a Protected Resource.</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>3.1 URLs</source>
            <target state="new">3.1 URLs</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>Access Token URL: the Authorization Server URL at which an Access Token is requested by the Client.</source>
            <target state="new">Access Token URL: the Authorization Server URL at which an Access Token is requested by the Client.</target>
          </trans-unit>
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>The URL may accept a variety of parameters depending on the Profile.</source>
            <target state="new">The URL may accept a variety of parameters depending on the Profile.</target>
          </trans-unit>
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>A Refresh Token may also be returned to the Clien.</source>
            <target state="new">A Refresh Token may also be returned to the Clien.</target>
          </trans-unit>
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>This URL MUST be an HTTPS URL and MUST always be called with POST.</source>
            <target state="new">This URL MUST be an HTTPS URL and MUST always be called with POST.</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>Callback URL: the Client URL where the User will be redirected after an authorization request to the Authorization Server.</source>
            <target state="new">Callback URL: the Client URL where the User will be redirected after an authorization request to the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>Refresh Token URL: the Authorization Server URL at which a Refresh Token is presented in exchange for a new Access Token is requested.</source>
            <target state="new">Refresh Token URL: the Authorization Server URL at which a Refresh Token is presented in exchange for a new Access Token is requested.</target>
          </trans-unit>
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>This URL MUST be an HTTPS URL and MUST always be called with POST.</source>
            <target state="new">This URL MUST be an HTTPS URL and MUST always be called with POST.</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>User Authorization URL: the Authorization Server URL where the Client redirects the User to make an authorization request.</source>
            <target state="new">User Authorization URL: the Authorization Server URL where the Client redirects the User to make an authorization request.</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>4. Accessing a Protected Resource</source>
            <target state="new">4. Accessing a Protected Resource</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>Clients always present an Access Token to access a Protected Resource.</source>
            <target state="new">Clients always present an Access Token to access a Protected Resource.</target>
          </trans-unit>
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>See section  REF _Ref243973626 \r \h 5 for how the Client acquires an Access Token.</source>
            <target state="new">See section  REF _Ref243973626 \r \h 5 for how the Client acquires an Access Token.</target>
          </trans-unit>
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>Use of the Authorization header is RECOMMENDED, since HTTP implementations are aware that Authorization headers have special security properties and may require special treatment in caches and logs.</source>
            <target state="new">Use of the Authorization header is RECOMMENDED, since HTTP implementations are aware that Authorization headers have special security properties and may require special treatment in caches and logs.</target>
          </trans-unit>
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>Protected Resources SHOULD take precautions to ensure that Access Tokens are not inadvertently logged or captured.</source>
            <target state="new">Protected Resources SHOULD take precautions to ensure that Access Tokens are not inadvertently logged or captured.</target>
          </trans-unit>
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>In addition to the methods presented here, the Protected Resource MAY allow the Client to present the Access Token using any scheme agreed on by the Client and Protected Resource.</source>
            <target state="new">In addition to the methods presented here, the Protected Resource MAY allow the Client to present the Access Token using any scheme agreed on by the Client and Protected Resource.</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>4.1 Access Token</source>
            <target state="new">4.1 Access Token</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>The exact format of the Access Token is opaque to Clients and is out of scope of this specification.</source>
            <target state="new">The exact format of the Access Token is opaque to Clients and is out of scope of this specification.</target>
          </trans-unit>
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>However, Protected Resources MUST be able to verify that the Access Token was issued by a trusted Authorization Server and is still valid.</source>
            <target state="new">However, Protected Resources MUST be able to verify that the Access Token was issued by a trusted Authorization Server and is still valid.</target>
          </trans-unit>
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source>Access Tokens SHOULD periodically expire.</source>
            <target state="new">Access Tokens SHOULD periodically expire.</target>
          </trans-unit>
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>The expiry time of Access Tokens is determined as an appropriate balance between excessive resource utilization if too short and unauthorized access if too long.</source>
            <target state="new">The expiry time of Access Tokens is determined as an appropriate balance between excessive resource utilization if too short and unauthorized access if too long.</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>4.2 Client Calls Protected Resource Using HTTP Header</source>
            <target state="new">4.2 Client Calls Protected Resource Using HTTP Header</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>The Protected Resource SHOULD enable Clients to access the Protected Resource by including the Access Token in the HTTP Authorization header using the OAuth WRAP scheme with the following parameter:</source>
            <target state="new">The Protected Resource SHOULD enable Clients to access the Protected Resource by including the Access Token in the HTTP Authorization header using the OAuth WRAP scheme with the following parameter:</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>For example, if the Access Token is the string 123456789, the HTTP header would be: </source>
            <target state="new">For example, if the Access Token is the string 123456789, the HTTP header would be: </target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>If the Access Token has expired or is invalid, the Protected Resource MUST return:</source>
            <target state="new">If the Access Token has expired or is invalid, the Protected Resource MUST return:</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source>and the HTTP header:</source>
            <target state="new">and the HTTP header:</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>4.3 Client Calls Protected Resource Using URL Parameter</source>
            <target state="new">4.3 Client Calls Protected Resource Using URL Parameter</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source>The Protected Resource MAY allow the Client to access protected resources at the Protected Resource by including the following parameter in the URL:REQUIRED.</source>
            <target state="new">The Protected Resource MAY allow the Client to access protected resources at the Protected Resource by including the following parameter in the URL:REQUIRED.</target>
          </trans-unit>
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>The value of the Access TokenWWW-Authenticate: WRAP</source>
            <target state="new">The value of the Access TokenWWW-Authenticate: WRAP</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source>If the Access Token has expired or is invalid, the Protected Resource MUST return:</source>
            <target state="new">If the Access Token has expired or is invalid, the Protected Resource MUST return:</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>and the HTTP header:</source>
            <target state="new">and the HTTP header:</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source>4.4 Client Calls Protected Resource Using Post Parameter</source>
            <target state="new">4.4 Client Calls Protected Resource Using Post Parameter</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="130" translate="yes" xml:space="preserve">
            <source>The Protected Resource MAY allow the Client to access protected resources at the Protected Resource by including the following parameter in the body of a HTTP post message formatted as application/x-www-form-urlencoded per 17.13.4 of HTML 4.01:</source>
            <target state="new">The Protected Resource MAY allow the Client to access protected resources at the Protected Resource by including the following parameter in the body of a HTTP post message formatted as application/x-www-form-urlencoded per 17.13.4 of HTML 4.01:</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="131" translate="yes" xml:space="preserve">
            <source>If the Access Token has expired or is invalid, the Protected Resource MUST return:</source>
            <target state="new">If the Access Token has expired or is invalid, the Protected Resource MUST return:</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="132" translate="yes" xml:space="preserve">
            <source>and the HTTP header:</source>
            <target state="new">and the HTTP header:</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="133" translate="yes" xml:space="preserve">
            <source>5. Acquiring an Access Token</source>
            <target state="new">5. Acquiring an Access Token</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="134" translate="yes" xml:space="preserve">
            <source>An Authorization Server may support one or more protocol profiles that enable a Client to obtain an Access Token that can be used to access a Protected Resource.</source>
            <target state="new">An Authorization Server may support one or more protocol profiles that enable a Client to obtain an Access Token that can be used to access a Protected Resource.</target>
          </trans-unit>
          <trans-unit id="135" translate="yes" xml:space="preserve">
            <source>Client developers only need to implement the profile(s) that align with how their application will be deployed and are supported by the Authorization Server.</source>
            <target state="new">Client developers only need to implement the profile(s) that align with how their application will be deployed and are supported by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="136" translate="yes" xml:space="preserve">
            <source>Authorization Server developers only need to implement the profile(s) that are appropriate for them.</source>
            <target state="new">Authorization Server developers only need to implement the profile(s) that are appropriate for them.</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="137" translate="yes" xml:space="preserve">
            <source>Protected Resource developers do not implement a profile as the Client always interacts with the Protected Resource by presenting an Access Token.</source>
            <target state="new">Protected Resource developers do not implement a profile as the Client always interacts with the Protected Resource by presenting an Access Token.</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="138" translate="yes" xml:space="preserve">
            <source>Section 6 has general information about parameters passed to and from the Authorization Server.</source>
            <target state="new">Section 6 has general information about parameters passed to and from the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="139" translate="yes" xml:space="preserve">
            <source>5.1 Client Account and Password Profile</source>
            <target state="new">5.1 Client Account and Password Profile</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="140" translate="yes" xml:space="preserve">
            <source>This profile is suitable when the Client is an application calling the Protected Resource on behalf of an organization and the Authorization Server accepts account passwords for authentication.</source>
            <target state="new">This profile is suitable when the Client is an application calling the Protected Resource on behalf of an organization and the Authorization Server accepts account passwords for authentication.</target>
          </trans-unit>
          <trans-unit id="141" translate="yes" xml:space="preserve">
            <source>This enables the Authorization Server to use an existing authentication mechanism.</source>
            <target state="new">This enables the Authorization Server to use an existing authentication mechanism.</target>
          </trans-unit>
          <trans-unit id="142" translate="yes" xml:space="preserve">
            <source>This profile SHOULD NOT be used when the Client is acting on behalf of a user.</source>
            <target state="new">This profile SHOULD NOT be used when the Client is acting on behalf of a user.</target>
          </trans-unit>
          <trans-unit id="143" translate="yes" xml:space="preserve">
            <source>Profiles  REF _Ref240004725 \r \h 5.3,  REF _Ref242856744 \r \h 5.4 or  REF _Ref243464143 \r \h 5.5 are RECOMMENDED when a Client is acting on behalf of a User.</source>
            <target state="new">Profiles  REF _Ref240004725 \r \h 5.3,  REF _Ref242856744 \r \h 5.4 or  REF _Ref243464143 \r \h 5.5 are RECOMMENDED when a Client is acting on behalf of a User.</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="144" translate="yes" xml:space="preserve">
            <source>5.1.1 Provisioning</source>
            <target state="new">5.1.1 Provisioning</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="145" translate="yes" xml:space="preserve">
            <source>Prior to initiating this protocol profile, the Client MUST have obtained an account name and account password from the Authorization Server.</source>
            <target state="new">Prior to initiating this protocol profile, the Client MUST have obtained an account name and account password from the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="146" translate="yes" xml:space="preserve">
            <source>5.1.2 Client Requests Access Token</source>
            <target state="new">5.1.2 Client Requests Access Token</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="147" translate="yes" xml:space="preserve">
            <source>The Client makes an HTTPS request to the Authorization Server's Access Token URL using POST.</source>
            <target state="new">The Client makes an HTTPS request to the Authorization Server's Access Token URL using POST.</target>
          </trans-unit>
          <trans-unit id="148" translate="yes" xml:space="preserve">
            <source>The request contains the following parameters:</source>
            <target state="new">The request contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="149" translate="yes" xml:space="preserve">
            <source>wrap_nameREQUIRED.</source>
            <target state="new">wrap_nameREQUIRED.</target>
          </trans-unit>
          <trans-unit id="150" translate="yes" xml:space="preserve">
            <source>The account name</source>
            <target state="new">The account name</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="151" translate="yes" xml:space="preserve">
            <source>wrap_passwordREQUIRED.</source>
            <target state="new">wrap_passwordREQUIRED.</target>
          </trans-unit>
          <trans-unit id="152" translate="yes" xml:space="preserve">
            <source>The account password</source>
            <target state="new">The account password</target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="153" translate="yes" xml:space="preserve">
            <source>wrap_scopeOPTIONAL.</source>
            <target state="new">wrap_scopeOPTIONAL.</target>
          </trans-unit>
          <trans-unit id="154" translate="yes" xml:space="preserve">
            <source>The Authorization Server MAY define authorization scope values for the Client to include.</source>
            <target state="new">The Authorization Server MAY define authorization scope values for the Client to include.</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="155" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="156" translate="yes" xml:space="preserve">
            <source>5.1.3 Successful Access Token Response from Authorization Server</source>
            <target state="new">5.1.3 Successful Access Token Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="157" translate="yes" xml:space="preserve">
            <source>If successful, the Authorization Server returns:</source>
            <target state="new">If successful, the Authorization Server returns:</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="158" translate="yes" xml:space="preserve">
            <source>with the Access Token in the response body.</source>
            <target state="new">with the Access Token in the response body.</target>
          </trans-unit>
          <trans-unit id="159" translate="yes" xml:space="preserve">
            <source>The response body contains the following parameters:</source>
            <target state="new">The response body contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="160" translate="yes" xml:space="preserve">
            <source>wrap_access_tokenREQUIRED.</source>
            <target state="new">wrap_access_tokenREQUIRED.</target>
          </trans-unit>
          <trans-unit id="161" translate="yes" xml:space="preserve">
            <source>The Access Token.</source>
            <target state="new">The Access Token.</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="162" translate="yes" xml:space="preserve">
            <source>wrap_access_token_expires_inOPTIONAL.</source>
            <target state="new">wrap_access_token_expires_inOPTIONAL.</target>
          </trans-unit>
          <trans-unit id="163" translate="yes" xml:space="preserve">
            <source>The lifetime of the Access Token in seconds.</source>
            <target state="new">The lifetime of the Access Token in seconds.</target>
          </trans-unit>
          <trans-unit id="164" translate="yes" xml:space="preserve">
            <source>For example, 3600 represents one hour.</source>
            <target state="new">For example, 3600 represents one hour.</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="165" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="94">
          <trans-unit id="166" translate="yes" xml:space="preserve">
            <source>The Client may now use the Access Token to access the Protected Resource per § REF _Ref243980387 \r \h 4.</source>
            <target state="new">The Client may now use the Access Token to access the Protected Resource per § REF _Ref243980387 \r \h 4.</target>
          </trans-unit>
        </group>
        <group id="95">
          <trans-unit id="167" translate="yes" xml:space="preserve">
            <source>5.1.4 Unsuccessful Access Token Response from Authorization Server</source>
            <target state="new">5.1.4 Unsuccessful Access Token Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="96">
          <trans-unit id="168" translate="yes" xml:space="preserve">
            <source>If the Client account name and password are invalid, the Authorization Server MUST respond with: </source>
            <target state="new">If the Client account name and password are invalid, the Authorization Server MUST respond with: </target>
          </trans-unit>
        </group>
        <group id="97">
          <trans-unit id="169" translate="yes" xml:space="preserve">
            <source>and the HTTP header:</source>
            <target state="new">and the HTTP header:</target>
          </trans-unit>
        </group>
        <group id="98">
          <trans-unit id="170" translate="yes" xml:space="preserve">
            <source>The Client MUST obtain a valid account name and password before retrying the request.</source>
            <target state="new">The Client MUST obtain a valid account name and password before retrying the request.</target>
          </trans-unit>
        </group>
        <group id="99">
          <trans-unit id="171" translate="yes" xml:space="preserve">
            <source>5.1.5 Client Refreshes Access Token</source>
            <target state="new">5.1.5 Client Refreshes Access Token</target>
          </trans-unit>
        </group>
        <group id="100">
          <trans-unit id="172" translate="yes" xml:space="preserve">
            <source>Authorization Servers SHOULD issue Access Tokens that expire and require Clients to refresh them.</source>
            <target state="new">Authorization Servers SHOULD issue Access Tokens that expire and require Clients to refresh them.</target>
          </trans-unit>
          <trans-unit id="173" translate="yes" xml:space="preserve">
            <source>Upon receiving the HTTP 401 response when accessing protected resources per § REF _Ref243980387 \r \h 4, the Client should request a new Access Token by repeating  REF _Ref239996482 \r \h 5.1.2.</source>
            <target state="new">Upon receiving the HTTP 401 response when accessing protected resources per § REF _Ref243980387 \r \h 4, the Client should request a new Access Token by repeating  REF _Ref239996482 \r \h 5.1.2.</target>
          </trans-unit>
        </group>
        <group id="101">
          <trans-unit id="174" translate="yes" xml:space="preserve">
            <source>5.2 Assertion Profile</source>
            <target state="new">5.2 Assertion Profile</target>
          </trans-unit>
        </group>
        <group id="102">
          <trans-unit id="175" translate="yes" xml:space="preserve">
            <source>This profile is suitable when the Client is an application calling the Protected Resource on behalf of an organization and the Authorization Server accepts assertions for authentication.</source>
            <target state="new">This profile is suitable when the Client is an application calling the Protected Resource on behalf of an organization and the Authorization Server accepts assertions for authentication.</target>
          </trans-unit>
          <trans-unit id="176" translate="yes" xml:space="preserve">
            <source>This enables the Authorization Server to transform assertions issued by third parties into an Access Token.</source>
            <target state="new">This enables the Authorization Server to transform assertions issued by third parties into an Access Token.</target>
          </trans-unit>
          <trans-unit id="177" translate="yes" xml:space="preserve">
            <source>The contents and format of the assertion are agreed to by the assertion issuer and the Authorization Server and are out of scope of this specification.</source>
            <target state="new">The contents and format of the assertion are agreed to by the assertion issuer and the Authorization Server and are out of scope of this specification.</target>
          </trans-unit>
        </group>
        <group id="103">
          <trans-unit id="178" translate="yes" xml:space="preserve">
            <source>5.2.1 Provisioning</source>
            <target state="new">5.2.1 Provisioning</target>
          </trans-unit>
        </group>
        <group id="104">
          <trans-unit id="179" translate="yes" xml:space="preserve">
            <source>Prior to initiating this protocol profile, the Client MUST have a mechanism for obtained an assertion from an assertion issuer that can be presented to the Authorization Server for access to the Protected Resource</source>
            <target state="new">Prior to initiating this protocol profile, the Client MUST have a mechanism for obtained an assertion from an assertion issuer that can be presented to the Authorization Server for access to the Protected Resource</target>
          </trans-unit>
        </group>
        <group id="105">
          <trans-unit id="180" translate="yes" xml:space="preserve">
            <source>5.2.2 Client Obtains Assertion</source>
            <target state="new">5.2.2 Client Obtains Assertion</target>
          </trans-unit>
        </group>
        <group id="106">
          <trans-unit id="181" translate="yes" xml:space="preserve">
            <source>The Client obtains an assertion.</source>
            <target state="new">The Client obtains an assertion.</target>
          </trans-unit>
          <trans-unit id="182" translate="yes" xml:space="preserve">
            <source>The process for obtaining the assertion is defined by the assertion issuer and the Authorization Server, and is out of scope of this specification.</source>
            <target state="new">The process for obtaining the assertion is defined by the assertion issuer and the Authorization Server, and is out of scope of this specification.</target>
          </trans-unit>
        </group>
        <group id="107">
          <trans-unit id="183" translate="yes" xml:space="preserve">
            <source>5.2.3 Client Requests Access Token</source>
            <target state="new">5.2.3 Client Requests Access Token</target>
          </trans-unit>
        </group>
        <group id="108">
          <trans-unit id="184" translate="yes" xml:space="preserve">
            <source>The Client makes an HTTPS request to the Authorization Server's Access Token URL using POST.</source>
            <target state="new">The Client makes an HTTPS request to the Authorization Server's Access Token URL using POST.</target>
          </trans-unit>
          <trans-unit id="185" translate="yes" xml:space="preserve">
            <source>The request contains the following parameters:</source>
            <target state="new">The request contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="109">
          <trans-unit id="186" translate="yes" xml:space="preserve">
            <source>wrap_assertion_format  - REQUIRED.</source>
            <target state="new">wrap_assertion_format  - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="187" translate="yes" xml:space="preserve">
            <source>The format of the assertion as defined by the Authorization Server.</source>
            <target state="new">The format of the assertion as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="110">
          <trans-unit id="188" translate="yes" xml:space="preserve">
            <source>wrap_assertion  - REQUIRED.</source>
            <target state="new">wrap_assertion  - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="189" translate="yes" xml:space="preserve">
            <source>The assertion.</source>
            <target state="new">The assertion.</target>
          </trans-unit>
        </group>
        <group id="111">
          <trans-unit id="190" translate="yes" xml:space="preserve">
            <source>wrap_scope  - OPTIONAL.</source>
            <target state="new">wrap_scope  - OPTIONAL.</target>
          </trans-unit>
          <trans-unit id="191" translate="yes" xml:space="preserve">
            <source>The Authorization Server MAY define authorization scope values for the Client to include</source>
            <target state="new">The Authorization Server MAY define authorization scope values for the Client to include</target>
          </trans-unit>
        </group>
        <group id="112">
          <trans-unit id="192" translate="yes" xml:space="preserve">
            <source>Additional parameters - Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters - Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="113">
          <trans-unit id="193" translate="yes" xml:space="preserve">
            <source>5.2.4 Successful Access Token Response from Authorization Server</source>
            <target state="new">5.2.4 Successful Access Token Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="114">
          <trans-unit id="194" translate="yes" xml:space="preserve">
            <source>If successful, the Authorization Server returns:<ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph>with the Access Token in the response body.</source>
            <target state="new">If successful, the Authorization Server returns:<ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph>with the Access Token in the response body.</target>
          </trans-unit>
          <trans-unit id="195" translate="yes" xml:space="preserve">
            <source>The response body contains the following parameters:</source>
            <target state="new">The response body contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="115">
          <trans-unit id="196" translate="yes" xml:space="preserve">
            <source>wrap_access_token - REQUIRED.</source>
            <target state="new">wrap_access_token - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="197" translate="yes" xml:space="preserve">
            <source>The Access Token.</source>
            <target state="new">The Access Token.</target>
          </trans-unit>
        </group>
        <group id="116">
          <trans-unit id="198" translate="yes" xml:space="preserve">
            <source>wrap_access_token_expires_in - OPTIONAL.</source>
            <target state="new">wrap_access_token_expires_in - OPTIONAL.</target>
          </trans-unit>
          <trans-unit id="199" translate="yes" xml:space="preserve">
            <source>The lifetime of the Access Token in seconds.</source>
            <target state="new">The lifetime of the Access Token in seconds.</target>
          </trans-unit>
          <trans-unit id="200" translate="yes" xml:space="preserve">
            <source>For example, 3600 represents one hour.</source>
            <target state="new">For example, 3600 represents one hour.</target>
          </trans-unit>
        </group>
        <group id="117">
          <trans-unit id="201" translate="yes" xml:space="preserve">
            <source>Additional parameters - Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters - Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="118">
          <trans-unit id="202" translate="yes" xml:space="preserve">
            <source>The Client may now use the Access Token to access the Protected Resource per § REF _Ref243980387 \r \h 4.</source>
            <target state="new">The Client may now use the Access Token to access the Protected Resource per § REF _Ref243980387 \r \h 4.</target>
          </trans-unit>
        </group>
        <group id="119">
          <trans-unit id="203" translate="yes" xml:space="preserve">
            <source>5.2.5 Unsuccessful Access Token Response from Authorization Server</source>
            <target state="new">5.2.5 Unsuccessful Access Token Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="120">
          <trans-unit id="204" translate="yes" xml:space="preserve">
            <source>If the assertion is not valid, the Authorization Server MUST respond with:  <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph> and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></source>
            <target state="new">If the assertion is not valid, the Authorization Server MUST respond with:  <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph> and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="121">
          <trans-unit id="205" translate="yes" xml:space="preserve">
            <source>The Client MUST obtain a valid assertion by repeating  REF _Ref239996505 \r \h 5.2.2 before retrying the request.</source>
            <target state="new">The Client MUST obtain a valid assertion by repeating  REF _Ref239996505 \r \h 5.2.2 before retrying the request.</target>
          </trans-unit>
        </group>
        <group id="122">
          <trans-unit id="206" translate="yes" xml:space="preserve">
            <source>5.2.6 Client Refreshes Access Token</source>
            <target state="new">5.2.6 Client Refreshes Access Token</target>
          </trans-unit>
        </group>
        <group id="123">
          <trans-unit id="207" translate="yes" xml:space="preserve">
            <source>Authorization Servers SHOULD issue Access Tokens that expire and require Clients to refresh them.</source>
            <target state="new">Authorization Servers SHOULD issue Access Tokens that expire and require Clients to refresh them.</target>
          </trans-unit>
          <trans-unit id="208" translate="yes" xml:space="preserve">
            <source>Upon receiving the HTTP 401 response when accessing protected resources per § REF _Ref243980387 \r \h 4, the Client should request a new Access Token by repeating  REF _Ref239996518 \r \h 5.2.3.</source>
            <target state="new">Upon receiving the HTTP 401 response when accessing protected resources per § REF _Ref243980387 \r \h 4, the Client should request a new Access Token by repeating  REF _Ref239996518 \r \h 5.2.3.</target>
          </trans-unit>
        </group>
        <group id="124">
          <trans-unit id="209" translate="yes" xml:space="preserve">
            <source>5.3 Username and Password Profile</source>
            <target state="new">5.3 Username and Password Profile</target>
          </trans-unit>
        </group>
        <group id="125">
          <trans-unit id="210" translate="yes" xml:space="preserve">
            <source>This profile is suitable where the Client is an application the User has installed on their computer and the User uses a username and password to authenticate to the Authorization Server.</source>
            <target state="new">This profile is suitable where the Client is an application the User has installed on their computer and the User uses a username and password to authenticate to the Authorization Server.</target>
          </trans-unit>
          <trans-unit id="211" translate="yes" xml:space="preserve">
            <source>This profile enables a Client to act on behalf of the User without having to permanently store the User’s username and password.</source>
            <target state="new">This profile enables a Client to act on behalf of the User without having to permanently store the User’s username and password.</target>
          </trans-unit>
        </group>
        <group id="126">
          <trans-unit id="212" translate="yes" xml:space="preserve">
            <source>5.3.1 Provisioning</source>
            <target state="new">5.3.1 Provisioning</target>
          </trans-unit>
        </group>
        <group id="127">
          <trans-unit id="213" translate="yes" xml:space="preserve">
            <source>Prior to initiating this protocol profile, the Authorization Server MAY have required the Client to have obtained a Client Identifier from the Authorization Server.</source>
            <target state="new">Prior to initiating this protocol profile, the Authorization Server MAY have required the Client to have obtained a Client Identifier from the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="128">
          <trans-unit id="214" translate="yes" xml:space="preserve">
            <source>5.3.2 Client Obtains Username and Password</source>
            <target state="new">5.3.2 Client Obtains Username and Password</target>
          </trans-unit>
        </group>
        <group id="129">
          <trans-unit id="215" translate="yes" xml:space="preserve">
            <source>The Client obtains the User’s username and password from the user.</source>
            <target state="new">The Client obtains the User’s username and password from the user.</target>
          </trans-unit>
          <trans-unit id="216" translate="yes" xml:space="preserve">
            <source>The Client MUST discard the username and password once an Access Token has been obtained.</source>
            <target state="new">The Client MUST discard the username and password once an Access Token has been obtained.</target>
          </trans-unit>
        </group>
        <group id="130">
          <trans-unit id="217" translate="yes" xml:space="preserve">
            <source>5.3.3 Client Requests Access Token</source>
            <target state="new">5.3.3 Client Requests Access Token</target>
          </trans-unit>
        </group>
        <group id="131">
          <trans-unit id="218" translate="yes" xml:space="preserve">
            <source>The Client makes an HTTPS request to the Authorization Server’s Access Token URL using POST.</source>
            <target state="new">The Client makes an HTTPS request to the Authorization Server’s Access Token URL using POST.</target>
          </trans-unit>
          <trans-unit id="219" translate="yes" xml:space="preserve">
            <source>The request contains the following parameters:</source>
            <target state="new">The request contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="132">
          <trans-unit id="220" translate="yes" xml:space="preserve">
            <source>wrap_client_id - REQUIRED.</source>
            <target state="new">wrap_client_id - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="221" translate="yes" xml:space="preserve">
            <source>The Client Identifier</source>
            <target state="new">The Client Identifier</target>
          </trans-unit>
        </group>
        <group id="133">
          <trans-unit id="222" translate="yes" xml:space="preserve">
            <source>wrap_username - REQUIRED.</source>
            <target state="new">wrap_username - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="223" translate="yes" xml:space="preserve">
            <source>The User’s username</source>
            <target state="new">The User’s username</target>
          </trans-unit>
        </group>
        <group id="134">
          <trans-unit id="224" translate="yes" xml:space="preserve">
            <source>wrap_password - REQUIRED.</source>
            <target state="new">wrap_password - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="225" translate="yes" xml:space="preserve">
            <source>The User’s password</source>
            <target state="new">The User’s password</target>
          </trans-unit>
        </group>
        <group id="135">
          <trans-unit id="226" translate="yes" xml:space="preserve">
            <source>wrap_scope - OPTIONAL.</source>
            <target state="new">wrap_scope - OPTIONAL.</target>
          </trans-unit>
          <trans-unit id="227" translate="yes" xml:space="preserve">
            <source>The Authorization Server MAY define authorization scope values for the Client to include</source>
            <target state="new">The Authorization Server MAY define authorization scope values for the Client to include</target>
          </trans-unit>
        </group>
        <group id="136">
          <trans-unit id="228" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="137">
          <trans-unit id="229" translate="yes" xml:space="preserve">
            <source>5.3.4 Successful Access Token Response from Authorization Server</source>
            <target state="new">5.3.4 Successful Access Token Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="138">
          <trans-unit id="230" translate="yes" xml:space="preserve">
            <source>If successful, the Authorization Server returns: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph></source>
            <target state="new">If successful, the Authorization Server returns: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="139">
          <trans-unit id="231" translate="yes" xml:space="preserve">
            <source>with the Refresh Token and an Access Token in the response body.</source>
            <target state="new">with the Refresh Token and an Access Token in the response body.</target>
          </trans-unit>
          <trans-unit id="232" translate="yes" xml:space="preserve">
            <source>The response body contains the following parameters:</source>
            <target state="new">The response body contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="140">
          <trans-unit id="233" translate="yes" xml:space="preserve">
            <source>wrap_refresh_token - REQUIRED.</source>
            <target state="new">wrap_refresh_token - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="234" translate="yes" xml:space="preserve">
            <source>The Refresh Token</source>
            <target state="new">The Refresh Token</target>
          </trans-unit>
        </group>
        <group id="141">
          <trans-unit id="235" translate="yes" xml:space="preserve">
            <source>wrap_access_token - REQUIRED.</source>
            <target state="new">wrap_access_token - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="236" translate="yes" xml:space="preserve">
            <source>The Access Token.</source>
            <target state="new">The Access Token.</target>
          </trans-unit>
        </group>
        <group id="142">
          <trans-unit id="237" translate="yes" xml:space="preserve">
            <source>wrap_access_token_expires_in - OPTIONAL.</source>
            <target state="new">wrap_access_token_expires_in - OPTIONAL.</target>
          </trans-unit>
          <trans-unit id="238" translate="yes" xml:space="preserve">
            <source>The lifetime of the Access Token in seconds.</source>
            <target state="new">The lifetime of the Access Token in seconds.</target>
          </trans-unit>
          <trans-unit id="239" translate="yes" xml:space="preserve">
            <source>For example, 3600 represents one hour.</source>
            <target state="new">For example, 3600 represents one hour.</target>
          </trans-unit>
        </group>
        <group id="143">
          <trans-unit id="240" translate="yes" xml:space="preserve">
            <source>Additional parameters - Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters - Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="144">
          <trans-unit id="241" translate="yes" xml:space="preserve">
            <source>The Client MUST discard the User’s username and password.</source>
            <target state="new">The Client MUST discard the User’s username and password.</target>
          </trans-unit>
          <trans-unit id="242" translate="yes" xml:space="preserve">
            <source>The Client securely stores the Refresh Token for later use.</source>
            <target state="new">The Client securely stores the Refresh Token for later use.</target>
          </trans-unit>
          <trans-unit id="243" translate="yes" xml:space="preserve">
            <source>The Client may now use the Access Token to access the Protected Resource per § REF _Ref243980387 \r \h 4.</source>
            <target state="new">The Client may now use the Access Token to access the Protected Resource per § REF _Ref243980387 \r \h 4.</target>
          </trans-unit>
        </group>
        <group id="145">
          <trans-unit id="244" translate="yes" xml:space="preserve">
            <source>5.3.5 Unsuccessful Access Token Response from Authorization Server</source>
            <target state="new">5.3.5 Unsuccessful Access Token Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="146">
          <trans-unit id="245" translate="yes" xml:space="preserve">
            <source>The Authorization Server MUST verify User’s username and password.</source>
            <target state="new">The Authorization Server MUST verify User’s username and password.</target>
          </trans-unit>
          <trans-unit id="246" translate="yes" xml:space="preserve">
            <source>If the verification fails, the Authorization Server MUST respond with: <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph>  and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></source>
            <target state="new">If the verification fails, the Authorization Server MUST respond with: <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph>  and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="147">
          <trans-unit id="247" translate="yes" xml:space="preserve">
            <source>The Client needs to obtain a valid username and password from the User per  REF _Ref239996429 \r \h  \* MERGEFORMAT 5.3.2.</source>
            <target state="new">The Client needs to obtain a valid username and password from the User per  REF _Ref239996429 \r \h  \* MERGEFORMAT 5.3.2.</target>
          </trans-unit>
        </group>
        <group id="148">
          <trans-unit id="248" translate="yes" xml:space="preserve">
            <source>5.3.6 Verification URL Response from Authorization Server</source>
            <target state="new">5.3.6 Verification URL Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="149">
          <trans-unit id="249" translate="yes" xml:space="preserve">
            <source>If the Authorization Server determines that the Client may be malicious, the Authorization Server MAY require the Client to instruct the User to visit a Verification URL.</source>
            <target state="new">If the Authorization Server determines that the Client may be malicious, the Authorization Server MAY require the Client to instruct the User to visit a Verification URL.</target>
          </trans-unit>
          <trans-unit id="250" translate="yes" xml:space="preserve">
            <source>The Authorization Server communicates its requirement by responding to the Client’s Access Token request with the following: <ph id="1">&lt;codeInline&gt;HTTP 400 Bad Request&lt;/codeInline&gt;</ph> and the body of the Authorization Server response contains the following parameter:  <ph id="2">&lt;codeInline&gt;wrap_verification_url&lt;/codeInline&gt;</ph> - REQUIRED.</source>
            <target state="new">The Authorization Server communicates its requirement by responding to the Client’s Access Token request with the following: <ph id="1">&lt;codeInline&gt;HTTP 400 Bad Request&lt;/codeInline&gt;</ph> and the body of the Authorization Server response contains the following parameter:  <ph id="2">&lt;codeInline&gt;wrap_verification_url&lt;/codeInline&gt;</ph> - REQUIRED.</target>
          </trans-unit>
        </group>
        <group id="150">
          <trans-unit id="251" translate="yes" xml:space="preserve">
            <source>The verification URL that the Client MUST either load in the User’s browser, or display for the User to enter into a browser.</source>
            <target state="new">The verification URL that the Client MUST either load in the User’s browser, or display for the User to enter into a browser.</target>
          </trans-unit>
        </group>
        <group id="151">
          <trans-unit id="252" translate="yes" xml:space="preserve">
            <source>The Client MUST then wait for the User to indicate they have successfully completed the verification process at the Authorization Server and attempt to obtain a Refresh Token per  REF _Ref243735475 \r \h 5.3.3 again.</source>
            <target state="new">The Client MUST then wait for the User to indicate they have successfully completed the verification process at the Authorization Server and attempt to obtain a Refresh Token per  REF _Ref243735475 \r \h 5.3.3 again.</target>
          </trans-unit>
        </group>
        <group id="152">
          <trans-unit id="253" translate="yes" xml:space="preserve">
            <source>5.3.7 CAPTCHA  Response from Authorization Server </source>
            <target state="new">5.3.7 CAPTCHA  Response from Authorization Server </target>
          </trans-unit>
        </group>
        <group id="153">
          <trans-unit id="254" translate="yes" xml:space="preserve">
            <source>If the Authorization Server determines that the Client may be malicious, the Authorization Server MAY require the Client to have the User solve a CAPTCHA Puzzle.</source>
            <target state="new">If the Authorization Server determines that the Client may be malicious, the Authorization Server MAY require the Client to have the User solve a CAPTCHA Puzzle.</target>
          </trans-unit>
          <trans-unit id="255" translate="yes" xml:space="preserve">
            <source>The Authorization Server communicates its requirement by responding to the Client’s Access Token request with the following:  <ph id="1">&lt;codeInline&gt;HTTP 400 Bad Request&lt;/codeInline&gt;</ph> and the body of the Authorization Server response contains the following parameter:  <ph id="2">&lt;codeInline&gt;wrap_captcha_url&lt;/codeInline&gt;</ph> - REQUIRED.</source>
            <target state="new">The Authorization Server communicates its requirement by responding to the Client’s Access Token request with the following:  <ph id="1">&lt;codeInline&gt;HTTP 400 Bad Request&lt;/codeInline&gt;</ph> and the body of the Authorization Server response contains the following parameter:  <ph id="2">&lt;codeInline&gt;wrap_captcha_url&lt;/codeInline&gt;</ph> - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="256" translate="yes" xml:space="preserve">
            <source>The URL to the CAPTCHA puzzle.</source>
            <target state="new">The URL to the CAPTCHA puzzle.</target>
          </trans-unit>
        </group>
        <group id="154">
          <trans-unit id="257" translate="yes" xml:space="preserve">
            <source>The Client MUST present the User with the CAPTCHA puzzle and prompt for a solution.</source>
            <target state="new">The Client MUST present the User with the CAPTCHA puzzle and prompt for a solution.</target>
          </trans-unit>
          <trans-unit id="258" translate="yes" xml:space="preserve">
            <source>The Client then MAY attempt to obtain an Access Token per  REF _Ref243735475 \r \h 5.3.3 again, including the following additional parameter: <ph id="1">&lt;codeInline&gt;wrap_captcha_url&lt;/codeInline&gt;</ph> - REQUIRED.</source>
            <target state="new">The Client then MAY attempt to obtain an Access Token per  REF _Ref243735475 \r \h 5.3.3 again, including the following additional parameter: <ph id="1">&lt;codeInline&gt;wrap_captcha_url&lt;/codeInline&gt;</ph> - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="259" translate="yes" xml:space="preserve">
            <source>The URL to the CAPTCHA puzzle received from the Authorization Server <ph id="1">&lt;codeInline&gt;wrap_captcha_solution&lt;/codeInline&gt;</ph> - REQUIRED.</source>
            <target state="new">The URL to the CAPTCHA puzzle received from the Authorization Server <ph id="1">&lt;codeInline&gt;wrap_captcha_solution&lt;/codeInline&gt;</ph> - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="260" translate="yes" xml:space="preserve">
            <source>The solution string to the CAPTCHA puzzle.</source>
            <target state="new">The solution string to the CAPTCHA puzzle.</target>
          </trans-unit>
        </group>
        <group id="155">
          <trans-unit id="261" translate="yes" xml:space="preserve">
            <source>5.3.8 Client Refreshes Access Token</source>
            <target state="new">5.3.8 Client Refreshes Access Token</target>
          </trans-unit>
        </group>
        <group id="156">
          <trans-unit id="262" translate="yes" xml:space="preserve">
            <source>Refreshing an Access Token is the same in  REF _Ref240004725 \r \h 5.3,  REF _Ref242856744 \r \h 5.4, and  REF _Ref243464143 \r \h 5.5.</source>
            <target state="new">Refreshing an Access Token is the same in  REF _Ref240004725 \r \h 5.3,  REF _Ref242856744 \r \h 5.4, and  REF _Ref243464143 \r \h 5.5.</target>
          </trans-unit>
          <trans-unit id="263" translate="yes" xml:space="preserve">
            <source>Authorization Servers SHOULD issue Access Tokens that expire and require Clients to refresh them.</source>
            <target state="new">Authorization Servers SHOULD issue Access Tokens that expire and require Clients to refresh them.</target>
          </trans-unit>
          <trans-unit id="264" translate="yes" xml:space="preserve">
            <source>Upon receiving the HTTP 401 response when accessing protected resources per § REF _Ref243980387 \r \h 4, the Client makes an HTTPS request to the Authorization Server's Refresh Token URL using POST.</source>
            <target state="new">Upon receiving the HTTP 401 response when accessing protected resources per § REF _Ref243980387 \r \h 4, the Client makes an HTTPS request to the Authorization Server's Refresh Token URL using POST.</target>
          </trans-unit>
          <trans-unit id="265" translate="yes" xml:space="preserve">
            <source>The request contains the following parameters:</source>
            <target state="new">The request contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="157">
          <trans-unit id="266" translate="yes" xml:space="preserve">
            <source>wrap_refresh_token - REQUIRED.</source>
            <target state="new">wrap_refresh_token - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="267" translate="yes" xml:space="preserve">
            <source>The Refresh Token that was received in  REF _Ref239999415 \r \h 5.3.4.</source>
            <target state="new">The Refresh Token that was received in  REF _Ref239999415 \r \h 5.3.4.</target>
          </trans-unit>
        </group>
        <group id="158">
          <trans-unit id="268" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="159">
          <trans-unit id="269" translate="yes" xml:space="preserve">
            <source>5.3.9 Successful Access Token Refresh</source>
            <target state="new">5.3.9 Successful Access Token Refresh</target>
          </trans-unit>
        </group>
        <group id="160">
          <trans-unit id="270" translate="yes" xml:space="preserve">
            <source>If successful, the Authorization Server returns: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph>  with the Access Token in the response body.</source>
            <target state="new">If successful, the Authorization Server returns: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph>  with the Access Token in the response body.</target>
          </trans-unit>
          <trans-unit id="271" translate="yes" xml:space="preserve">
            <source>The response body contains the following parameters:</source>
            <target state="new">The response body contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="161">
          <trans-unit id="272" translate="yes" xml:space="preserve">
            <source>wrap_access_token - REQUIRED.</source>
            <target state="new">wrap_access_token - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="273" translate="yes" xml:space="preserve">
            <source>The Access Token.</source>
            <target state="new">The Access Token.</target>
          </trans-unit>
        </group>
        <group id="162">
          <trans-unit id="274" translate="yes" xml:space="preserve">
            <source>wrap_access_token_expires_in - OPTIONAL.</source>
            <target state="new">wrap_access_token_expires_in - OPTIONAL.</target>
          </trans-unit>
          <trans-unit id="275" translate="yes" xml:space="preserve">
            <source>The lifetime of the Access Token in seconds.</source>
            <target state="new">The lifetime of the Access Token in seconds.</target>
          </trans-unit>
          <trans-unit id="276" translate="yes" xml:space="preserve">
            <source>For example, 3600 represents one hour.</source>
            <target state="new">For example, 3600 represents one hour.</target>
          </trans-unit>
        </group>
        <group id="163">
          <trans-unit id="277" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="164">
          <trans-unit id="278" translate="yes" xml:space="preserve">
            <source>5.3.10 Unsuccessful Access Token Refresh</source>
            <target state="new">5.3.10 Unsuccessful Access Token Refresh</target>
          </trans-unit>
        </group>
        <group id="165">
          <trans-unit id="279" translate="yes" xml:space="preserve">
            <source>The Authorization Server MUST verify the Refresh Token.</source>
            <target state="new">The Authorization Server MUST verify the Refresh Token.</target>
          </trans-unit>
          <trans-unit id="280" translate="yes" xml:space="preserve">
            <source>If the verification fails, the Authorization Server MUST respond with  <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph>  and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></source>
            <target state="new">If the verification fails, the Authorization Server MUST respond with  <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph>  and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="166">
          <trans-unit id="281" translate="yes" xml:space="preserve">
            <source>The Client MUST again request authorization from the User by prompting for the User’s username and password per  REF _Ref239996429 \r \h 5.3.2.</source>
            <target state="new">The Client MUST again request authorization from the User by prompting for the User’s username and password per  REF _Ref239996429 \r \h 5.3.2.</target>
          </trans-unit>
        </group>
        <group id="167">
          <trans-unit id="282" translate="yes" xml:space="preserve">
            <source>5.4 Web App Profile</source>
            <target state="new">5.4 Web App Profile</target>
          </trans-unit>
        </group>
        <group id="168">
          <trans-unit id="283" translate="yes" xml:space="preserve">
            <source>This profile is suitable when the Client is a web application calling the Protected Resource on behalf of a User.</source>
            <target state="new">This profile is suitable when the Client is a web application calling the Protected Resource on behalf of a User.</target>
          </trans-unit>
          <trans-unit id="284" translate="yes" xml:space="preserve">
            <source>This profile enables a Client to act on behalf of the User without acquiring a User’s credentials.</source>
            <target state="new">This profile enables a Client to act on behalf of the User without acquiring a User’s credentials.</target>
          </trans-unit>
        </group>
        <group id="169">
          <trans-unit id="285" translate="yes" xml:space="preserve">
            <source>5.4.1 Provisioning </source>
            <target state="new">5.4.1 Provisioning </target>
          </trans-unit>
        </group>
        <group id="170">
          <trans-unit id="286" translate="yes" xml:space="preserve">
            <source>Prior to initiating this protocol profile, the Client MUST have obtained a Client Identifier and Client Secret from the Authorization Server.</source>
            <target state="new">Prior to initiating this protocol profile, the Client MUST have obtained a Client Identifier and Client Secret from the Authorization Server.</target>
          </trans-unit>
          <trans-unit id="287" translate="yes" xml:space="preserve">
            <source>The Authorization Server MAY have also required the Client to register the Callback URL.</source>
            <target state="new">The Authorization Server MAY have also required the Client to register the Callback URL.</target>
          </trans-unit>
        </group>
        <group id="171">
          <trans-unit id="288" translate="yes" xml:space="preserve">
            <source>5.4.2 Client Directs the User to the Authorization Server</source>
            <target state="new">5.4.2 Client Directs the User to the Authorization Server</target>
          </trans-unit>
        </group>
        <group id="172">
          <trans-unit id="289" translate="yes" xml:space="preserve">
            <source>The Client initiates an authorization request by redirecting the User’s browser to the Authorization Server's User Authorization URL, with the following parameters: </source>
            <target state="new">The Client initiates an authorization request by redirecting the User’s browser to the Authorization Server's User Authorization URL, with the following parameters: </target>
          </trans-unit>
        </group>
        <group id="173">
          <trans-unit id="290" translate="yes" xml:space="preserve">
            <source>wrap_client_id - REQUIRED.</source>
            <target state="new">wrap_client_id - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="291" translate="yes" xml:space="preserve">
            <source>The Client Identifier</source>
            <target state="new">The Client Identifier</target>
          </trans-unit>
        </group>
        <group id="174">
          <trans-unit id="292" translate="yes" xml:space="preserve">
            <source>wrap_callback - REQUIRED.</source>
            <target state="new">wrap_callback - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="293" translate="yes" xml:space="preserve">
            <source>The Callback URL.</source>
            <target state="new">The Callback URL.</target>
          </trans-unit>
          <trans-unit id="294" translate="yes" xml:space="preserve">
            <source>An absolute URL to which the Authorization Server will redirect the User back after the User has approved the authorization request.</source>
            <target state="new">An absolute URL to which the Authorization Server will redirect the User back after the User has approved the authorization request.</target>
          </trans-unit>
          <trans-unit id="295" translate="yes" xml:space="preserve">
            <source>Authorization Servers MAY require that the wrap_callback URL match the previously registered value for the Client Identifier.</source>
            <target state="new">Authorization Servers MAY require that the wrap_callback URL match the previously registered value for the Client Identifier.</target>
          </trans-unit>
        </group>
        <group id="175">
          <trans-unit id="296" translate="yes" xml:space="preserve">
            <source>wrap_client_state - OPTIONAL.</source>
            <target state="new">wrap_client_state - OPTIONAL.</target>
          </trans-unit>
          <trans-unit id="297" translate="yes" xml:space="preserve">
            <source>An opaque value that Clients can use to maintain state associated with this request.</source>
            <target state="new">An opaque value that Clients can use to maintain state associated with this request.</target>
          </trans-unit>
          <trans-unit id="298" translate="yes" xml:space="preserve">
            <source>If this value is present, the Authorization Server MUST return it to the Client's Callback URL.</source>
            <target state="new">If this value is present, the Authorization Server MUST return it to the Client's Callback URL.</target>
          </trans-unit>
        </group>
        <group id="176">
          <trans-unit id="299" translate="yes" xml:space="preserve">
            <source>wrap_scope - OPTIONAL.</source>
            <target state="new">wrap_scope - OPTIONAL.</target>
          </trans-unit>
          <trans-unit id="300" translate="yes" xml:space="preserve">
            <source>The Authorization Server MAY define authorization scope values for the Client to include</source>
            <target state="new">The Authorization Server MAY define authorization scope values for the Client to include</target>
          </trans-unit>
        </group>
        <group id="177">
          <trans-unit id="301" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="178">
          <trans-unit id="302" translate="yes" xml:space="preserve">
            <source>5.4.3 Authorization Server Confirms Delegation Request with User</source>
            <target state="new">5.4.3 Authorization Server Confirms Delegation Request with User</target>
          </trans-unit>
        </group>
        <group id="179">
          <trans-unit id="303" translate="yes" xml:space="preserve">
            <source>Upon receiving an authorization request from the Client by a redirection of the User’s browser, the Authorization Server authenticates the user, presents the User with the Protected Resource access that will be granted to the Client, and prompts the User to confirm the request.</source>
            <target state="new">Upon receiving an authorization request from the Client by a redirection of the User’s browser, the Authorization Server authenticates the user, presents the User with the Protected Resource access that will be granted to the Client, and prompts the User to confirm the request.</target>
          </trans-unit>
          <trans-unit id="304" translate="yes" xml:space="preserve">
            <source>If the User denies the request, the Authorization Server MAY allow the User to return to the Client Callback URL with the following parameters added:</source>
            <target state="new">If the User denies the request, the Authorization Server MAY allow the User to return to the Client Callback URL with the following parameters added:</target>
          </trans-unit>
        </group>
        <group id="180">
          <trans-unit id="305" translate="yes" xml:space="preserve">
            <source>wrap_error_reason - REQUIRED.</source>
            <target state="new">wrap_error_reason - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="306" translate="yes" xml:space="preserve">
            <source>Value is user_denied</source>
            <target state="new">Value is user_denied</target>
          </trans-unit>
        </group>
        <group id="181">
          <trans-unit id="307" translate="yes" xml:space="preserve">
            <source>wrap_client_state - REQUIRED if the Client sent the value in the authorization request in  REF _Ref239996331 \r \h 5.4.2</source>
            <target state="new">wrap_client_state - REQUIRED if the Client sent the value in the authorization request in  REF _Ref239996331 \r \h 5.4.2</target>
          </trans-unit>
        </group>
        <group id="182">
          <trans-unit id="308" translate="yes" xml:space="preserve">
            <source>If the User approves the request, the Authorization Server generates a Verification Code and associates it with the Client Identifier and Callback URL.</source>
            <target state="new">If the User approves the request, the Authorization Server generates a Verification Code and associates it with the Client Identifier and Callback URL.</target>
          </trans-unit>
        </group>
        <group id="183">
          <trans-unit id="309" translate="yes" xml:space="preserve">
            <source>5.4.4 Authorization Server Directs User back to the Client</source>
            <target state="new">5.4.4 Authorization Server Directs User back to the Client</target>
          </trans-unit>
        </group>
        <group id="184">
          <trans-unit id="310" translate="yes" xml:space="preserve">
            <source>If the User approved the request, the Authorization Server MUST redirect the User back to the Callback URL, with the following parameters added: </source>
            <target state="new">If the User approved the request, the Authorization Server MUST redirect the User back to the Callback URL, with the following parameters added: </target>
          </trans-unit>
        </group>
        <group id="185">
          <trans-unit id="311" translate="yes" xml:space="preserve">
            <source>wrap_verification_codeREQUIRED.</source>
            <target state="new">wrap_verification_codeREQUIRED.</target>
          </trans-unit>
          <trans-unit id="312" translate="yes" xml:space="preserve">
            <source>The Verification Code.</source>
            <target state="new">The Verification Code.</target>
          </trans-unit>
        </group>
        <group id="186">
          <trans-unit id="313" translate="yes" xml:space="preserve">
            <source>wrap_client_state - REQUIRED if the Client sent the value in the authorization request in  REF _Ref239996331 \r \h 5.4.2</source>
            <target state="new">wrap_client_state - REQUIRED if the Client sent the value in the authorization request in  REF _Ref239996331 \r \h 5.4.2</target>
          </trans-unit>
        </group>
        <group id="187">
          <trans-unit id="314" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="188">
          <trans-unit id="315" translate="yes" xml:space="preserve">
            <source>5.4.5 Client Requests Access Token </source>
            <target state="new">5.4.5 Client Requests Access Token </target>
          </trans-unit>
        </group>
        <group id="189">
          <trans-unit id="316" translate="yes" xml:space="preserve">
            <source>The Client makes an HTTPS request to the Authorization Server's Access Token URL, using POST.</source>
            <target state="new">The Client makes an HTTPS request to the Authorization Server's Access Token URL, using POST.</target>
          </trans-unit>
          <trans-unit id="317" translate="yes" xml:space="preserve">
            <source>The request contains the following parameters in the body of the request:</source>
            <target state="new">The request contains the following parameters in the body of the request:</target>
          </trans-unit>
        </group>
        <group id="190">
          <trans-unit id="318" translate="yes" xml:space="preserve">
            <source>wrap_client_idREQUIRED.</source>
            <target state="new">wrap_client_idREQUIRED.</target>
          </trans-unit>
          <trans-unit id="319" translate="yes" xml:space="preserve">
            <source>The Client Identifier</source>
            <target state="new">The Client Identifier</target>
          </trans-unit>
        </group>
        <group id="191">
          <trans-unit id="320" translate="yes" xml:space="preserve">
            <source>wrap_client_secretREQUIRED.</source>
            <target state="new">wrap_client_secretREQUIRED.</target>
          </trans-unit>
          <trans-unit id="321" translate="yes" xml:space="preserve">
            <source>The Client Secret</source>
            <target state="new">The Client Secret</target>
          </trans-unit>
        </group>
        <group id="192">
          <trans-unit id="322" translate="yes" xml:space="preserve">
            <source>wrap_verification_codeREQUIRED.</source>
            <target state="new">wrap_verification_codeREQUIRED.</target>
          </trans-unit>
          <trans-unit id="323" translate="yes" xml:space="preserve">
            <source>The Verification Code that was passed back in the callback URL.</source>
            <target state="new">The Verification Code that was passed back in the callback URL.</target>
          </trans-unit>
        </group>
        <group id="193">
          <trans-unit id="324" translate="yes" xml:space="preserve">
            <source>wrap_callbackREQUIRED.</source>
            <target state="new">wrap_callbackREQUIRED.</target>
          </trans-unit>
          <trans-unit id="325" translate="yes" xml:space="preserve">
            <source>The Callback URL used to obtain the Verification Code.</source>
            <target state="new">The Callback URL used to obtain the Verification Code.</target>
          </trans-unit>
        </group>
        <group id="194">
          <trans-unit id="326" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="195">
          <trans-unit id="327" translate="yes" xml:space="preserve">
            <source>5.4.6 Successful Access Token Response from Authorization Server</source>
            <target state="new">5.4.6 Successful Access Token Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="196">
          <trans-unit id="328" translate="yes" xml:space="preserve">
            <source>After receiving the Access Token request, the Authorization Server verifies the request as follows:</source>
            <target state="new">After receiving the Access Token request, the Authorization Server verifies the request as follows:</target>
          </trans-unit>
        </group>
        <group id="197">
          <trans-unit id="329" translate="yes" xml:space="preserve">
            <source>The Client Secret MUST match the Client Identifier</source>
            <target state="new">The Client Secret MUST match the Client Identifier</target>
          </trans-unit>
        </group>
        <group id="198">
          <trans-unit id="330" translate="yes" xml:space="preserve">
            <source>The Client Identifier MUST match the Client Identifier from the authorization redirect</source>
            <target state="new">The Client Identifier MUST match the Client Identifier from the authorization redirect</target>
          </trans-unit>
        </group>
        <group id="199">
          <trans-unit id="331" translate="yes" xml:space="preserve">
            <source>The Verification Code MUST match the Client Identifier from the authorization redirect</source>
            <target state="new">The Verification Code MUST match the Client Identifier from the authorization redirect</target>
          </trans-unit>
        </group>
        <group id="200">
          <trans-unit id="332" translate="yes" xml:space="preserve">
            <source>The Callback URL MUST match the Callback URL from the authorization redirect</source>
            <target state="new">The Callback URL MUST match the Callback URL from the authorization redirect</target>
          </trans-unit>
        </group>
        <group id="201">
          <trans-unit id="333" translate="yes" xml:space="preserve">
            <source>The Verification Code MUST not have expired</source>
            <target state="new">The Verification Code MUST not have expired</target>
          </trans-unit>
        </group>
        <group id="202">
          <trans-unit id="334" translate="yes" xml:space="preserve">
            <source>The Authorization Server MAY also require that a Verification Code is not reused.</source>
            <target state="new">The Authorization Server MAY also require that a Verification Code is not reused.</target>
          </trans-unit>
        </group>
        <group id="203">
          <trans-unit id="335" translate="yes" xml:space="preserve">
            <source>If verification is successful, the Authorization Server returns: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph> with the Refresh Token and a Access Token in the response body.</source>
            <target state="new">If verification is successful, the Authorization Server returns: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph> with the Refresh Token and a Access Token in the response body.</target>
          </trans-unit>
          <trans-unit id="336" translate="yes" xml:space="preserve">
            <source>The response body contains the following parameters:</source>
            <target state="new">The response body contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="204">
          <trans-unit id="337" translate="yes" xml:space="preserve">
            <source>wrap_refresh_tokenREQUIRED.</source>
            <target state="new">wrap_refresh_tokenREQUIRED.</target>
          </trans-unit>
          <trans-unit id="338" translate="yes" xml:space="preserve">
            <source>The Refresh Token</source>
            <target state="new">The Refresh Token</target>
          </trans-unit>
        </group>
        <group id="205">
          <trans-unit id="339" translate="yes" xml:space="preserve">
            <source>wrap_access_tokenREQUIRED.</source>
            <target state="new">wrap_access_tokenREQUIRED.</target>
          </trans-unit>
          <trans-unit id="340" translate="yes" xml:space="preserve">
            <source>The Access Token.</source>
            <target state="new">The Access Token.</target>
          </trans-unit>
        </group>
        <group id="206">
          <trans-unit id="341" translate="yes" xml:space="preserve">
            <source>wrap_access_token_expires_inOPTIONAL.</source>
            <target state="new">wrap_access_token_expires_inOPTIONAL.</target>
          </trans-unit>
          <trans-unit id="342" translate="yes" xml:space="preserve">
            <source>The lifetime of the Access Token in seconds.</source>
            <target state="new">The lifetime of the Access Token in seconds.</target>
          </trans-unit>
          <trans-unit id="343" translate="yes" xml:space="preserve">
            <source>For example, 3600 represents one hour.</source>
            <target state="new">For example, 3600 represents one hour.</target>
          </trans-unit>
        </group>
        <group id="207">
          <trans-unit id="344" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="208">
          <trans-unit id="345" translate="yes" xml:space="preserve">
            <source>The Client securely stores the Refresh Token for later use.</source>
            <target state="new">The Client securely stores the Refresh Token for later use.</target>
          </trans-unit>
          <trans-unit id="346" translate="yes" xml:space="preserve">
            <source>The Client may now use the Access Token to access the Protected Resource per § REF _Ref243980387 \r \h 4.</source>
            <target state="new">The Client may now use the Access Token to access the Protected Resource per § REF _Ref243980387 \r \h 4.</target>
          </trans-unit>
        </group>
        <group id="209">
          <trans-unit id="347" translate="yes" xml:space="preserve">
            <source>5.4.7 Unsuccessful Access Token Response from Authorization Server</source>
            <target state="new">5.4.7 Unsuccessful Access Token Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="210">
          <trans-unit id="348" translate="yes" xml:space="preserve">
            <source>The Authorization Server MUST first verify the Client Identifier and Client Secret.</source>
            <target state="new">The Authorization Server MUST first verify the Client Identifier and Client Secret.</target>
          </trans-unit>
          <trans-unit id="349" translate="yes" xml:space="preserve">
            <source>If they are invalid, the Authorization Server MUST respond with: <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph> and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></source>
            <target state="new">If they are invalid, the Authorization Server MUST respond with: <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph> and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="211">
          <trans-unit id="350" translate="yes" xml:space="preserve">
            <source>The Client MUST obtain a valid Client Identifier and Client Secret before retrying the request.</source>
            <target state="new">The Client MUST obtain a valid Client Identifier and Client Secret before retrying the request.</target>
          </trans-unit>
        </group>
        <group id="212">
          <trans-unit id="351" translate="yes" xml:space="preserve">
            <source>The Authorization Server MUST then verify that the Callback URL and Verification Code are associated with the Client Identifier.</source>
            <target state="new">The Authorization Server MUST then verify that the Callback URL and Verification Code are associated with the Client Identifier.</target>
          </trans-unit>
          <trans-unit id="352" translate="yes" xml:space="preserve">
            <source>If the verification fails, the Authorization Server MUST respond with: <ph id="1">&lt;codeInline&gt;HTTP 400 Bad Request&lt;/codeInline&gt;</ph>  and the body of the Authorization Server response contains the following parameters:</source>
            <target state="new">If the verification fails, the Authorization Server MUST respond with: <ph id="1">&lt;codeInline&gt;HTTP 400 Bad Request&lt;/codeInline&gt;</ph>  and the body of the Authorization Server response contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="213">
          <trans-unit id="353" translate="yes" xml:space="preserve">
            <source>wrap_error_reasonOPTIONAL.</source>
            <target state="new">wrap_error_reasonOPTIONAL.</target>
          </trans-unit>
          <trans-unit id="354" translate="yes" xml:space="preserve">
            <source>If all the parameters are valid except that the Verification Code has expired or been revoked, then it is RECOMMENDED that this parameter be included and if so, then the value MUST be: <ph id="1">&lt;codeInline&gt;expired_verification_code&lt;/codeInline&gt;</ph> This enables the Client to detect it needs a new Verification Code and to direct the User to the Authorization Server per  REF _Ref239996331 \r \h 5.4.2.If the Callback URL is invalid, the value MUST be: <ph id="2">&lt;codeInline&gt;invalid_callback&lt;/codeInline&gt;</ph></source>
            <target state="new">If all the parameters are valid except that the Verification Code has expired or been revoked, then it is RECOMMENDED that this parameter be included and if so, then the value MUST be: <ph id="1">&lt;codeInline&gt;expired_verification_code&lt;/codeInline&gt;</ph> This enables the Client to detect it needs a new Verification Code and to direct the User to the Authorization Server per  REF _Ref239996331 \r \h 5.4.2.If the Callback URL is invalid, the value MUST be: <ph id="2">&lt;codeInline&gt;invalid_callback&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="214">
          <trans-unit id="355" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="215">
          <trans-unit id="356" translate="yes" xml:space="preserve">
            <source>5.4.8 Client Refreshes Access Token</source>
            <target state="new">5.4.8 Client Refreshes Access Token</target>
          </trans-unit>
        </group>
        <group id="216">
          <trans-unit id="357" translate="yes" xml:space="preserve">
            <source>Refreshing an Access Token is the same in  REF _Ref240004725 \r \h 5.3,  REF _Ref242856744 \r \h 5.4, and  REF _Ref243464143 \r \h 5.5.</source>
            <target state="new">Refreshing an Access Token is the same in  REF _Ref240004725 \r \h 5.3,  REF _Ref242856744 \r \h 5.4, and  REF _Ref243464143 \r \h 5.5.</target>
          </trans-unit>
          <trans-unit id="358" translate="yes" xml:space="preserve">
            <source>Authorization Servers SHOULD issue Access Tokens that expire and require Clients to refresh them.</source>
            <target state="new">Authorization Servers SHOULD issue Access Tokens that expire and require Clients to refresh them.</target>
          </trans-unit>
          <trans-unit id="359" translate="yes" xml:space="preserve">
            <source>Upon receiving the HTTP 401 response when accessing protected resources per § REF _Ref243980387 \r \h 4, the Client makes an HTTPS request to the Authorization Server's Refresh Token URL using POST.</source>
            <target state="new">Upon receiving the HTTP 401 response when accessing protected resources per § REF _Ref243980387 \r \h 4, the Client makes an HTTPS request to the Authorization Server's Refresh Token URL using POST.</target>
          </trans-unit>
          <trans-unit id="360" translate="yes" xml:space="preserve">
            <source>The request contains the following parameters:</source>
            <target state="new">The request contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="217">
          <trans-unit id="361" translate="yes" xml:space="preserve">
            <source>wrap_client_idREQUIRED.</source>
            <target state="new">wrap_client_idREQUIRED.</target>
          </trans-unit>
          <trans-unit id="362" translate="yes" xml:space="preserve">
            <source>The Client Identifier</source>
            <target state="new">The Client Identifier</target>
          </trans-unit>
        </group>
        <group id="218">
          <trans-unit id="363" translate="yes" xml:space="preserve">
            <source>wrap_client_secretREQUIRED.</source>
            <target state="new">wrap_client_secretREQUIRED.</target>
          </trans-unit>
          <trans-unit id="364" translate="yes" xml:space="preserve">
            <source>The Client Secret</source>
            <target state="new">The Client Secret</target>
          </trans-unit>
        </group>
        <group id="219">
          <trans-unit id="365" translate="yes" xml:space="preserve">
            <source>wrap_refresh_tokenREQUIRED.</source>
            <target state="new">wrap_refresh_tokenREQUIRED.</target>
          </trans-unit>
          <trans-unit id="366" translate="yes" xml:space="preserve">
            <source>The Refresh Token that was received in  REF _Ref239999415 \r \h 5.3.4.</source>
            <target state="new">The Refresh Token that was received in  REF _Ref239999415 \r \h 5.3.4.</target>
          </trans-unit>
        </group>
        <group id="220">
          <trans-unit id="367" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="221">
          <trans-unit id="368" translate="yes" xml:space="preserve">
            <source>Note that unlike  REF _Ref240004725 \r \h 5.3 and  REF _Ref243464143 \r \h 5.5, this profile REQUIRES the Client Identifier and Client Secret in the refresh request.</source>
            <target state="new">Note that unlike  REF _Ref240004725 \r \h 5.3 and  REF _Ref243464143 \r \h 5.5, this profile REQUIRES the Client Identifier and Client Secret in the refresh request.</target>
          </trans-unit>
          <trans-unit id="369" translate="yes" xml:space="preserve">
            <source>This is to allow a recovery from a compromise of Refresh Tokens at the Client.</source>
            <target state="new">This is to allow a recovery from a compromise of Refresh Tokens at the Client.</target>
          </trans-unit>
        </group>
        <group id="222">
          <trans-unit id="370" translate="yes" xml:space="preserve">
            <source>5.4.9 Successful Access Token Refresh</source>
            <target state="new">5.4.9 Successful Access Token Refresh</target>
          </trans-unit>
        </group>
        <group id="223">
          <trans-unit id="371" translate="yes" xml:space="preserve">
            <source>If successful, the Authorization Server returns: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph> with the Access Token in the response body.</source>
            <target state="new">If successful, the Authorization Server returns: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph> with the Access Token in the response body.</target>
          </trans-unit>
          <trans-unit id="372" translate="yes" xml:space="preserve">
            <source>The response body contains the following parameters:</source>
            <target state="new">The response body contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="224">
          <trans-unit id="373" translate="yes" xml:space="preserve">
            <source>wrap_access_token - REQUIRED.</source>
            <target state="new">wrap_access_token - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="374" translate="yes" xml:space="preserve">
            <source>The Access Token.</source>
            <target state="new">The Access Token.</target>
          </trans-unit>
        </group>
        <group id="225">
          <trans-unit id="375" translate="yes" xml:space="preserve">
            <source>wrap_access_token_expires_in - OPTIONAL.</source>
            <target state="new">wrap_access_token_expires_in - OPTIONAL.</target>
          </trans-unit>
          <trans-unit id="376" translate="yes" xml:space="preserve">
            <source>The lifetime of the Access Token in seconds.</source>
            <target state="new">The lifetime of the Access Token in seconds.</target>
          </trans-unit>
          <trans-unit id="377" translate="yes" xml:space="preserve">
            <source>For example, 3600 represents one hour.</source>
            <target state="new">For example, 3600 represents one hour.</target>
          </trans-unit>
        </group>
        <group id="226">
          <trans-unit id="378" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="227">
          <trans-unit id="379" translate="yes" xml:space="preserve">
            <source>5.4.10 Unsuccessful Access Token Refresh</source>
            <target state="new">5.4.10 Unsuccessful Access Token Refresh</target>
          </trans-unit>
        </group>
        <group id="228">
          <trans-unit id="380" translate="yes" xml:space="preserve">
            <source>The Authorization Server MUST verify the Refresh Token.</source>
            <target state="new">The Authorization Server MUST verify the Refresh Token.</target>
          </trans-unit>
          <trans-unit id="381" translate="yes" xml:space="preserve">
            <source>If the verification fails, the Authorization Server MUST respond with  <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph> and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></source>
            <target state="new">If the verification fails, the Authorization Server MUST respond with  <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph> and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="229">
          <trans-unit id="382" translate="yes" xml:space="preserve">
            <source>The Client MUST again request authorization from the User per  REF _Ref239996331 \r \h 5.4.2 .</source>
            <target state="new">The Client MUST again request authorization from the User per  REF _Ref239996331 \r \h 5.4.2 .</target>
          </trans-unit>
        </group>
        <group id="230">
          <trans-unit id="383" translate="yes" xml:space="preserve">
            <source>5.5 Rich App Profile</source>
            <target state="new">5.5 Rich App Profile</target>
          </trans-unit>
        </group>
        <group id="231">
          <trans-unit id="384" translate="yes" xml:space="preserve">
            <source>This profile is suitable where the Client is an application the User has installed on their computer and there is a browser available for the Client to launch.</source>
            <target state="new">This profile is suitable where the Client is an application the User has installed on their computer and there is a browser available for the Client to launch.</target>
          </trans-unit>
          <trans-unit id="385" translate="yes" xml:space="preserve">
            <source>This profile enables a Client to act on behalf of the User regardless of how the User authenticates to the Server and without access to the User’s credentials.</source>
            <target state="new">This profile enables a Client to act on behalf of the User regardless of how the User authenticates to the Server and without access to the User’s credentials.</target>
          </trans-unit>
        </group>
        <group id="232">
          <trans-unit id="386" translate="yes" xml:space="preserve">
            <source>5.5.1 Provisioning </source>
            <target state="new">5.5.1 Provisioning </target>
          </trans-unit>
        </group>
        <group id="233">
          <trans-unit id="387" translate="yes" xml:space="preserve">
            <source>Prior to initiating this protocol profile, the Client MAY be required to register the Client Identifier and/or the Callback URL with the Server.</source>
            <target state="new">Prior to initiating this protocol profile, the Client MAY be required to register the Client Identifier and/or the Callback URL with the Server.</target>
          </trans-unit>
        </group>
        <group id="234">
          <trans-unit id="388" translate="yes" xml:space="preserve">
            <source>5.5.2 Client Directs the User to the Server</source>
            <target state="new">5.5.2 Client Directs the User to the Server</target>
          </trans-unit>
        </group>
        <group id="235">
          <trans-unit id="389" translate="yes" xml:space="preserve">
            <source>The Client initiates an authorization request by opening the User’s browser with the Server's User Authorization URL, and including the following parameters: </source>
            <target state="new">The Client initiates an authorization request by opening the User’s browser with the Server's User Authorization URL, and including the following parameters: </target>
          </trans-unit>
        </group>
        <group id="236">
          <trans-unit id="390" translate="yes" xml:space="preserve">
            <source>wrap_client_id REQUIRED.</source>
            <target state="new">wrap_client_id REQUIRED.</target>
          </trans-unit>
          <trans-unit id="391" translate="yes" xml:space="preserve">
            <source>The Client Identifier.</source>
            <target state="new">The Client Identifier.</target>
          </trans-unit>
        </group>
        <group id="237">
          <trans-unit id="392" translate="yes" xml:space="preserve">
            <source>wrap_scopeOPTIONAL.</source>
            <target state="new">wrap_scopeOPTIONAL.</target>
          </trans-unit>
          <trans-unit id="393" translate="yes" xml:space="preserve">
            <source>The Authorization Server MAY define authorization scope values for the Client to include.</source>
            <target state="new">The Authorization Server MAY define authorization scope values for the Client to include.</target>
          </trans-unit>
        </group>
        <group id="238">
          <trans-unit id="394" translate="yes" xml:space="preserve">
            <source>wrap_callbackOPTIONAL.</source>
            <target state="new">wrap_callbackOPTIONAL.</target>
          </trans-unit>
          <trans-unit id="395" translate="yes" xml:space="preserve">
            <source>A Callback URL where the Authorization Server MAY redirect the User’s browser after the User responds to the authorization request.</source>
            <target state="new">A Callback URL where the Authorization Server MAY redirect the User’s browser after the User responds to the authorization request.</target>
          </trans-unit>
        </group>
        <group id="239">
          <trans-unit id="396" translate="yes" xml:space="preserve">
            <source>wrap_client_stateOPTIONAL.</source>
            <target state="new">wrap_client_stateOPTIONAL.</target>
          </trans-unit>
          <trans-unit id="397" translate="yes" xml:space="preserve">
            <source>An opaque value that Clients can use to maintain state associated with this request.</source>
            <target state="new">An opaque value that Clients can use to maintain state associated with this request.</target>
          </trans-unit>
          <trans-unit id="398" translate="yes" xml:space="preserve">
            <source>If this value is present, the Authorization Server MUST return it to the Client's Callback URL.</source>
            <target state="new">If this value is present, the Authorization Server MUST return it to the Client's Callback URL.</target>
          </trans-unit>
        </group>
        <group id="240">
          <trans-unit id="399" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Server.</target>
          </trans-unit>
        </group>
        <group id="241">
          <trans-unit id="400" translate="yes" xml:space="preserve">
            <source>5.5.3 Server Confirms Authorization Request with User</source>
            <target state="new">5.5.3 Server Confirms Authorization Request with User</target>
          </trans-unit>
        </group>
        <group id="242">
          <trans-unit id="401" translate="yes" xml:space="preserve">
            <source>Upon receiving an authorization request from the Client by way of the User’s browser, the Authorization Server authenticates the user, presents the User with the Protected Resource access that will be granted to the Client, and prompts the User to confirm the request.</source>
            <target state="new">Upon receiving an authorization request from the Client by way of the User’s browser, the Authorization Server authenticates the user, presents the User with the Protected Resource access that will be granted to the Client, and prompts the User to confirm the request.</target>
          </trans-unit>
          <trans-unit id="402" translate="yes" xml:space="preserve">
            <source>If the User approves the request, the Authorization Server generates a Verification Code.</source>
            <target state="new">If the User approves the request, the Authorization Server generates a Verification Code.</target>
          </trans-unit>
          <trans-unit id="403" translate="yes" xml:space="preserve">
            <source>If the User denied access, the Authorization Server MAY set the Verification Code to the reserved value: <ph id="1">&lt;codeInline&gt;user_denied&lt;/codeInline&gt;</ph></source>
            <target state="new">If the User denied access, the Authorization Server MAY set the Verification Code to the reserved value: <ph id="1">&lt;codeInline&gt;user_denied&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="243">
          <trans-unit id="404" translate="yes" xml:space="preserve">
            <source>It is RECOMMENDED the Verification Code be single use, and expire within minutes of issue.</source>
            <target state="new">It is RECOMMENDED the Verification Code be single use, and expire within minutes of issue.</target>
          </trans-unit>
          <trans-unit id="405" translate="yes" xml:space="preserve">
            <source>There are a number of mechanisms for the Authorization Server to transmit the Verification Code to the Client, specified below.</source>
            <target state="new">There are a number of mechanisms for the Authorization Server to transmit the Verification Code to the Client, specified below.</target>
          </trans-unit>
        </group>
        <group id="244">
          <trans-unit id="406" translate="yes" xml:space="preserve">
            <source>Rich Application interaction with the User and the Authorization Server is an area of active research and development.</source>
            <target state="new">Rich Application interaction with the User and the Authorization Server is an area of active research and development.</target>
          </trans-unit>
          <trans-unit id="407" translate="yes" xml:space="preserve">
            <source>If the Rich Application is able to retrieve the verifier directly from the callback URL returned by the Authorization Server, an improved user experience is possible.</source>
            <target state="new">If the Rich Application is able to retrieve the verifier directly from the callback URL returned by the Authorization Server, an improved user experience is possible.</target>
          </trans-unit>
          <trans-unit id="408" translate="yes" xml:space="preserve">
            <source>However, not all applications are able to interact with the Authorization Server in this manner.</source>
            <target state="new">However, not all applications are able to interact with the Authorization Server in this manner.</target>
          </trans-unit>
        </group>
        <group id="245">
          <trans-unit id="409" translate="yes" xml:space="preserve">
            <source>5.5.3.1 Applications with Callback URLs</source>
            <target state="new">5.5.3.1 Applications with Callback URLs</target>
          </trans-unit>
        </group>
        <group id="246">
          <trans-unit id="410" translate="yes" xml:space="preserve">
            <source>Rich Applications may be able to receive callback URLs in any of several ways.</source>
            <target state="new">Rich Applications may be able to receive callback URLs in any of several ways.</target>
          </trans-unit>
          <trans-unit id="411" translate="yes" xml:space="preserve">
            <source>For example, the Rich Application may register a custom protocol handler with the application platform so that the application will be invoked when the browser is redirected to the callback URL.</source>
            <target state="new">For example, the Rich Application may register a custom protocol handler with the application platform so that the application will be invoked when the browser is redirected to the callback URL.</target>
          </trans-unit>
          <trans-unit id="412" translate="yes" xml:space="preserve">
            <source>Alternatively, the callback URL may point to a web site with which the Rich Application has a trust relationship.</source>
            <target state="new">Alternatively, the callback URL may point to a web site with which the Rich Application has a trust relationship.</target>
          </trans-unit>
          <trans-unit id="413" translate="yes" xml:space="preserve">
            <source>The web site can then pass the Callback URL down to the Rich Application for processing.</source>
            <target state="new">The web site can then pass the Callback URL down to the Rich Application for processing.</target>
          </trans-unit>
          <trans-unit id="414" translate="yes" xml:space="preserve">
            <source>Finally, the Callback URL may point to a web site that will display the Callback URL to the screen along with instructions for the user to enter the Verification Code into the application.</source>
            <target state="new">Finally, the Callback URL may point to a web site that will display the Callback URL to the screen along with instructions for the user to enter the Verification Code into the application.</target>
          </trans-unit>
        </group>
        <group id="247">
          <trans-unit id="415" translate="yes" xml:space="preserve">
            <source>For Rich Applications with a Callback URL, the Authorization Server MUST redirect the User back to the Callback URL, with the following parameters added:</source>
            <target state="new">For Rich Applications with a Callback URL, the Authorization Server MUST redirect the User back to the Callback URL, with the following parameters added:</target>
          </trans-unit>
        </group>
        <group id="248">
          <trans-unit id="416" translate="yes" xml:space="preserve">
            <source>wrap_verification_codeREQUIRED.</source>
            <target state="new">wrap_verification_codeREQUIRED.</target>
          </trans-unit>
          <trans-unit id="417" translate="yes" xml:space="preserve">
            <source>The Verification Code</source>
            <target state="new">The Verification Code</target>
          </trans-unit>
        </group>
        <group id="249">
          <trans-unit id="418" translate="yes" xml:space="preserve">
            <source>wrap_client_stateREQUIRED if the Client sent the value in the authorization request in  REF _Ref239996331 \r \h 5.4.2 </source>
            <target state="new">wrap_client_stateREQUIRED if the Client sent the value in the authorization request in  REF _Ref239996331 \r \h 5.4.2 </target>
          </trans-unit>
        </group>
        <group id="250">
          <trans-unit id="419" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Server.</target>
          </trans-unit>
        </group>
        <group id="251">
          <trans-unit id="420" translate="yes" xml:space="preserve">
            <source>If the User denied access, the Server MAY redirect the User’s browser to the Callback URL with the Verification Code set to the reserved value: <ph id="1">&lt;codeInline&gt;user_denied&lt;/codeInline&gt;</ph></source>
            <target state="new">If the User denied access, the Server MAY redirect the User’s browser to the Callback URL with the Verification Code set to the reserved value: <ph id="1">&lt;codeInline&gt;user_denied&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="252">
          <trans-unit id="421" translate="yes" xml:space="preserve">
            <source>5.5.3.2 Applications without Callback URLs</source>
            <target state="new">5.5.3.2 Applications without Callback URLs</target>
          </trans-unit>
        </group>
        <group id="253">
          <trans-unit id="422" translate="yes" xml:space="preserve">
            <source>Rich Applications without Callback URLs need to receive the verification code in other ways.</source>
            <target state="new">Rich Applications without Callback URLs need to receive the verification code in other ways.</target>
          </trans-unit>
          <trans-unit id="423" translate="yes" xml:space="preserve">
            <source>For Rich Applications without a Callback URL, the Authorization Server MUST present the Verification Code on the web page and instruct the user to enter it into the Client.</source>
            <target state="new">For Rich Applications without a Callback URL, the Authorization Server MUST present the Verification Code on the web page and instruct the user to enter it into the Client.</target>
          </trans-unit>
        </group>
        <group id="254">
          <trans-unit id="424" translate="yes" xml:space="preserve">
            <source>The Server MAY also append the Verification Code to the title of the HTML page so that Clients that have access to the title of the browser's current page can obtain the Verification Code without requiring the User enter the Verification Code into the Client.</source>
            <target state="new">The Server MAY also append the Verification Code to the title of the HTML page so that Clients that have access to the title of the browser's current page can obtain the Verification Code without requiring the User enter the Verification Code into the Client.</target>
          </trans-unit>
          <trans-unit id="425" translate="yes" xml:space="preserve">
            <source>The Client can parse the title looking for “code=” and then the rest of the title is the Verification Code.</source>
            <target state="new">The Client can parse the title looking for “code=” and then the rest of the title is the Verification Code.</target>
          </trans-unit>
          <trans-unit id="426" translate="yes" xml:space="preserve">
            <source>If adding the Verification Code to the title of the HTML page, the Server MUST also include the wrap_client_state parameter sent from the Client as the "state=" parameter.Eg.</source>
            <target state="new">If adding the Verification Code to the title of the HTML page, the Server MUST also include the wrap_client_state parameter sent from the Client as the "state=" parameter.Eg.</target>
          </trans-unit>
          <trans-unit id="427" translate="yes" xml:space="preserve">
            <source>For example.com where the Verification Code = WF34F7HG and Client State = NMMGFJJ, the Server would set the title of the page to something like: <ph id="1">&lt;codeInline&gt;%%amp;lt;title%%amp;gt;Successful delegation, code=WF34F7HG state=NMMGFJJ%%amp;lt;/title%%amp;gt;&lt;/codeInline&gt;</ph></source>
            <target state="new">For example.com where the Verification Code = WF34F7HG and Client State = NMMGFJJ, the Server would set the title of the page to something like: <ph id="1">&lt;codeInline&gt;%%amp;lt;title%%amp;gt;Successful delegation, code=WF34F7HG state=NMMGFJJ%%amp;lt;/title%%amp;gt;&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="255">
          <trans-unit id="428" translate="yes" xml:space="preserve">
            <source>If the User denied access, the Server MAY append code=user_denied to the title of the HTML page so that the Client can detect that the User has denied access.</source>
            <target state="new">If the User denied access, the Server MAY append code=user_denied to the title of the HTML page so that the Client can detect that the User has denied access.</target>
          </trans-unit>
        </group>
        <group id="256">
          <trans-unit id="429" translate="yes" xml:space="preserve">
            <source>5.5.4 Client Requests Access Token</source>
            <target state="new">5.5.4 Client Requests Access Token</target>
          </trans-unit>
        </group>
        <group id="257">
          <trans-unit id="430" translate="yes" xml:space="preserve">
            <source>The Client makes an HTTPS request to the Server’s Access Token URL using POST.</source>
            <target state="new">The Client makes an HTTPS request to the Server’s Access Token URL using POST.</target>
          </trans-unit>
          <trans-unit id="431" translate="yes" xml:space="preserve">
            <source>The request contains the following parameters:</source>
            <target state="new">The request contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="258">
          <trans-unit id="432" translate="yes" xml:space="preserve">
            <source>wrap_client_id REQUIRED.</source>
            <target state="new">wrap_client_id REQUIRED.</target>
          </trans-unit>
          <trans-unit id="433" translate="yes" xml:space="preserve">
            <source>The Client Identifier</source>
            <target state="new">The Client Identifier</target>
          </trans-unit>
        </group>
        <group id="259">
          <trans-unit id="434" translate="yes" xml:space="preserve">
            <source>wrap_verification_code REQUIRED.</source>
            <target state="new">wrap_verification_code REQUIRED.</target>
          </trans-unit>
          <trans-unit id="435" translate="yes" xml:space="preserve">
            <source>The Verification Code received from the Server</source>
            <target state="new">The Verification Code received from the Server</target>
          </trans-unit>
        </group>
        <group id="260">
          <trans-unit id="436" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Server.</target>
          </trans-unit>
        </group>
        <group id="261">
          <trans-unit id="437" translate="yes" xml:space="preserve">
            <source>5.5.5 Successful Access Token Response from Server</source>
            <target state="new">5.5.5 Successful Access Token Response from Server</target>
          </trans-unit>
        </group>
        <group id="262">
          <trans-unit id="438" translate="yes" xml:space="preserve">
            <source>The Server checks the Verification Code was previously issued to the same Client Display Name, has not expired and has not been used.</source>
            <target state="new">The Server checks the Verification Code was previously issued to the same Client Display Name, has not expired and has not been used.</target>
          </trans-unit>
          <trans-unit id="439" translate="yes" xml:space="preserve">
            <source>If these conditions are met, the Server marks the Verification Code as being used and returns:  <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph> with the Refresh Token and an Access Token in the response body.</source>
            <target state="new">If these conditions are met, the Server marks the Verification Code as being used and returns:  <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph> with the Refresh Token and an Access Token in the response body.</target>
          </trans-unit>
          <trans-unit id="440" translate="yes" xml:space="preserve">
            <source>The response body contains the following parameters:</source>
            <target state="new">The response body contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="263">
          <trans-unit id="441" translate="yes" xml:space="preserve">
            <source>wrap_refresh_tokenREQUIRED.</source>
            <target state="new">wrap_refresh_tokenREQUIRED.</target>
          </trans-unit>
          <trans-unit id="442" translate="yes" xml:space="preserve">
            <source>The Refresh Token</source>
            <target state="new">The Refresh Token</target>
          </trans-unit>
        </group>
        <group id="264">
          <trans-unit id="443" translate="yes" xml:space="preserve">
            <source>wrap_access_tokenREQUIRED.</source>
            <target state="new">wrap_access_tokenREQUIRED.</target>
          </trans-unit>
          <trans-unit id="444" translate="yes" xml:space="preserve">
            <source>The Access Token.</source>
            <target state="new">The Access Token.</target>
          </trans-unit>
        </group>
        <group id="265">
          <trans-unit id="445" translate="yes" xml:space="preserve">
            <source>wrap_access_token_expires_inOPTIONAL.</source>
            <target state="new">wrap_access_token_expires_inOPTIONAL.</target>
          </trans-unit>
          <trans-unit id="446" translate="yes" xml:space="preserve">
            <source>The lifetime of the Access Token in seconds.</source>
            <target state="new">The lifetime of the Access Token in seconds.</target>
          </trans-unit>
          <trans-unit id="447" translate="yes" xml:space="preserve">
            <source>For example, 3600 represents one hour.</source>
            <target state="new">For example, 3600 represents one hour.</target>
          </trans-unit>
        </group>
        <group id="266">
          <trans-unit id="448" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Server.</target>
          </trans-unit>
        </group>
        <group id="267">
          <trans-unit id="449" translate="yes" xml:space="preserve">
            <source>The Client securely stores the Refresh Token for later use.</source>
            <target state="new">The Client securely stores the Refresh Token for later use.</target>
          </trans-unit>
        </group>
        <group id="268">
          <trans-unit id="450" translate="yes" xml:space="preserve">
            <source>5.5.6 Unsuccessful Access Token Response from Server</source>
            <target state="new">5.5.6 Unsuccessful Access Token Response from Server</target>
          </trans-unit>
        </group>
        <group id="269">
          <trans-unit id="451" translate="yes" xml:space="preserve">
            <source>If the verification fails, the Server MUST respond with:  <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph> and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></source>
            <target state="new">If the verification fails, the Server MUST respond with:  <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph> and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="270">
          <trans-unit id="452" translate="yes" xml:space="preserve">
            <source>The Client needs to obtain a new Verification Code per  REF _Ref239996331 \r \h 5.4.2.</source>
            <target state="new">The Client needs to obtain a new Verification Code per  REF _Ref239996331 \r \h 5.4.2.</target>
          </trans-unit>
        </group>
        <group id="271">
          <trans-unit id="453" translate="yes" xml:space="preserve">
            <source>5.5.7 Client Refreshes Access Token</source>
            <target state="new">5.5.7 Client Refreshes Access Token</target>
          </trans-unit>
        </group>
        <group id="272">
          <trans-unit id="454" translate="yes" xml:space="preserve">
            <source>Refreshing an Access Token is the same in  REF _Ref240004725 \r \h 5.3,  REF _Ref242856744 \r \h 5.4, and  REF _Ref243464143 \r \h 5.5.</source>
            <target state="new">Refreshing an Access Token is the same in  REF _Ref240004725 \r \h 5.3,  REF _Ref242856744 \r \h 5.4, and  REF _Ref243464143 \r \h 5.5.</target>
          </trans-unit>
          <trans-unit id="455" translate="yes" xml:space="preserve">
            <source>Authorization Servers SHOULD issue Access Tokens that expire and require Clients to refresh them.</source>
            <target state="new">Authorization Servers SHOULD issue Access Tokens that expire and require Clients to refresh them.</target>
          </trans-unit>
          <trans-unit id="456" translate="yes" xml:space="preserve">
            <source>Upon receiving the HTTP 401 response when accessing protected resources per § REF _Ref243980387 \r \h 4, the Client makes an HTTPS request to the Authorization Server's Refresh Token URL using POST.</source>
            <target state="new">Upon receiving the HTTP 401 response when accessing protected resources per § REF _Ref243980387 \r \h 4, the Client makes an HTTPS request to the Authorization Server's Refresh Token URL using POST.</target>
          </trans-unit>
          <trans-unit id="457" translate="yes" xml:space="preserve">
            <source>The request contains the following parameters:</source>
            <target state="new">The request contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="273">
          <trans-unit id="458" translate="yes" xml:space="preserve">
            <source>wrap_refresh_token - REQUIRED.</source>
            <target state="new">wrap_refresh_token - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="459" translate="yes" xml:space="preserve">
            <source>The Refresh Token that was received in  REF _Ref239999415 \r \h 5.3.4.</source>
            <target state="new">The Refresh Token that was received in  REF _Ref239999415 \r \h 5.3.4.</target>
          </trans-unit>
        </group>
        <group id="274">
          <trans-unit id="460" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="275">
          <trans-unit id="461" translate="yes" xml:space="preserve">
            <source>5.5.8 Successful Access Token Refresh</source>
            <target state="new">5.5.8 Successful Access Token Refresh</target>
          </trans-unit>
        </group>
        <group id="276">
          <trans-unit id="462" translate="yes" xml:space="preserve">
            <source>If successful, the Authorization Server returns: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph> with the Access Token in the response body.</source>
            <target state="new">If successful, the Authorization Server returns: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph> with the Access Token in the response body.</target>
          </trans-unit>
          <trans-unit id="463" translate="yes" xml:space="preserve">
            <source>The response body contains the following parameters:</source>
            <target state="new">The response body contains the following parameters:</target>
          </trans-unit>
        </group>
        <group id="277">
          <trans-unit id="464" translate="yes" xml:space="preserve">
            <source>wrap_access_token - REQUIRED.</source>
            <target state="new">wrap_access_token - REQUIRED.</target>
          </trans-unit>
          <trans-unit id="465" translate="yes" xml:space="preserve">
            <source>The Access Token.</source>
            <target state="new">The Access Token.</target>
          </trans-unit>
        </group>
        <group id="278">
          <trans-unit id="466" translate="yes" xml:space="preserve">
            <source>wrap_access_token_expires_in - OPTIONAL.</source>
            <target state="new">wrap_access_token_expires_in - OPTIONAL.</target>
          </trans-unit>
          <trans-unit id="467" translate="yes" xml:space="preserve">
            <source>The lifetime of the Access Token in seconds.</source>
            <target state="new">The lifetime of the Access Token in seconds.</target>
          </trans-unit>
          <trans-unit id="468" translate="yes" xml:space="preserve">
            <source>For example, 3600 represents one hour.</source>
            <target state="new">For example, 3600 represents one hour.</target>
          </trans-unit>
        </group>
        <group id="279">
          <trans-unit id="469" translate="yes" xml:space="preserve">
            <source>Additional parameters: Any additional parameters, as defined by the Authorization Server.</source>
            <target state="new">Additional parameters: Any additional parameters, as defined by the Authorization Server.</target>
          </trans-unit>
        </group>
        <group id="280">
          <trans-unit id="470" translate="yes" xml:space="preserve">
            <source>5.5.9 Unsuccessful Access Token Refresh</source>
            <target state="new">5.5.9 Unsuccessful Access Token Refresh</target>
          </trans-unit>
        </group>
        <group id="281">
          <trans-unit id="471" translate="yes" xml:space="preserve">
            <source>The Authorization Server MUST verify the Refresh Token.</source>
            <target state="new">The Authorization Server MUST verify the Refresh Token.</target>
          </trans-unit>
          <trans-unit id="472" translate="yes" xml:space="preserve">
            <source>If the verification fails, the Authorization Server MUST respond with  <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph> and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></source>
            <target state="new">If the verification fails, the Authorization Server MUST respond with  <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph> and the HTTP header: <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="282">
          <trans-unit id="473" translate="yes" xml:space="preserve">
            <source>The Client MUST again obtain authorization from the user per  REF _Ref244151514 \r \h 5.5.2.</source>
            <target state="new">The Client MUST again obtain authorization from the user per  REF _Ref244151514 \r \h 5.5.2.</target>
          </trans-unit>
        </group>
        <group id="283">
          <trans-unit id="474" translate="yes" xml:space="preserve">
            <source>6. Parameter Considerations</source>
            <target state="new">6. Parameter Considerations</target>
          </trans-unit>
        </group>
        <group id="284">
          <trans-unit id="475" translate="yes" xml:space="preserve">
            <source>6.1 Authorization Server Request / Response Parameter Encoding</source>
            <target state="new">6.1 Authorization Server Request / Response Parameter Encoding</target>
          </trans-unit>
        </group>
        <group id="285">
          <trans-unit id="476" translate="yes" xml:space="preserve">
            <source>All requests made directly to the Authorization Server use the HTTP POST method and the parameters MUST be in the body of the message and formatted as application/x-www-form-urlencoded per 17.13.4 of HTML 4.01.</source>
            <target state="new">All requests made directly to the Authorization Server use the HTTP POST method and the parameters MUST be in the body of the message and formatted as application/x-www-form-urlencoded per 17.13.4 of HTML 4.01.</target>
          </trans-unit>
        </group>
        <group id="286">
          <trans-unit id="477" translate="yes" xml:space="preserve">
            <source>Any parameters in the response from the Authorization Server MUST be in the body of the message and formatted as application/x-www-form-urlencoded per 17.13.4 of HTML 4.01.</source>
            <target state="new">Any parameters in the response from the Authorization Server MUST be in the body of the message and formatted as application/x-www-form-urlencoded per 17.13.4 of HTML 4.01.</target>
          </trans-unit>
        </group>
        <group id="287">
          <trans-unit id="478" translate="yes" xml:space="preserve">
            <source>6.2 Parameter Size</source>
            <target state="new">6.2 Parameter Size</target>
          </trans-unit>
        </group>
        <group id="288">
          <trans-unit id="479" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>HTTP Headers:<ept id="1">&lt;/embeddedLabel&gt;</ept> web servers often impose a maximum on the combined size of all HTTP headers ranging from 8KB to 16KB.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>HTTP Headers:<ept id="1">&lt;/embeddedLabel&gt;</ept> web servers often impose a maximum on the combined size of all HTTP headers ranging from 8KB to 16KB.</target>
          </trans-unit>
          <trans-unit id="480" translate="yes" xml:space="preserve">
            <source>The size of the Access Token should be small enough to ensure the total size of the HTTP headers does not exceed the limits of web servers.</source>
            <target state="new">The size of the Access Token should be small enough to ensure the total size of the HTTP headers does not exceed the limits of web servers.</target>
          </trans-unit>
        </group>
        <group id="289">
          <trans-unit id="481" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>URLs:<ept id="1">&lt;/embeddedLabel&gt;</ept> web servers and browsers often impose a maximum on the total length of the URL of as low as 2083 bytes.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>URLs:<ept id="1">&lt;/embeddedLabel&gt;</ept> web servers and browsers often impose a maximum on the total length of the URL of as low as 2083 bytes.</target>
          </trans-unit>
          <trans-unit id="482" translate="yes" xml:space="preserve">
            <source>The length of URLs exposed by the Authorization Server and the length of parameters passed on a URL should be minimized so that the total length does not exceed this limit.</source>
            <target state="new">The length of URLs exposed by the Authorization Server and the length of parameters passed on a URL should be minimized so that the total length does not exceed this limit.</target>
          </trans-unit>
        </group>
        <group id="290">
          <trans-unit id="483" translate="yes" xml:space="preserve">
            <source>6.3 Access Token Format</source>
            <target state="new">6.3 Access Token Format</target>
          </trans-unit>
        </group>
        <group id="291">
          <trans-unit id="484" translate="yes" xml:space="preserve">
            <source>OAuth WRAP does not specify the format of the Access Token.</source>
            <target state="new">OAuth WRAP does not specify the format of the Access Token.</target>
          </trans-unit>
          <trans-unit id="485" translate="yes" xml:space="preserve">
            <source>The format is mutually agreed to by the Authorization Server and the Protected Resource and is opaque to the Client.</source>
            <target state="new">The format is mutually agreed to by the Authorization Server and the Protected Resource and is opaque to the Client.</target>
          </trans-unit>
          <trans-unit id="486" translate="yes" xml:space="preserve">
            <source>The Access Token format MUST consist of legal characters in an HTTP header per</source>
            <target state="new">The Access Token format MUST consist of legal characters in an HTTP header per</target>
          </trans-unit>
        </group>
        <group id="292">
          <trans-unit id="487" translate="yes" xml:space="preserve">
            <source>[Reference needed]</source>
            <target state="new">[Reference needed]</target>
          </trans-unit>
        </group>
        <group id="293">
          <trans-unit id="488" translate="yes" xml:space="preserve">
            <source>The Simple Web Token (SWT) and JSON Web Token (JWT) are possible Access Token formats.</source>
            <target state="new">The Simple Web Token (SWT) and JSON Web Token (JWT) are possible Access Token formats.</target>
          </trans-unit>
        </group>
        <group id="294">
          <trans-unit id="489" translate="yes" xml:space="preserve">
            <source>6.4 Refresh Token Format</source>
            <target state="new">6.4 Refresh Token Format</target>
          </trans-unit>
        </group>
        <group id="295">
          <trans-unit id="490" translate="yes" xml:space="preserve">
            <source>OAuth WRAP does not specify the format of the Refresh Token.</source>
            <target state="new">OAuth WRAP does not specify the format of the Refresh Token.</target>
          </trans-unit>
          <trans-unit id="491" translate="yes" xml:space="preserve">
            <source>The Refresh Token is both generated and consumed by the Authorization Server and is opaque to the Client and never exposed to the Protected Resource.</source>
            <target state="new">The Refresh Token is both generated and consumed by the Authorization Server and is opaque to the Client and never exposed to the Protected Resource.</target>
          </trans-unit>
          <trans-unit id="492" translate="yes" xml:space="preserve">
            <source>The Refresh Token is a long lived credential, and should contain enough entropy that it cannot be guessed.</source>
            <target state="new">The Refresh Token is a long lived credential, and should contain enough entropy that it cannot be guessed.</target>
          </trans-unit>
          <trans-unit id="493" translate="yes" xml:space="preserve">
            <source>The size limitations of the Access Token are not applicable to the Refresh Token as the Refresh Token is always in the body of an HTTP message.</source>
            <target state="new">The size limitations of the Access Token are not applicable to the Refresh Token as the Refresh Token is always in the body of an HTTP message.</target>
          </trans-unit>
        </group>
        <group id="296">
          <trans-unit id="494" translate="yes" xml:space="preserve">
            <source>6.5 Additional Authorization Server Parameters</source>
            <target state="new">6.5 Additional Authorization Server Parameters</target>
          </trans-unit>
        </group>
        <group id="297">
          <trans-unit id="495" translate="yes" xml:space="preserve">
            <source>The Authorization Server may define additional parameters to be included in are returned from calls to the Access Token URL or User Authorization URL.</source>
            <target state="new">The Authorization Server may define additional parameters to be included in are returned from calls to the Access Token URL or User Authorization URL.</target>
          </trans-unit>
          <trans-unit id="496" translate="yes" xml:space="preserve">
            <source>Parameters that start with wrap_ are reserved and may not be used.</source>
            <target state="new">Parameters that start with wrap_ are reserved and may not be used.</target>
          </trans-unit>
        </group>
        <group id="298">
          <trans-unit id="497" translate="yes" xml:space="preserve">
            <source>7. Security Considerations</source>
            <target state="new">7. Security Considerations</target>
          </trans-unit>
        </group>
        <group id="299">
          <trans-unit id="498" translate="yes" xml:space="preserve">
            <source>7.1Confidentiality of Protected Resource Requests</source>
            <target state="new">7.1Confidentiality of Protected Resource Requests</target>
          </trans-unit>
        </group>
        <group id="300">
          <trans-unit id="499" translate="yes" xml:space="preserve">
            <source>7.2 Secrecy of Client Secret</source>
            <target state="new">7.2 Secrecy of Client Secret</target>
          </trans-unit>
        </group>
        <group id="301">
          <trans-unit id="500" translate="yes" xml:space="preserve">
            <source>7.3 Entropy of Secrets</source>
            <target state="new">7.3 Entropy of Secrets</target>
          </trans-unit>
        </group>
        <group id="302">
          <trans-unit id="501" translate="yes" xml:space="preserve">
            <source>7.4 Access Token Attacks</source>
            <target state="new">7.4 Access Token Attacks</target>
          </trans-unit>
        </group>
        <group id="303">
          <trans-unit id="502" translate="yes" xml:space="preserve">
            <source>7.5 Scoping of Access</source>
            <target state="new">7.5 Scoping of Access</target>
          </trans-unit>
        </group>
        <group id="304">
          <trans-unit id="503" translate="yes" xml:space="preserve">
            <source>7.6 Denial of Service / Resource Exhaustion Attacks</source>
            <target state="new">7.6 Denial of Service / Resource Exhaustion Attacks</target>
          </trans-unit>
        </group>
        <group id="305">
          <trans-unit id="504" translate="yes" xml:space="preserve">
            <source>7.7 Phishing Attacks</source>
            <target state="new">7.7 Phishing Attacks</target>
          </trans-unit>
        </group>
        <group id="306">
          <trans-unit id="505" translate="yes" xml:space="preserve">
            <source>7.8 Browser Redirects</source>
            <target state="new">7.8 Browser Redirects</target>
          </trans-unit>
        </group>
        <group id="307">
          <trans-unit id="506" translate="yes" xml:space="preserve">
            <source>7.9 Open Relays</source>
            <target state="new">7.9 Open Relays</target>
          </trans-unit>
        </group>
        <group id="308">
          <trans-unit id="507" translate="yes" xml:space="preserve">
            <source>7.10 User Interface Redress</source>
            <target state="new">7.10 User Interface Redress</target>
          </trans-unit>
        </group>
        <group id="309">
          <trans-unit id="508" translate="yes" xml:space="preserve">
            <source>7.11 Automatic Processing of User Delegation</source>
            <target state="new">7.11 Automatic Processing of User Delegation</target>
          </trans-unit>
        </group>
        <group id="310">
          <trans-unit id="509" translate="yes" xml:space="preserve">
            <source>7.12 Brute Force Password Attacks</source>
            <target state="new">7.12 Brute Force Password Attacks</target>
          </trans-unit>
        </group>
        <group id="311">
          <trans-unit id="510" translate="yes" xml:space="preserve">
            <source>The Client Account and Password Profile ( REF _Ref240004775 \r \h 5.1) and Username and Password Profile ( REF _Ref240004725 \r \h 5.3) are susceptible to brute force attacks.</source>
            <target state="new">The Client Account and Password Profile ( REF _Ref240004775 \r \h 5.1) and Username and Password Profile ( REF _Ref240004725 \r \h 5.3) are susceptible to brute force attacks.</target>
          </trans-unit>
          <trans-unit id="511" translate="yes" xml:space="preserve">
            <source>It is recommended that a Authorization Server offering these profiles limit the number of unsuccessful attacks that can be attempted.</source>
            <target state="new">It is recommended that a Authorization Server offering these profiles limit the number of unsuccessful attacks that can be attempted.</target>
          </trans-unit>
        </group>
        <group id="312">
          <trans-unit id="512" translate="yes" xml:space="preserve">
            <source>Appendix A: Client Account and Password Profile</source>
            <target state="new">Appendix A: Client Account and Password Profile</target>
          </trans-unit>
        </group>
        <group id="313">
          <trans-unit id="513" translate="yes" xml:space="preserve">
            <source>In this example, crm.example.com is an application server that has a Protected Resource at https://crm.example.com/data.</source>
            <target state="new">In this example, crm.example.com is an application server that has a Protected Resource at https://crm.example.com/data.</target>
          </trans-unit>
          <trans-unit id="514" translate="yes" xml:space="preserve">
            <source>DataDumper is an application acting as a Client that periodically calls https://crm.exanmple.com/data.</source>
            <target state="new">DataDumper is an application acting as a Client that periodically calls https://crm.exanmple.com/data.</target>
          </trans-unit>
          <trans-unit id="515" translate="yes" xml:space="preserve">
            <source>The Protected Resource trusts the Authorization Server auth.example.net to determine if a Client has access.</source>
            <target state="new">The Protected Resource trusts the Authorization Server auth.example.net to determine if a Client has access.</target>
          </trans-unit>
        </group>
        <group id="314">
          <trans-unit id="516" translate="yes" xml:space="preserve">
            <source>Provisioning</source>
            <target state="new">Provisioning</target>
          </trans-unit>
        </group>
        <group id="315">
          <trans-unit id="517" translate="yes" xml:space="preserve">
            <source>The Authorization Server documentation defines the Access Token URL as: <ph id="1">&lt;codeInline&gt;https://auth.example.net/access_token&lt;/codeInline&gt;</ph></source>
            <target state="new">The Authorization Server documentation defines the Access Token URL as: <ph id="1">&lt;codeInline&gt;https://auth.example.net/access_token&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="316">
          <trans-unit id="518" translate="yes" xml:space="preserve">
            <source>The Authorization Server has defined that the parameter Audience be included in calls to the Access Token URL.</source>
            <target state="new">The Authorization Server has defined that the parameter Audience be included in calls to the Access Token URL.</target>
          </trans-unit>
        </group>
        <group id="317">
          <trans-unit id="519" translate="yes" xml:space="preserve">
            <source>The Client has been provisioned with the following: <ph id="1">&lt;codeInline&gt;Client Account: datadumper Client Password: j2hw7GPsl0&lt;/codeInline&gt;</ph></source>
            <target state="new">The Client has been provisioned with the following: <ph id="1">&lt;codeInline&gt;Client Account: datadumper Client Password: j2hw7GPsl0&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="318">
          <trans-unit id="520" translate="yes" xml:space="preserve">
            <source>The Protected Resource and the Authorization Server have agreed to use a Simple Web Token (SWT) for the Access Token with the reserved attributes Issuer, Audience, ExpiresOn and the public attribute net.example.auth.account and have exchanged the following HMAC key value (expressed in base 64): <ph id="1">&lt;codeInline&gt;3iK5ZYAoBQuOqSgF/YqlDw70HKRmbyXkrl5f4SJ4Toc=&lt;/codeInline&gt;</ph></source>
            <target state="new">The Protected Resource and the Authorization Server have agreed to use a Simple Web Token (SWT) for the Access Token with the reserved attributes Issuer, Audience, ExpiresOn and the public attribute net.example.auth.account and have exchanged the following HMAC key value (expressed in base 64): <ph id="1">&lt;codeInline&gt;3iK5ZYAoBQuOqSgF/YqlDw70HKRmbyXkrl5f4SJ4Toc=&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="319">
          <trans-unit id="521" translate="yes" xml:space="preserve">
            <source>Client Requests Access Token</source>
            <target state="new">Client Requests Access Token</target>
          </trans-unit>
        </group>
        <group id="320">
          <trans-unit id="522" translate="yes" xml:space="preserve">
            <source>The Client makes an HTTPS POST to: <ph id="1">&lt;codeInline&gt;https://auth.example.net/access_token&lt;/codeInline&gt;</ph></source>
            <target state="new">The Client makes an HTTPS POST to: <ph id="1">&lt;codeInline&gt;https://auth.example.net/access_token&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="321">
          <trans-unit id="523" translate="yes" xml:space="preserve">
            <source>With the following message body: <ph id="1">&lt;codeInline&gt;wrap_name=datadumper%%amp;amp;wrap_password=j2hw7GPsl0%%amp;amp;Audience=crm.example.com&lt;/codeInline&gt;</ph></source>
            <target state="new">With the following message body: <ph id="1">&lt;codeInline&gt;wrap_name=datadumper%%amp;amp;wrap_password=j2hw7GPsl0%%amp;amp;Audience=crm.example.com&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="322">
          <trans-unit id="524" translate="yes" xml:space="preserve">
            <source>Successful Access Token Response from Authorization Server</source>
            <target state="new">Successful Access Token Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="323">
          <trans-unit id="525" translate="yes" xml:space="preserve">
            <source>The Authorization Server checks that the Client Password j2hw7GPsl0 is associated with the Client Name datadumper and that the Client is authorized to access crm.example.com.</source>
            <target state="new">The Authorization Server checks that the Client Password j2hw7GPsl0 is associated with the Client Name datadumper and that the Client is authorized to access crm.example.com.</target>
          </trans-unit>
          <trans-unit id="526" translate="yes" xml:space="preserve">
            <source>The Authorization Server notes the time is 2010-02-03T04:05:06Z, which is 1265198706 seconds since 1970-01-01T0:0:0Z.</source>
            <target state="new">The Authorization Server notes the time is 2010-02-03T04:05:06Z, which is 1265198706 seconds since 1970-01-01T0:0:0Z.</target>
          </trans-unit>
          <trans-unit id="527" translate="yes" xml:space="preserve">
            <source>The Authorization Server would like the Access Token to expire in an hour, so 3600 is added to the current time.</source>
            <target state="new">The Authorization Server would like the Access Token to expire in an hour, so 3600 is added to the current time.</target>
          </trans-unit>
          <trans-unit id="528" translate="yes" xml:space="preserve">
            <source>The Authorization Server then uses the values:</source>
            <target state="new">The Authorization Server then uses the values:</target>
          </trans-unit>
        </group>
        <group id="324">
          <trans-unit id="529" translate="yes" xml:space="preserve">
            <source>net.example.auth.account: datadumper</source>
            <target state="new">net.example.auth.account: datadumper</target>
          </trans-unit>
        </group>
        <group id="325">
          <trans-unit id="530" translate="yes" xml:space="preserve">
            <source>ExpiresOn: 1265202306 (1265198706 + 3600)</source>
            <target state="new">ExpiresOn: 1265202306 (1265198706 + 3600)</target>
          </trans-unit>
        </group>
        <group id="326">
          <trans-unit id="531" translate="yes" xml:space="preserve">
            <source>Audience: crm.example.com </source>
            <target state="new">Audience: crm.example.com </target>
          </trans-unit>
        </group>
        <group id="327">
          <trans-unit id="532" translate="yes" xml:space="preserve">
            <source>Issuer: auth.example.net</source>
            <target state="new">Issuer: auth.example.net</target>
          </trans-unit>
        </group>
        <group id="328">
          <trans-unit id="533" translate="yes" xml:space="preserve">
            <source>and the agreed HMAC key to generate the following SWT:  <ph id="1">&lt;codeInline&gt;net.example.auth.account=datadumper%%amp;amp;ExpiresOn=1265202306%%amp;amp;Audience=crm.example.com%%amp;amp;Issuer=auth.example.net%%amp;amp;HMACSHA256=N9%2F%2F0tSos78Me36%2BioBH0sFKfd7eCsURlEIheoUbCJk%3D&lt;/codeInline&gt;</ph></source>
            <target state="new">and the agreed HMAC key to generate the following SWT:  <ph id="1">&lt;codeInline&gt;net.example.auth.account=datadumper%%amp;amp;ExpiresOn=1265202306%%amp;amp;Audience=crm.example.com%%amp;amp;Issuer=auth.example.net%%amp;amp;HMACSHA256=N9%2F%2F0tSos78Me36%2BioBH0sFKfd7eCsURlEIheoUbCJk%3D&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="329">
          <trans-unit id="534" translate="yes" xml:space="preserve">
            <source>The Authorization Server then responds to the Clients HTTPS request with:  <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph> and the Access Token and lifetime of the Access Token as application/x-www-form-urlencoded data in the body of the message as such: <ph id="2">&lt;codeInline&gt;wrap_access_token=net.example.auth.account%3Ddatadumper%26ExpiresOn%3D1265202306%26Audience%3Dcrm.example.com%26Issuer%3Dauth.example.net%26HMACSHA256%3DN9%252F%252F0tSos78Me36%252BioBH0sFKfd7eCsURlEIheoUbCJk%253D%%amp;amp;wrap_access_token_expires_in=3600&lt;/codeInline&gt;</ph></source>
            <target state="new">The Authorization Server then responds to the Clients HTTPS request with:  <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph> and the Access Token and lifetime of the Access Token as application/x-www-form-urlencoded data in the body of the message as such: <ph id="2">&lt;codeInline&gt;wrap_access_token=net.example.auth.account%3Ddatadumper%26ExpiresOn%3D1265202306%26Audience%3Dcrm.example.com%26Issuer%3Dauth.example.net%26HMACSHA256%3DN9%252F%252F0tSos78Me36%252BioBH0sFKfd7eCsURlEIheoUbCJk%253D%%amp;amp;wrap_access_token_expires_in=3600&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="330">
          <trans-unit id="535" translate="yes" xml:space="preserve">
            <source>Client Calls Protected Resource</source>
            <target state="new">Client Calls Protected Resource</target>
          </trans-unit>
        </group>
        <group id="331">
          <trans-unit id="536" translate="yes" xml:space="preserve">
            <source>The Client now has an Access Token valid for an hour.</source>
            <target state="new">The Client now has an Access Token valid for an hour.</target>
          </trans-unit>
          <trans-unit id="537" translate="yes" xml:space="preserve">
            <source>The Client makes an API call to:<ph id="1">&lt;codeInline&gt;https://crm.example.com/data&lt;/codeInline&gt;</ph> including the following HTTP header: <ph id="2">&lt;codeInline&gt;Authorization: WRAP access_token="net.example.auth.account=datadumper%%amp;amp; ExpiresOn=1265202306%%amp;amp;Audience=crm.example.com%%amp;amp;Issuer=auth.example.net%%amp;amp;HMACSHA256=N9%2F%2F0tSos78Me36%2BioBH0sFKfd7eCsURlEIheoUbCJk%3D"&lt;/codeInline&gt;</ph></source>
            <target state="new">The Client makes an API call to:<ph id="1">&lt;codeInline&gt;https://crm.example.com/data&lt;/codeInline&gt;</ph> including the following HTTP header: <ph id="2">&lt;codeInline&gt;Authorization: WRAP access_token="net.example.auth.account=datadumper%%amp;amp; ExpiresOn=1265202306%%amp;amp;Audience=crm.example.com%%amp;amp;Issuer=auth.example.net%%amp;amp;HMACSHA256=N9%2F%2F0tSos78Me36%2BioBH0sFKfd7eCsURlEIheoUbCJk%3D"&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="332">
          <trans-unit id="538" translate="yes" xml:space="preserve">
            <source>The Protected Resources verifies the SWT and performs the Client's request per the authorization attributes in the SWT.</source>
            <target state="new">The Protected Resources verifies the SWT and performs the Client's request per the authorization attributes in the SWT.</target>
          </trans-unit>
        </group>
        <group id="333">
          <trans-unit id="539" translate="yes" xml:space="preserve">
            <source>Appendix B: Web App Profile Example</source>
            <target state="new">Appendix B: Web App Profile Example</target>
          </trans-unit>
        </group>
        <group id="334">
          <trans-unit id="540" translate="yes" xml:space="preserve">
            <source>In this example, Jane, the User, listens to music from music.example.com and updates her status at status.example.com.</source>
            <target state="new">In this example, Jane, the User, listens to music from music.example.com and updates her status at status.example.com.</target>
          </trans-unit>
          <trans-unit id="541" translate="yes" xml:space="preserve">
            <source>When listening to music, Jane would like her status to be updated at the start of each song.</source>
            <target state="new">When listening to music, Jane would like her status to be updated at the start of each song.</target>
          </trans-unit>
          <trans-unit id="542" translate="yes" xml:space="preserve">
            <source>From an OAuth WRAP perspective, the Client is music.example.com, the Protected Resource is https://status.example.com/update, and auth.example.com is the Authorization Server trusted by status.example.com.</source>
            <target state="new">From an OAuth WRAP perspective, the Client is music.example.com, the Protected Resource is https://status.example.com/update, and auth.example.com is the Authorization Server trusted by status.example.com.</target>
          </trans-unit>
        </group>
        <group id="335">
          <trans-unit id="543" translate="yes" xml:space="preserve">
            <source>Provisioning</source>
            <target state="new">Provisioning</target>
          </trans-unit>
        </group>
        <group id="336">
          <trans-unit id="544" translate="yes" xml:space="preserve">
            <source>The Authorization Server documentation defines the following URLs:</source>
            <target state="new">The Authorization Server documentation defines the following URLs:</target>
          </trans-unit>
        </group>
        <group id="337">
          <trans-unit id="545" translate="yes" xml:space="preserve">
            <source>User Authorization URL: https://auth.example.com/user_authorization</source>
            <target state="new">User Authorization URL: https://auth.example.com/user_authorization</target>
          </trans-unit>
        </group>
        <group id="338">
          <trans-unit id="546" translate="yes" xml:space="preserve">
            <source>Access Token URL:  https://auth.example.com/access_token</source>
            <target state="new">Access Token URL:  https://auth.example.com/access_token</target>
          </trans-unit>
        </group>
        <group id="339">
          <trans-unit id="547" translate="yes" xml:space="preserve">
            <source>Refresh Token URL:  https://auth.example.com/refresh_token</source>
            <target state="new">Refresh Token URL:  https://auth.example.com/refresh_token</target>
          </trans-unit>
        </group>
        <group id="340">
          <trans-unit id="548" translate="yes" xml:space="preserve">
            <source>The Authorization Server has defined that if the Client wants authorization to update a User's status, that the Client include the wrap_scope parameter with the value status_update when requesting authorization.</source>
            <target state="new">The Authorization Server has defined that if the Client wants authorization to update a User's status, that the Client include the wrap_scope parameter with the value status_update when requesting authorization.</target>
          </trans-unit>
        </group>
        <group id="341">
          <trans-unit id="549" translate="yes" xml:space="preserve">
            <source>The Client has been provisioned with: <ph id="1">&lt;codeInline&gt;Client Identifier: music.example.com Client Secret: 7F2986DF2342914A&lt;/codeInline&gt;</ph></source>
            <target state="new">The Client has been provisioned with: <ph id="1">&lt;codeInline&gt;Client Identifier: music.example.com Client Secret: 7F2986DF2342914A&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="342">
          <trans-unit id="550" translate="yes" xml:space="preserve">
            <source>The Client has registered the Callback URL:  <ph id="1">&lt;codeInline&gt;https://music.example.com/auth_callback&lt;/codeInline&gt;</ph></source>
            <target state="new">The Client has registered the Callback URL:  <ph id="1">&lt;codeInline&gt;https://music.example.com/auth_callback&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="343">
          <trans-unit id="551" translate="yes" xml:space="preserve">
            <source>The Protected Resource and the Authorization Server have agreed to use a Simple Web Token (SWT) for the Access Token with the reserved attributes Issuer, Audience, ExpiresOn and the public attributes com.example.auth.account, com.example.auth.client and com.example.auth.scope.</source>
            <target state="new">The Protected Resource and the Authorization Server have agreed to use a Simple Web Token (SWT) for the Access Token with the reserved attributes Issuer, Audience, ExpiresOn and the public attributes com.example.auth.account, com.example.auth.client and com.example.auth.scope.</target>
          </trans-unit>
          <trans-unit id="552" translate="yes" xml:space="preserve">
            <source>They have exchanged the following HMAC key value (expressed in base 64): <ph id="1">&lt;codeInline&gt;Zt9JlL1QvPYRSCK9PgSjrxRUBWe7lbEYsZCdM+sJCF4=&lt;/codeInline&gt;</ph></source>
            <target state="new">They have exchanged the following HMAC key value (expressed in base 64): <ph id="1">&lt;codeInline&gt;Zt9JlL1QvPYRSCK9PgSjrxRUBWe7lbEYsZCdM+sJCF4=&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="344">
          <trans-unit id="553" translate="yes" xml:space="preserve">
            <source>Client Directs the User to the Server</source>
            <target state="new">Client Directs the User to the Server</target>
          </trans-unit>
        </group>
        <group id="345">
          <trans-unit id="554" translate="yes" xml:space="preserve">
            <source>Jane informs music.example.com that she would like her status at status.example.com to be updated when a new song starts playing.</source>
            <target state="new">Jane informs music.example.com that she would like her status at status.example.com to be updated when a new song starts playing.</target>
          </trans-unit>
          <trans-unit id="555" translate="yes" xml:space="preserve">
            <source>The music.example.com website maintains user sessions with a URL parameter named session which has the value Vn3IG2FRALSEQX2Nxr at this time for Jane.</source>
            <target state="new">The music.example.com website maintains user sessions with a URL parameter named session which has the value Vn3IG2FRALSEQX2Nxr at this time for Jane.</target>
          </trans-unit>
          <trans-unit id="556" translate="yes" xml:space="preserve">
            <source>The Client will use wrap_client_state to maintain the session value.</source>
            <target state="new">The Client will use wrap_client_state to maintain the session value.</target>
          </trans-unit>
          <trans-unit id="557" translate="yes" xml:space="preserve">
            <source>The Client redirects Jane's browser to the Authorization Server's User Authorization URL appending parameters for the Client Identifier, Callback URL, Client state and authorization scope.</source>
            <target state="new">The Client redirects Jane's browser to the Authorization Server's User Authorization URL appending parameters for the Client Identifier, Callback URL, Client state and authorization scope.</target>
          </trans-unit>
          <trans-unit id="558" translate="no" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;https://auth.example.com/user_authorization?wrap_client_id=music.example.com%%amp;amp;wrap_callback=http%3A%2F%2Fmusic.example.com%2Fauth_callback%%amp;amp;wrap_client_state=Vn3IG2FRALSEQX2Nxr%%amp;amp;wrap_scope=status_update&lt;/codeInline&gt;</ph></source>
            <target state="new"><ph id="1">&lt;codeInline&gt;https://auth.example.com/user_authorization?wrap_client_id=music.example.com%%amp;amp;wrap_callback=http%3A%2F%2Fmusic.example.com%2Fauth_callback%%amp;amp;wrap_client_state=Vn3IG2FRALSEQX2Nxr%%amp;amp;wrap_scope=status_update&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="346">
          <trans-unit id="559" translate="yes" xml:space="preserve">
            <source>Authorization Server Confirms Delegation Request with User</source>
            <target state="new">Authorization Server Confirms Delegation Request with User</target>
          </trans-unit>
        </group>
        <group id="347">
          <trans-unit id="560" translate="yes" xml:space="preserve">
            <source>The Authorization Server verifies the supplied Client Identifier music.example.com has been registered and has the Callback URL https://music.example.com/auth_callback.</source>
            <target state="new">The Authorization Server verifies the supplied Client Identifier music.example.com has been registered and has the Callback URL https://music.example.com/auth_callback.</target>
          </trans-unit>
          <trans-unit id="561" translate="yes" xml:space="preserve">
            <source>The Authorization Server authenticates that the User it is dealing with is Jane, and then asks Jane to authorize music.example.com to update Jane's status at status.example.com.</source>
            <target state="new">The Authorization Server authenticates that the User it is dealing with is Jane, and then asks Jane to authorize music.example.com to update Jane's status at status.example.com.</target>
          </trans-unit>
          <trans-unit id="562" translate="yes" xml:space="preserve">
            <source>Jane approves the request and the Authorization Server generates a Verification Code with the value 46YEXQjVit6T3nQ8, stores it with the Client Identifier, Callback URl and the current time.</source>
            <target state="new">Jane approves the request and the Authorization Server generates a Verification Code with the value 46YEXQjVit6T3nQ8, stores it with the Client Identifier, Callback URl and the current time.</target>
          </trans-unit>
        </group>
        <group id="348">
          <trans-unit id="563" translate="yes" xml:space="preserve">
            <source>Server Directs User back to the Client</source>
            <target state="new">Server Directs User back to the Client</target>
          </trans-unit>
        </group>
        <group id="349">
          <trans-unit id="564" translate="yes" xml:space="preserve">
            <source>The Server redirects Jane back to the Client's Callback URL with the Verification Code and Client State appended:  <ph id="1">&lt;codeInline&gt;https://music.example.com/auth_callback?wrap_verification_code=46YEXQjVit6T3nQ8%%amp;amp;wrap_client_state=Vn3IG2FRALSEQX2Nxr&lt;/codeInline&gt;</ph></source>
            <target state="new">The Server redirects Jane back to the Client's Callback URL with the Verification Code and Client State appended:  <ph id="1">&lt;codeInline&gt;https://music.example.com/auth_callback?wrap_verification_code=46YEXQjVit6T3nQ8%%amp;amp;wrap_client_state=Vn3IG2FRALSEQX2Nxr&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="350">
          <trans-unit id="565" translate="yes" xml:space="preserve">
            <source>Client Requests Access Token</source>
            <target state="new">Client Requests Access Token</target>
          </trans-unit>
        </group>
        <group id="351">
          <trans-unit id="566" translate="yes" xml:space="preserve">
            <source>The Client makes an HTTPS POST request to:  <ph id="1">&lt;codeInline&gt;https://auth.example.com/access_token&lt;/codeInline&gt;</ph></source>
            <target state="new">The Client makes an HTTPS POST request to:  <ph id="1">&lt;codeInline&gt;https://auth.example.com/access_token&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="352">
          <trans-unit id="567" translate="yes" xml:space="preserve">
            <source>With the following message body:  <ph id="1">&lt;codeInline&gt;wrap_client_id=music.example.com%%amp;amp;wrap_client_secret=7F2986DF2342914A%%amp;amp;wrap_verification_code=46YEXQjVit6T3nQ8%%amp;amp;wrap_callback=http%3A%2F%2Fmusic.example.com%2Fauth_callback&lt;/codeInline&gt;</ph></source>
            <target state="new">With the following message body:  <ph id="1">&lt;codeInline&gt;wrap_client_id=music.example.com%%amp;amp;wrap_client_secret=7F2986DF2342914A%%amp;amp;wrap_verification_code=46YEXQjVit6T3nQ8%%amp;amp;wrap_callback=http%3A%2F%2Fmusic.example.com%2Fauth_callback&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="353">
          <trans-unit id="568" translate="yes" xml:space="preserve">
            <source>Successful Access Token Response from Authorization Server</source>
            <target state="new">Successful Access Token Response from Authorization Server</target>
          </trans-unit>
        </group>
        <group id="354">
          <trans-unit id="569" translate="yes" xml:space="preserve">
            <source>The Authorization Server verifies that the Verification Code is still valid, has not been used, and is associated with the Client ID, Client Secret and Callback URL Password.</source>
            <target state="new">The Authorization Server verifies that the Verification Code is still valid, has not been used, and is associated with the Client ID, Client Secret and Callback URL Password.</target>
          </trans-unit>
          <trans-unit id="570" translate="yes" xml:space="preserve">
            <source>The Authorization Server then generates a Refresh Token with the value:  <ph id="1">&lt;codeInline&gt;MfdWTc+v9MXhpc+d/csrKFMPfj1RySm6CzIjmTBGN6w=&lt;/codeInline&gt;</ph></source>
            <target state="new">The Authorization Server then generates a Refresh Token with the value:  <ph id="1">&lt;codeInline&gt;MfdWTc+v9MXhpc+d/csrKFMPfj1RySm6CzIjmTBGN6w=&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="355">
          <trans-unit id="571" translate="yes" xml:space="preserve">
            <source>The Authorization Server notes the time is 2010-01-02T03:04:05Z, which is 1262430245 seconds since 1970-01-01T0:0:0Z.</source>
            <target state="new">The Authorization Server notes the time is 2010-01-02T03:04:05Z, which is 1262430245 seconds since 1970-01-01T0:0:0Z.</target>
          </trans-unit>
          <trans-unit id="572" translate="yes" xml:space="preserve">
            <source>The Authorization Server then uses the values:</source>
            <target state="new">The Authorization Server then uses the values:</target>
          </trans-unit>
        </group>
        <group id="356">
          <trans-unit id="573" translate="yes" xml:space="preserve">
            <source>com.example.auth.scope: status_updatea</source>
            <target state="new">com.example.auth.scope: status_updatea</target>
          </trans-unit>
        </group>
        <group id="357">
          <trans-unit id="574" translate="yes" xml:space="preserve">
            <source>com.example.auth.account: Jane</source>
            <target state="new">com.example.auth.account: Jane</target>
          </trans-unit>
        </group>
        <group id="358">
          <trans-unit id="575" translate="yes" xml:space="preserve">
            <source>com.example.auth.client: music.example.com</source>
            <target state="new">com.example.auth.client: music.example.com</target>
          </trans-unit>
        </group>
        <group id="359">
          <trans-unit id="576" translate="yes" xml:space="preserve">
            <source>ExpiresOn: 1262433845 (1262430245 + 3600 seconds later)</source>
            <target state="new">ExpiresOn: 1262433845 (1262430245 + 3600 seconds later)</target>
          </trans-unit>
        </group>
        <group id="360">
          <trans-unit id="577" translate="yes" xml:space="preserve">
            <source>Audience: status.example.com </source>
            <target state="new">Audience: status.example.com </target>
          </trans-unit>
        </group>
        <group id="361">
          <trans-unit id="578" translate="yes" xml:space="preserve">
            <source>Issuer: auth.example.com</source>
            <target state="new">Issuer: auth.example.com</target>
          </trans-unit>
        </group>
        <group id="362">
          <trans-unit id="579" translate="yes" xml:space="preserve">
            <source>and the agreed HMAC key to generate the following SWT: <ph id="1">&lt;codeInline&gt;com.example.auth.scope=status_update%%amp;amp;com.example.auth.account=Jane%%amp;amp;com.example.auth.client=music.example.com%%amp;amp;ExpiresOn=1262433845%%amp;amp;Audience=status.example.com%%amp;amp;Issuer=auth.example.com%%amp;amp;HMACSHA256=3xZAYzJRtYCQgkAF3iqElp1DhyKkPhq947j04NcDocQ%3D&lt;/codeInline&gt;</ph></source>
            <target state="new">and the agreed HMAC key to generate the following SWT: <ph id="1">&lt;codeInline&gt;com.example.auth.scope=status_update%%amp;amp;com.example.auth.account=Jane%%amp;amp;com.example.auth.client=music.example.com%%amp;amp;ExpiresOn=1262433845%%amp;amp;Audience=status.example.com%%amp;amp;Issuer=auth.example.com%%amp;amp;HMACSHA256=3xZAYzJRtYCQgkAF3iqElp1DhyKkPhq947j04NcDocQ%3D&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="363">
          <trans-unit id="580" translate="yes" xml:space="preserve">
            <source>The Authorization Server then responds to the Clients HTTPS request with: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph>  and the Refresh Token, Access Token and lifetime of the Access Token as application/x-www-form-urlencoded data in the body of the message as such: <ph id="2">&lt;codeInline&gt;wrap_refresh_token=MfdWTc%2Bv9MXhpc%2Bd%2FcsrKFMPfj1RySm6CzIjmTBGN6w%3D%%amp;amp;wrap_access_token=com.example.auth.scope%3Dstatus_update%26com.example.auth.account%3DJane%26com.example.auth.client%3Dmusic.example.com%26ExpiresOn%3D1262433845%26Audience%3Dstatus.example.com%26Issuer%3Dauth.example.com%26HMACSHA256%3D3xZAYzJRtYCQgkAF3iqElp1DhyKkPhq947j04NcDocQ%253D%%amp;amp;wrap_access_token_expires_in=3600&lt;/codeInline&gt;</ph></source>
            <target state="new">The Authorization Server then responds to the Clients HTTPS request with: <ph id="1">&lt;codeInline&gt;HTTP 200 OK&lt;/codeInline&gt;</ph>  and the Refresh Token, Access Token and lifetime of the Access Token as application/x-www-form-urlencoded data in the body of the message as such: <ph id="2">&lt;codeInline&gt;wrap_refresh_token=MfdWTc%2Bv9MXhpc%2Bd%2FcsrKFMPfj1RySm6CzIjmTBGN6w%3D%%amp;amp;wrap_access_token=com.example.auth.scope%3Dstatus_update%26com.example.auth.account%3DJane%26com.example.auth.client%3Dmusic.example.com%26ExpiresOn%3D1262433845%26Audience%3Dstatus.example.com%26Issuer%3Dauth.example.com%26HMACSHA256%3D3xZAYzJRtYCQgkAF3iqElp1DhyKkPhq947j04NcDocQ%253D%%amp;amp;wrap_access_token_expires_in=3600&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="364">
          <trans-unit id="581" translate="yes" xml:space="preserve">
            <source>The Client now has a Refresh Token and Access Token valid for an hour.</source>
            <target state="new">The Client now has a Refresh Token and Access Token valid for an hour.</target>
          </trans-unit>
          <trans-unit id="582" translate="yes" xml:space="preserve">
            <source>The Client stores the Refresh Token for later use.</source>
            <target state="new">The Client stores the Refresh Token for later use.</target>
          </trans-unit>
        </group>
        <group id="365">
          <trans-unit id="583" translate="yes" xml:space="preserve">
            <source>Client Calls Protected Resource</source>
            <target state="new">Client Calls Protected Resource</target>
          </trans-unit>
        </group>
        <group id="366">
          <trans-unit id="584" translate="yes" xml:space="preserve">
            <source>A few minutes later, music.example.com starts playing a new song for Jane.</source>
            <target state="new">A few minutes later, music.example.com starts playing a new song for Jane.</target>
          </trans-unit>
          <trans-unit id="585" translate="yes" xml:space="preserve">
            <source>The Client updates Jane's status at status.example.com by making an API call to:<ph id="1">&lt;codeInline&gt;https://status.example.com/update&lt;/codeInline&gt;</ph> including the following HTTP header: <ph id="2">&lt;codeInline&gt;Authorization: WRAP access_token="com.example.auth.scope=status_update %%amp;amp;com.example.auth.account=Jane%%amp;amp;com.example.auth.client=music.example.com%%amp;amp;ExpiresOn=1262433845%%amp;amp;Audience=status.example.com%%amp;amp;Issuer=auth.example.com%%amp;amp;HMACSHA256=3xZAYzJRtYCQgkAF3iqElp1DhyKkPhq947j04NcDocQ%3D"&lt;/codeInline&gt;</ph></source>
            <target state="new">The Client updates Jane's status at status.example.com by making an API call to:<ph id="1">&lt;codeInline&gt;https://status.example.com/update&lt;/codeInline&gt;</ph> including the following HTTP header: <ph id="2">&lt;codeInline&gt;Authorization: WRAP access_token="com.example.auth.scope=status_update %%amp;amp;com.example.auth.account=Jane%%amp;amp;com.example.auth.client=music.example.com%%amp;amp;ExpiresOn=1262433845%%amp;amp;Audience=status.example.com%%amp;amp;Issuer=auth.example.com%%amp;amp;HMACSHA256=3xZAYzJRtYCQgkAF3iqElp1DhyKkPhq947j04NcDocQ%3D"&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="367">
          <trans-unit id="586" translate="yes" xml:space="preserve">
            <source>The Protected Resources verifies the SWT, confirms the authorization contained in the SWT, and updates Jane's status.</source>
            <target state="new">The Protected Resources verifies the SWT, confirms the authorization contained in the SWT, and updates Jane's status.</target>
          </trans-unit>
        </group>
        <group id="368">
          <trans-unit id="587" translate="yes" xml:space="preserve">
            <source>Client Calls Refreshes Access Token</source>
            <target state="new">Client Calls Refreshes Access Token</target>
          </trans-unit>
        </group>
        <group id="369">
          <trans-unit id="588" translate="yes" xml:space="preserve">
            <source>An hour passes by and music.example.com starts playing another new song for Jane.</source>
            <target state="new">An hour passes by and music.example.com starts playing another new song for Jane.</target>
          </trans-unit>
          <trans-unit id="589" translate="yes" xml:space="preserve">
            <source>The Client again makes an API call to status.example.com including the same HTTP Authorization header.</source>
            <target state="new">The Client again makes an API call to status.example.com including the same HTTP Authorization header.</target>
          </trans-unit>
          <trans-unit id="590" translate="yes" xml:space="preserve">
            <source>Unlike previous calls where the status update was performed, the Protected Resource returns the following error response: <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph>  and the HTTP header:       <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></source>
            <target state="new">Unlike previous calls where the status update was performed, the Protected Resource returns the following error response: <ph id="1">&lt;codeInline&gt;HTTP 401 Unauthorized&lt;/codeInline&gt;</ph>  and the HTTP header:       <ph id="2">&lt;codeInline&gt;WWW-Authenticate: WRAP&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="370">
          <trans-unit id="591" translate="yes" xml:space="preserve">
            <source>The Client determines it probably needs a new Access Token, retrieves the Refresh Token and makes an HTTPS POST to:<ph id="1">&lt;codeInline&gt;https://auth.example.com/refresh_token&lt;/codeInline&gt;</ph> including the Client Identifier, Client Secret and Refresh Token in the message body as: <ph id="2">&lt;codeInline&gt;wrap_client_id=music.example.com%%amp;amp;wrap_client_secret=7F2986DF2342914A%%amp;amp;wrap_refresh_token=MfdWTc%2Bv9MXhpc%2Bd%2FcsrKFMPfj1RySm6CzIjmTBGN6w%3D&lt;/codeInline&gt;</ph></source>
            <target state="new">The Client determines it probably needs a new Access Token, retrieves the Refresh Token and makes an HTTPS POST to:<ph id="1">&lt;codeInline&gt;https://auth.example.com/refresh_token&lt;/codeInline&gt;</ph> including the Client Identifier, Client Secret and Refresh Token in the message body as: <ph id="2">&lt;codeInline&gt;wrap_client_id=music.example.com%%amp;amp;wrap_client_secret=7F2986DF2342914A%%amp;amp;wrap_refresh_token=MfdWTc%2Bv9MXhpc%2Bd%2FcsrKFMPfj1RySm6CzIjmTBGN6w%3D&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="371">
          <trans-unit id="592" translate="yes" xml:space="preserve">
            <source>The Authorization Server looks up the data associated with the Refresh Token, determines music.example.com is still authorized to update Jane's status, and determines it will generate a new Access Token for the Client that expires in an hour.</source>
            <target state="new">The Authorization Server looks up the data associated with the Refresh Token, determines music.example.com is still authorized to update Jane's status, and determines it will generate a new Access Token for the Client that expires in an hour.</target>
          </trans-unit>
          <trans-unit id="593" translate="yes" xml:space="preserve">
            <source>The time is now 2010-01-02T04:15:23Z, which results in an Access Token expiry time of 1262438123 seconds since 1970-01-01T0:0:0Z.</source>
            <target state="new">The time is now 2010-01-02T04:15:23Z, which results in an Access Token expiry time of 1262438123 seconds since 1970-01-01T0:0:0Z.</target>
          </trans-unit>
          <trans-unit id="594" translate="yes" xml:space="preserve">
            <source>The Authorization Server generates a new Access Token and returns it in the body of the message as: <ph id="1">&lt;codeInline&gt;wrap_access_token=com.example.auth.scope=status_update%%amp;amp;com.example.auth.account=Jane%%amp;amp;com.example.auth.client=music.example.com%%amp;amp;ExpiresOn=1262438123%%amp;amp;Audience=status.example.com%%amp;amp;Issuer=auth.example.com%%amp;amp;HMACSHA256=AT4TFChHgyylItEWAjK7MFRJuvUS3WLVzO%2F68gvIRQI%3D%%amp;amp;wrap_access_token_expires_in=3600&lt;/codeInline&gt;</ph></source>
            <target state="new">The Authorization Server generates a new Access Token and returns it in the body of the message as: <ph id="1">&lt;codeInline&gt;wrap_access_token=com.example.auth.scope=status_update%%amp;amp;com.example.auth.account=Jane%%amp;amp;com.example.auth.client=music.example.com%%amp;amp;ExpiresOn=1262438123%%amp;amp;Audience=status.example.com%%amp;amp;Issuer=auth.example.com%%amp;amp;HMACSHA256=AT4TFChHgyylItEWAjK7MFRJuvUS3WLVzO%2F68gvIRQI%3D%%amp;amp;wrap_access_token_expires_in=3600&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="372">
          <trans-unit id="595" translate="yes" xml:space="preserve">
            <source>The Client takes the new Access Token and uses it to successfully update Jane's status at status.example.com.</source>
            <target state="new">The Client takes the new Access Token and uses it to successfully update Jane's status at status.example.com.</target>
          </trans-unit>
        </group>
        <group id="373">
          <trans-unit id="596" translate="yes" xml:space="preserve">
            <source>Appendix C: OAuth WRAP vs. OAuth 1.0A</source>
            <target state="new">Appendix C: OAuth WRAP vs. OAuth 1.0A</target>
          </trans-unit>
        </group>
        <group id="374">
          <trans-unit id="597" translate="yes" xml:space="preserve">
            <source>OAuth WRAP requires the Authorization Server to support HTTPS, OAuth 1.0A does not.</source>
            <target state="new">OAuth WRAP requires the Authorization Server to support HTTPS, OAuth 1.0A does not.</target>
          </trans-unit>
        </group>
        <group id="375">
          <trans-unit id="598" translate="yes" xml:space="preserve">
            <source>The Access Token in OAuth WRAP is opaque to the Client.</source>
            <target state="new">The Access Token in OAuth WRAP is opaque to the Client.</target>
          </trans-unit>
          <trans-unit id="599" translate="yes" xml:space="preserve">
            <source>The Client does not need to perform any cryptography except for calling HTTPS.</source>
            <target state="new">The Client does not need to perform any cryptography except for calling HTTPS.</target>
          </trans-unit>
        </group>
        <group id="376">
          <trans-unit id="600" translate="yes" xml:space="preserve">
            <source>The Access Token in OAuth WRAP can contain authorization information, or claims, enabling the Protected Resource to determine the Client’s authorization without querying any other resource.</source>
            <target state="new">The Access Token in OAuth WRAP can contain authorization information, or claims, enabling the Protected Resource to determine the Client’s authorization without querying any other resource.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>