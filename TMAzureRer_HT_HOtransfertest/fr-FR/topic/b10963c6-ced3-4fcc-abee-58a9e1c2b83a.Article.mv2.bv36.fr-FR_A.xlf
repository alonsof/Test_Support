<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="fr-FR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANycsJwzAMANBVNIAElu340wFKz6ULSK4EgTSBNIGM377rc0+mOQ4yy5kyeyANTWkEltK7s0hHyJVdlQv1kiJlqRNJCBO1amK1tsC1IiiH/49Cw96Jso9BomY0NenGI2pLgsAIvtP9iXAts7tdx23ftgMhIqSC8Dg/sr52Wb+LHPO2/gCAinjZogAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Performing Entity Group Transactions</source>
            <target state="new">Performing Entity Group Transactions</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>The Table service supports batch transactions on entities that are in the same table and belong to the same partition group.</source>
            <target state="new">The Table service supports batch transactions on entities that are in the same table and belong to the same partition group.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Multiple <ph id="1">&lt;link xlink:href="9ca046aa-e9b4-4eaf-a7c0-d6ccdbaf48b9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Insert Entity&lt;/link&gt;</ph>, <ph id="2">&lt;link xlink:href="96a833e2-388c-460c-bfad-11e723c67d3f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Update Entity&lt;/link&gt;</ph>, <ph id="3">&lt;link xlink:href="55fdf460-c80e-43af-bf1d-fbf5a4ad2291" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Merge Entity&lt;/link&gt;</ph>, <ph id="4">&lt;link xlink:href="e477539a-d36a-49cc-b3be-916a372d9c92" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Delete Entity&lt;/link&gt;</ph>, <ph id="5">&lt;link xlink:href="630d4109-2112-46c2-83fc-657d2ab1d26f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Insert Or Replace Entity&lt;/link&gt;</ph>, and <ph id="6">&lt;link xlink:href="2de2c193-befe-4b7f-864a-650f3d861939" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Insert Or Merge Entity&lt;/link&gt;</ph> operations are supported within a single transaction.</source>
            <target state="new">Multiple <ph id="1">&lt;link xlink:href="9ca046aa-e9b4-4eaf-a7c0-d6ccdbaf48b9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Insert Entity&lt;/link&gt;</ph>, <ph id="2">&lt;link xlink:href="96a833e2-388c-460c-bfad-11e723c67d3f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Update Entity&lt;/link&gt;</ph>, <ph id="3">&lt;link xlink:href="55fdf460-c80e-43af-bf1d-fbf5a4ad2291" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Merge Entity&lt;/link&gt;</ph>, <ph id="4">&lt;link xlink:href="e477539a-d36a-49cc-b3be-916a372d9c92" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Delete Entity&lt;/link&gt;</ph>, <ph id="5">&lt;link xlink:href="630d4109-2112-46c2-83fc-657d2ab1d26f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Insert Or Replace Entity&lt;/link&gt;</ph>, and <ph id="6">&lt;link xlink:href="2de2c193-befe-4b7f-864a-650f3d861939" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Insert Or Merge Entity&lt;/link&gt;</ph> operations are supported within a single transaction.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Requirements for Entity Group Transactions</source>
            <target state="new">Requirements for Entity Group Transactions</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>An entity group transaction must meet the following requirements:</source>
            <target state="new">An entity group transaction must meet the following requirements:</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>All entities subject to operations as part of the transaction must have the same <ph id="1">&lt;unmanagedCodeEntityReference&gt;PartitionKey&lt;/unmanagedCodeEntityReference&gt;</ph> value.</source>
            <target state="new">All entities subject to operations as part of the transaction must have the same <ph id="1">&lt;unmanagedCodeEntityReference&gt;PartitionKey&lt;/unmanagedCodeEntityReference&gt;</ph> value.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>An entity can appear only once in the transaction, and only one operation may be performed against it.</source>
            <target state="new">An entity can appear only once in the transaction, and only one operation may be performed against it.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>The transaction can include at most 100 entities, and its total payload may be no more than 4 MB in size.</source>
            <target state="new">The transaction can include at most 100 entities, and its total payload may be no more than 4 MB in size.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>All entities are subject to the limitations described in <ph id="1">&lt;link xlink:href="01f78ed1-9cbd-4b00-8113-71129751357e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Understanding the Table Service Data Model&lt;/link&gt;</ph>.</source>
            <target state="new">All entities are subject to the limitations described in <ph id="1">&lt;link xlink:href="01f78ed1-9cbd-4b00-8113-71129751357e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Understanding the Table Service Data Model&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Table Service Support for OData Batch Requests</source>
            <target state="new">Table Service Support for OData Batch Requests</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>The semantics for entity group transactions are defined by the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>OData Protocol Specification<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://www.odata.org/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">The semantics for entity group transactions are defined by the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>OData Protocol Specification<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://www.odata.org/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The OData specification defines the following concepts for batch requests:</source>
            <target state="new">The OData specification defines the following concepts for batch requests:</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>A <bpt id="1">&lt;newTerm&gt;</bpt>change set<ept id="1">&lt;/newTerm&gt;</ept> is a group of one or more insert, update, or delete operations.</source>
            <target state="new">A <bpt id="1">&lt;newTerm&gt;</bpt>change set<ept id="1">&lt;/newTerm&gt;</ept> is a group of one or more insert, update, or delete operations.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>A <bpt id="1">&lt;newTerm&gt;</bpt>batch<ept id="1">&lt;/newTerm&gt;</ept> is a container of operations, including one or more change sets and query operations.</source>
            <target state="new">A <bpt id="1">&lt;newTerm&gt;</bpt>batch<ept id="1">&lt;/newTerm&gt;</ept> is a container of operations, including one or more change sets and query operations.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The Table service supports a subset of the functionality defined by the OData specification:</source>
            <target state="new">The Table service supports a subset of the functionality defined by the OData specification:</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>The Table service supports only a single change set within a batch.</source>
            <target state="new">The Table service supports only a single change set within a batch.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>The change set can include multiple insert, update, and delete operations.</source>
            <target state="new">The change set can include multiple insert, update, and delete operations.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>If a batch includes more than one change set, the first change set will be processed by the service, and additional change sets will be rejected with status code 400 (Bad Request).</source>
            <target state="new">If a batch includes more than one change set, the first change set will be processed by the service, and additional change sets will be rejected with status code 400 (Bad Request).</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Multiple operations against a single entity are not permitted within a change set.</source>
            <target state="new">Multiple operations against a single entity are not permitted within a change set.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Note that a query operation is not permitted within a batch that contains insert, update, or delete operations; it must be submitted singly in the batch.</source>
            <target state="new">Note that a query operation is not permitted within a batch that contains insert, update, or delete operations; it must be submitted singly in the batch.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Operations within a change set are processed atomically; that is, all operations in the change set either succeed or fail.</source>
            <target state="new">Operations within a change set are processed atomically; that is, all operations in the change set either succeed or fail.</target>
          </trans-unit>
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Operations are processed in the order they are specified in the change set.</source>
            <target state="new">Operations are processed in the order they are specified in the change set.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>The Table service does not support linking operations in a change set.</source>
            <target state="new">The Table service does not support linking operations in a change set.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>The Table service supports a maximum of 100 operations in a change set.</source>
            <target state="new">The Table service supports a maximum of 100 operations in a change set.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Entity Group Transactions via REST</source>
            <target state="new">Entity Group Transactions via REST</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>The following sections describe how to construct a batch request and how to interpret the batch response, and show samples of each.</source>
            <target state="new">The following sections describe how to construct a batch request and how to interpret the batch response, and show samples of each.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Batch Request Syntax</source>
            <target state="new">Batch Request Syntax</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>To perform a batch request via REST, specify the <ph id="1">&lt;codeInline&gt;$batch &lt;/codeInline&gt;</ph>option on the request URI.</source>
            <target state="new">To perform a batch request via REST, specify the <ph id="1">&lt;codeInline&gt;$batch &lt;/codeInline&gt;</ph>option on the request URI.</target>
          </trans-unit>
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Note that the request URI does not include the table name.</source>
            <target state="new">Note that the request URI does not include the table name.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>A batch request is sent to the server with a single POST directive.</source>
            <target state="new">A batch request is sent to the server with a single POST directive.</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>This request must include the <ph id="1">&lt;parameterReference&gt;x-ms-version&lt;/parameterReference&gt;</ph> header; the header's value must be set to <ph id="2">&lt;codeInline&gt;2009-04-14&lt;/codeInline&gt;</ph> or newer.</source>
            <target state="new">This request must include the <ph id="1">&lt;parameterReference&gt;x-ms-version&lt;/parameterReference&gt;</ph> header; the header's value must be set to <ph id="2">&lt;codeInline&gt;2009-04-14&lt;/codeInline&gt;</ph> or newer.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The XML payload is a multi-part MIME message containing the batch and the change set.</source>
            <target state="new">The XML payload is a multi-part MIME message containing the batch and the change set.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>The payload includes two MIME boundaries:</source>
            <target state="new">The payload includes two MIME boundaries:</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>A batch boundary encompasses the change set.</source>
            <target state="new">A batch boundary encompasses the change set.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>A change set boundary separates individual insert, update, and delete operations in the batch.</source>
            <target state="new">A change set boundary separates individual insert, update, and delete operations in the batch.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>An individual request within the change set is identical to a request made when that operation is being called by itself.</source>
            <target state="new">An individual request within the change set is identical to a request made when that operation is being called by itself.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>To specify the <ph id="1">&lt;parameterReference&gt;If-Match&lt;/parameterReference&gt;</ph> header on an update, merge, or delete operation, include the header in the set of request headers for the appropriate operation in the change set.</source>
            <target state="new">To specify the <ph id="1">&lt;parameterReference&gt;If-Match&lt;/parameterReference&gt;</ph> header on an update, merge, or delete operation, include the header in the set of request headers for the appropriate operation in the change set.</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>To specify the payload format (JSON or ATOM) for each operation in the change set, include the appropriate <ph id="1">&lt;parameterReference&gt;Content-Type&lt;/parameterReference&gt;</ph>, <ph id="2">&lt;parameterReference&gt;Accept&lt;/parameterReference&gt;</ph>, <ph id="3">&lt;parameterReference&gt;Version&lt;/parameterReference&gt;</ph> and <ph id="4">&lt;parameterReference&gt;DataServiceVersion&lt;/parameterReference&gt;</ph> headers, as explained in details in <ph id="5">&lt;link xlink:href="9f1dce4a-d528-40ec-a5a4-fd93f9ee4c5e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Payload Format for Table Service Operations&lt;/link&gt;</ph>.</source>
            <target state="new">To specify the payload format (JSON or ATOM) for each operation in the change set, include the appropriate <ph id="1">&lt;parameterReference&gt;Content-Type&lt;/parameterReference&gt;</ph>, <ph id="2">&lt;parameterReference&gt;Accept&lt;/parameterReference&gt;</ph>, <ph id="3">&lt;parameterReference&gt;Version&lt;/parameterReference&gt;</ph> and <ph id="4">&lt;parameterReference&gt;DataServiceVersion&lt;/parameterReference&gt;</ph> headers, as explained in details in <ph id="5">&lt;link xlink:href="9f1dce4a-d528-40ec-a5a4-fd93f9ee4c5e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Payload Format for Table Service Operations&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>To suppress the response content echo for the <ph id="1">&lt;link xlink:href="9ca046aa-e9b4-4eaf-a7c0-d6ccdbaf48b9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Insert Entity (REST API)&lt;/link&gt;</ph>, specify the <ph id="2">&lt;parameterReference&gt;Prefer&lt;/parameterReference&gt;</ph> header with the <ph id="3">&lt;codeInline&gt;return-no-content&lt;/codeInline&gt;</ph> value for each insert operation in the change set.</source>
            <target state="new">To suppress the response content echo for the <ph id="1">&lt;link xlink:href="9ca046aa-e9b4-4eaf-a7c0-d6ccdbaf48b9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Insert Entity (REST API)&lt;/link&gt;</ph>, specify the <ph id="2">&lt;parameterReference&gt;Prefer&lt;/parameterReference&gt;</ph> header with the <ph id="3">&lt;codeInline&gt;return-no-content&lt;/codeInline&gt;</ph> value for each insert operation in the change set.</target>
          </trans-unit>
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>For more information about the <ph id="1">&lt;parameterReference&gt;Prefer&lt;/parameterReference&gt;</ph> header, see <ph id="2">&lt;link xlink:href="db7c3e5d-09a0-46d8-a2b7-00a0c4e75f0c" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Summary of Table Service Functionality&lt;/link&gt;</ph>.</source>
            <target state="new">For more information about the <ph id="1">&lt;parameterReference&gt;Prefer&lt;/parameterReference&gt;</ph> header, see <ph id="2">&lt;link xlink:href="db7c3e5d-09a0-46d8-a2b7-00a0c4e75f0c" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Summary of Table Service Functionality&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Sample Request for Insert, Update, and Delete Operations</source>
            <target state="new">Sample Request for Insert, Update, and Delete Operations</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>The following examples show batch requests containing two <ph id="1">&lt;link xlink:href="9ca046aa-e9b4-4eaf-a7c0-d6ccdbaf48b9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Insert Entity&lt;/link&gt;</ph> operations and a <ph id="2">&lt;link xlink:href="55fdf460-c80e-43af-bf1d-fbf5a4ad2291" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Merge Entity&lt;/link&gt;</ph> operation.</source>
            <target state="new">The following examples show batch requests containing two <ph id="1">&lt;link xlink:href="9ca046aa-e9b4-4eaf-a7c0-d6ccdbaf48b9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Insert Entity&lt;/link&gt;</ph> operations and a <ph id="2">&lt;link xlink:href="55fdf460-c80e-43af-bf1d-fbf5a4ad2291" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Merge Entity&lt;/link&gt;</ph> operation.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>In these examples, since we are not interested in the echo payload in the response for the insert operations, we include the <ph id="1">&lt;parameterReference&gt;Prefer:&lt;/parameterReference&gt;</ph> <ph id="2">&lt;codeInline&gt;return-no-content&lt;/codeInline&gt;</ph> header.</source>
            <target state="new">In these examples, since we are not interested in the echo payload in the response for the insert operations, we include the <ph id="1">&lt;parameterReference&gt;Prefer:&lt;/parameterReference&gt;</ph> <ph id="2">&lt;codeInline&gt;return-no-content&lt;/codeInline&gt;</ph> header.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Batch Request with Atom Payload</source>
            <target state="new">Batch Request with Atom Payload</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Batch Request with JSON Payload</source>
            <target state="new">Batch Request with JSON Payload</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Sample Request for Queries</source>
            <target state="new">Sample Request for Queries</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>The following examples show a batch request for a query.</source>
            <target state="new">The following examples show a batch request for a query.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>Note that only a single query may be included in the change set.</source>
            <target state="new">Note that only a single query may be included in the change set.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>Batch Query with ATOM Format</source>
            <target state="new">Batch Query with ATOM Format</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Batch Query with JSON Format</source>
            <target state="new">Batch Query with JSON Format</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>Batch Response Syntax</source>
            <target state="new">Batch Response Syntax</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>The response returns an overall status code for the batch request, and individual status codes and result fragments for each operation in the change set.</source>
            <target state="new">The response returns an overall status code for the batch request, and individual status codes and result fragments for each operation in the change set.</target>
          </trans-unit>
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>The response is a multi-part MIME message that includes a batch boundary and a change set boundary.</source>
            <target state="new">The response is a multi-part MIME message that includes a batch boundary and a change set boundary.</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>The Table service returns a status code for the entire batch request, and one or more status codes for the operations in the change set, depending on whether they succeeded or failed.</source>
            <target state="new">The Table service returns a status code for the entire batch request, and one or more status codes for the operations in the change set, depending on whether they succeeded or failed.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>Assuming that the batch request has been properly authenticated and has been successfully received by the Table service, the batch request returns status code 202 (Accepted), even if one of the operations in the change set fails.</source>
            <target state="new">Assuming that the batch request has been properly authenticated and has been successfully received by the Table service, the batch request returns status code 202 (Accepted), even if one of the operations in the change set fails.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>If the batch request itself fails, it fails before any operation in the change set is executed.</source>
            <target state="new">If the batch request itself fails, it fails before any operation in the change set is executed.</target>
          </trans-unit>
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>For example, the batch request may fail due to an authentication error, in which case the status code will indicate that failure.</source>
            <target state="new">For example, the batch request may fail due to an authentication error, in which case the status code will indicate that failure.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>The operations in a change set are processed atomically; that is, either all operations in the batch succeed, or the entire batch fails.</source>
            <target state="new">The operations in a change set are processed atomically; that is, either all operations in the batch succeed, or the entire batch fails.</target>
          </trans-unit>
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>The Table service continues processing operations in the change set until one fails.</source>
            <target state="new">The Table service continues processing operations in the change set until one fails.</target>
          </trans-unit>
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>If an operation fails, all preceding operations in the batch are rolled back.</source>
            <target state="new">If an operation fails, all preceding operations in the batch are rolled back.</target>
          </trans-unit>
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>Additionally, entity group transactions execute with snapshot isolation.</source>
            <target state="new">Additionally, entity group transactions execute with snapshot isolation.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>The status code for an individual operation within a change set appears within the change set response.</source>
            <target state="new">The status code for an individual operation within a change set appears within the change set response.</target>
          </trans-unit>
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>When an individual operation fails, the response for the change set indicates status code 400 (<ph id="1">&lt;languageKeyword&gt;Bad Request&lt;/languageKeyword&gt;</ph>).</source>
            <target state="new">When an individual operation fails, the response for the change set indicates status code 400 (<ph id="1">&lt;languageKeyword&gt;Bad Request&lt;/languageKeyword&gt;</ph>).</target>
          </trans-unit>
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Additional error information within the response indicates which operation failed by returning the index of that operation.</source>
            <target state="new">Additional error information within the response indicates which operation failed by returning the index of that operation.</target>
          </trans-unit>
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>The index is the sequence number of the command in the payload.</source>
            <target state="new">The index is the sequence number of the command in the payload.</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>For an example, see the sample error response below.</source>
            <target state="new">For an example, see the sample error response below.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>Sample Response for Create, Update, and Delete Operations</source>
            <target state="new">Sample Response for Create, Update, and Delete Operations</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>The following examples show the responses for the batch operations sent in the sample requests shown above.</source>
            <target state="new">The following examples show the responses for the batch operations sent in the sample requests shown above.</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>Response for Request in Atom Format</source>
            <target state="new">Response for Request in Atom Format</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>Response for Request in JSON Format</source>
            <target state="new">Response for Request in JSON Format</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>Sample Response for Queries</source>
            <target state="new">Sample Response for Queries</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>The following examples show the responses for the queries sent in the sample requests shown above.</source>
            <target state="new">The following examples show the responses for the queries sent in the sample requests shown above.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>Response for Batch Query with ATOM Format</source>
            <target state="new">Response for Batch Query with ATOM Format</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>Response for Batch Query with JSON Format</source>
            <target state="new">Response for Batch Query with JSON Format</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>Sample Error Response</source>
            <target state="new">Sample Error Response</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>The following examples show responses from batch requests containing an operation that failed.</source>
            <target state="new">The following examples show responses from batch requests containing an operation that failed.</target>
          </trans-unit>
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>Note that the batch response returns status code 202 (Accepted), but the individual operation that failed returns status code 400 (Bad Request).</source>
            <target state="new">Note that the batch response returns status code 202 (Accepted), but the individual operation that failed returns status code 400 (Bad Request).</target>
          </trans-unit>
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>The additional error information is included in the response body for the failed operation.</source>
            <target state="new">The additional error information is included in the response body for the failed operation.</target>
          </trans-unit>
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;languageKeyword&gt;code&lt;/languageKeyword&gt;</ph> element specifies the storage service error code, whereas the <ph id="2">&lt;languageKeyword&gt;message&lt;/languageKeyword&gt;</ph> element begins with the index of the failed operation, followed by the error message string.</source>
            <target state="new">The <ph id="1">&lt;languageKeyword&gt;code&lt;/languageKeyword&gt;</ph> element specifies the storage service error code, whereas the <ph id="2">&lt;languageKeyword&gt;message&lt;/languageKeyword&gt;</ph> element begins with the index of the failed operation, followed by the error message string.</target>
          </trans-unit>
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>To determine which operation failed, parse the index value from the message.</source>
            <target state="new">To determine which operation failed, parse the index value from the message.</target>
          </trans-unit>
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>Operations are indexed beginning at zero.</source>
            <target state="new">Operations are indexed beginning at zero.</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>Error Response for Request in Atom Format</source>
            <target state="new">Error Response for Request in Atom Format</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>In the Atom example, note that the operation that failed was the fourth operation in the change set.</source>
            <target state="new">In the Atom example, note that the operation that failed was the fourth operation in the change set.</target>
          </trans-unit>
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>Within the <ph id="1">&lt;languageKeyword&gt;message&lt;/languageKeyword&gt;</ph> element, the message begins with the numeral <ph id="2">&lt;codeInline&gt;3&lt;/codeInline&gt;</ph>, followed by the extended error information.</source>
            <target state="new">Within the <ph id="1">&lt;languageKeyword&gt;message&lt;/languageKeyword&gt;</ph> element, the message begins with the numeral <ph id="2">&lt;codeInline&gt;3&lt;/codeInline&gt;</ph>, followed by the extended error information.</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>Here is the complete response:</source>
            <target state="new">Here is the complete response:</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>Error Response for Request in JSON Format</source>
            <target state="new">Error Response for Request in JSON Format</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>In the JSON example, note that the operation that failed was the first operation in the change set.</source>
            <target state="new">In the JSON example, note that the operation that failed was the first operation in the change set.</target>
          </trans-unit>
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>Within the <ph id="1">&lt;languageKeyword&gt;message&lt;/languageKeyword&gt;</ph> name/value pair, the message begins with the numeral <ph id="2">&lt;codeInline&gt;0&lt;/codeInline&gt;</ph>, followed by the extended error information.</source>
            <target state="new">Within the <ph id="1">&lt;languageKeyword&gt;message&lt;/languageKeyword&gt;</ph> name/value pair, the message begins with the numeral <ph id="2">&lt;codeInline&gt;0&lt;/codeInline&gt;</ph>, followed by the extended error information.</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>OData Specification</source>
            <target state="new">OData Specification</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>