<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="fr-FR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAAVzEsKwkAMANCr5AAJzK/JjAcQ1+IFkukECtpCrdDjq/vHc8/DSuo0RilUogeyUI16iMqteVRtCFVSZu4zyShGRfJf9UBz09RYVDobgkQeHiYmnf13WWSqk1VK3UTEei1TRYgIvtP1jnA+F/dxHpd92w6EhJAF4fZ56frYdX0/9Vi29QtzkieSogAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Search Documents</source>
            <target state="new">Search Documents</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Search Documents (Azure Search Service REST API)</source>
            <target state="new">Search Documents (Azure Search Service REST API)</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>A <ph id="1">&lt;languageKeyword&gt;Search Documents&lt;/languageKeyword&gt;</ph> operation is issued as a GET request and specifies query parameters that give the criteria for selecting matching documents.</source>
            <target state="new">A <ph id="1">&lt;languageKeyword&gt;Search Documents&lt;/languageKeyword&gt;</ph> operation is issued as a GET request and specifies query parameters that give the criteria for selecting matching documents.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Request</source>
            <target state="new">Request</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>HTTPS is required for service requests.</source>
            <target state="new">HTTPS is required for service requests.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;languageKeyword&gt;Search&lt;/languageKeyword&gt;</ph> request can be constructed as follows.</source>
            <target state="new">The <ph id="1">&lt;languageKeyword&gt;Search&lt;/languageKeyword&gt;</ph> request can be constructed as follows.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The request URI specifies which index to query, for all documents that match the query parameters.</source>
            <target state="new">The request URI specifies which index to query, for all documents that match the query parameters.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>As a best practice, remember to <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>URL-encode<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://msdn.microsoft.com/library/system.uri.escapedatastring.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> specific query parameters when calling the REST API directly.</source>
            <target state="new">As a best practice, remember to <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>URL-encode<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://msdn.microsoft.com/library/system.uri.escapedatastring.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> specific query parameters when calling the REST API directly.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>For <ph id="1">&lt;languageKeyword&gt;Search Document&lt;/languageKeyword&gt;</ph> operations, this includes:</source>
            <target state="new">For <ph id="1">&lt;languageKeyword&gt;Search Document&lt;/languageKeyword&gt;</ph> operations, this includes:</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>URL encoding is only recommended on the above query parameters.</source>
            <target state="new">URL encoding is only recommended on the above query parameters.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>If you inadvertently URL-encode the entire query string (everything after the <ph id="1">&lt;languageKeyword&gt;?&lt;/languageKeyword&gt;</ph>), requests will break.</source>
            <target state="new">If you inadvertently URL-encode the entire query string (everything after the <ph id="1">&lt;languageKeyword&gt;?&lt;/languageKeyword&gt;</ph>), requests will break.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Also, URL encoding is only necessary when calling the REST API directly.</source>
            <target state="new">Also, URL encoding is only necessary when calling the REST API directly.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Using the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Azure Search .NET client library<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://msdn.microsoft.com/en-us/library/azure/dn951165.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> handles URL encoding for you.</source>
            <target state="new">Using the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Azure Search .NET client library<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://msdn.microsoft.com/en-us/library/azure/dn951165.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> handles URL encoding for you.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Query Parameters</source>
            <target state="new">Query Parameters</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>This section documents the query parameters used in a search query.</source>
            <target state="new">This section documents the query parameters used in a search query.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Parameter</source>
            <target state="new">Parameter</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>The text to search for.</source>
            <target state="new">The text to search for.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>All searchable fields are searched by default unless <ph id="1">&lt;codeInline&gt;searchFields&lt;/codeInline&gt;</ph> is specified.</source>
            <target state="new">All searchable fields are searched by default unless <ph id="1">&lt;codeInline&gt;searchFields&lt;/codeInline&gt;</ph> is specified.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>When searching searchable fields, the search text itself is tokenized, so multiple terms can be separated by white space (e.g.: search=hello world).</source>
            <target state="new">When searching searchable fields, the search text itself is tokenized, so multiple terms can be separated by white space (e.g.: search=hello world).</target>
          </trans-unit>
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>To match any term, use * (this can be useful for boolean filter queries).</source>
            <target state="new">To match any term, use * (this can be useful for boolean filter queries).</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Omitting this parameter has the same effect as setting it to *.</source>
            <target state="new">Omitting this parameter has the same effect as setting it to *.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>See <ph id="1">&lt;link xlink:href="1d656013-e580-4762-9ea1-8aa5d0e96ac2" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Simple query syntax in Azure Search&lt;/link&gt;</ph> for specifics on the search syntax.</source>
            <target state="new">See <ph id="1">&lt;link xlink:href="1d656013-e580-4762-9ea1-8aa5d0e96ac2" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Simple query syntax in Azure Search&lt;/link&gt;</ph> for specifics on the search syntax.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>The results can sometimes be surprising when querying over searchable fields.</source>
            <target state="new">The results can sometimes be surprising when querying over searchable fields.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>The tokenizer includes logic to handle cases common to English text like apostrophes, commas in numbers, and so forth.</source>
            <target state="new">The tokenizer includes logic to handle cases common to English text like apostrophes, commas in numbers, and so forth.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>For example, <ph id="1">&lt;codeInline&gt;search=123,456&lt;/codeInline&gt;</ph> will match a single term 123,456 rather than the individual terms 123 and 456, since commas are used as thousand-separators for large numbers in English.</source>
            <target state="new">For example, <ph id="1">&lt;codeInline&gt;search=123,456&lt;/codeInline&gt;</ph> will match a single term 123,456 rather than the individual terms 123 and 456, since commas are used as thousand-separators for large numbers in English.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>For this reason, we recommend using white space rather than punctuation to separate terms in the <ph id="1">&lt;codeInline&gt;search&lt;/codeInline&gt;</ph> parameter.</source>
            <target state="new">For this reason, we recommend using white space rather than punctuation to separate terms in the <ph id="1">&lt;codeInline&gt;search&lt;/codeInline&gt;</ph> parameter.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Defaults to <ph id="1">&lt;codeInline&gt;any&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Defaults to <ph id="1">&lt;codeInline&gt;any&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Specifies whether any or all of the search terms must be matched in order to count the document as a match.</source>
            <target state="new">Specifies whether any or all of the search terms must be matched in order to count the document as a match.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The list of comma-separated field names to search for the specified text.</source>
            <target state="new">The list of comma-separated field names to search for the specified text.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>Target fields must be marked as <ph id="1">&lt;codeInline&gt;searchable&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Target fields must be marked as <ph id="1">&lt;codeInline&gt;searchable&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>The number of search results to skip.</source>
            <target state="new">The number of search results to skip.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>This value cannot be greater than 100,000.</source>
            <target state="new">This value cannot be greater than 100,000.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>If you need to scan documents in sequence, but cannot use <ph id="1">&lt;codeInline&gt;$skip&lt;/codeInline&gt;</ph> due to this limitation, consider using <ph id="2">&lt;codeInline&gt;$orderby&lt;/codeInline&gt;</ph> on a totally-ordered key and <ph id="3">&lt;codeInline&gt;$filter&lt;/codeInline&gt;</ph> with a range query instead.</source>
            <target state="new">If you need to scan documents in sequence, but cannot use <ph id="1">&lt;codeInline&gt;$skip&lt;/codeInline&gt;</ph> due to this limitation, consider using <ph id="2">&lt;codeInline&gt;$orderby&lt;/codeInline&gt;</ph> on a totally-ordered key and <ph id="3">&lt;codeInline&gt;$filter&lt;/codeInline&gt;</ph> with a range query instead.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>The number of search results to retrieve.</source>
            <target state="new">The number of search results to retrieve.</target>
          </trans-unit>
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>This defaults to 50.</source>
            <target state="new">This defaults to 50.</target>
          </trans-unit>
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>If you specify a value greater than 1000 and there are more than 1000 results, only the first 1000 results will be returned, along with a link to the next page of results (see @odata.nextLink in the example below).</source>
            <target state="new">If you specify a value greater than 1000 and there are more than 1000 results, only the first 1000 results will be returned, along with a link to the next page of results (see @odata.nextLink in the example below).</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Defaults to <ph id="1">&lt;codeInline&gt;false&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Defaults to <ph id="1">&lt;codeInline&gt;false&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Specifies whether to fetch the total count of results.</source>
            <target state="new">Specifies whether to fetch the total count of results.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Setting this value to <ph id="1">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> may have a performance impact.</source>
            <target state="new">Setting this value to <ph id="1">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> may have a performance impact.</target>
          </trans-unit>
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Note that the count returned is an approximation.</source>
            <target state="new">Note that the count returned is an approximation.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>A list of comma-separated expressions to sort the results by.</source>
            <target state="new">A list of comma-separated expressions to sort the results by.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>Each expression can be either a field name or a call to the <ph id="1">&lt;codeInline&gt;geo.distance()&lt;/codeInline&gt;</ph> function.</source>
            <target state="new">Each expression can be either a field name or a call to the <ph id="1">&lt;codeInline&gt;geo.distance()&lt;/codeInline&gt;</ph> function.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>Each expression can be followed by <ph id="1">&lt;codeInline&gt;asc&lt;/codeInline&gt;</ph> to indicate ascending, and <ph id="2">&lt;codeInline&gt;desc&lt;/codeInline&gt;</ph> to indicate descending.</source>
            <target state="new">Each expression can be followed by <ph id="1">&lt;codeInline&gt;asc&lt;/codeInline&gt;</ph> to indicate ascending, and <ph id="2">&lt;codeInline&gt;desc&lt;/codeInline&gt;</ph> to indicate descending.</target>
          </trans-unit>
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>The default is ascending order.</source>
            <target state="new">The default is ascending order.</target>
          </trans-unit>
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>Ties will be broken by the match scores of documents.</source>
            <target state="new">Ties will be broken by the match scores of documents.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>If no <ph id="1">&lt;codeInline&gt;$orderby&lt;/codeInline&gt;</ph> is specified, the default sort order is descending by document match score.</source>
            <target state="new">If no <ph id="1">&lt;codeInline&gt;$orderby&lt;/codeInline&gt;</ph> is specified, the default sort order is descending by document match score.</target>
          </trans-unit>
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>There is a limit of 32 clauses for <ph id="1">&lt;codeInline&gt;$orderby&lt;/codeInline&gt;</ph>.</source>
            <target state="new">There is a limit of 32 clauses for <ph id="1">&lt;codeInline&gt;$orderby&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>A list of comma-separated fields to retrieve.</source>
            <target state="new">A list of comma-separated fields to retrieve.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>If unspecified, all fields marked as retrievable in the schema are included.</source>
            <target state="new">If unspecified, all fields marked as retrievable in the schema are included.</target>
          </trans-unit>
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>You can also explicitly request all fields by setting this parameter to <ph id="1">&lt;codeInline&gt;*&lt;/codeInline&gt;</ph>.</source>
            <target state="new">You can also explicitly request all fields by setting this parameter to <ph id="1">&lt;codeInline&gt;*&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>Zero or more fields to facet by.</source>
            <target state="new">Zero or more fields to facet by.</target>
          </trans-unit>
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>Optionally, the string may contain parameters to customize the faceting, expressed as comma-separated <ph id="1">&lt;codeInline&gt;name:value&lt;/codeInline&gt;</ph> pairs.</source>
            <target state="new">Optionally, the string may contain parameters to customize the faceting, expressed as comma-separated <ph id="1">&lt;codeInline&gt;name:value&lt;/codeInline&gt;</ph> pairs.</target>
          </trans-unit>
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>Valid parameters are:</source>
            <target state="new">Valid parameters are:</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;count&lt;/codeInline&gt;</ph> (max # of facet terms; default is 10).</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;count&lt;/codeInline&gt;</ph> (max # of facet terms; default is 10).</target>
          </trans-unit>
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>There is no upper limit on the number of terms, but higher values incur a corresponding performance penalty, especially if the faceted field contains a large number of unique terms.</source>
            <target state="new">There is no upper limit on the number of terms, but higher values incur a corresponding performance penalty, especially if the faceted field contains a large number of unique terms.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>For example, <ph id="1">&lt;codeInline&gt;facet=category,count:5&lt;/codeInline&gt;</ph> gets the top five categories in facet results.</source>
            <target state="new">For example, <ph id="1">&lt;codeInline&gt;facet=category,count:5&lt;/codeInline&gt;</ph> gets the top five categories in facet results.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Note that if the <ph id="1">&lt;codeInline&gt;count&lt;/codeInline&gt;</ph> parameter is less than the number of unique terms, the results may not be accurate.</source>
            <target state="new">Note that if the <ph id="1">&lt;codeInline&gt;count&lt;/codeInline&gt;</ph> parameter is less than the number of unique terms, the results may not be accurate.</target>
          </trans-unit>
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>This is due to the way faceting queries are distributed across shards.</source>
            <target state="new">This is due to the way faceting queries are distributed across shards.</target>
          </trans-unit>
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>Increasing <ph id="1">&lt;codeInline&gt;count&lt;/codeInline&gt;</ph> generally increases the accuracy of term counts, but at a performance cost.</source>
            <target state="new">Increasing <ph id="1">&lt;codeInline&gt;count&lt;/codeInline&gt;</ph> generally increases the accuracy of term counts, but at a performance cost.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;sort&lt;/codeInline&gt;</ph> (one of <ph id="2">&lt;codeInline&gt;count&lt;/codeInline&gt;</ph> to sort descending by count, <ph id="3">&lt;codeInline&gt;-count&lt;/codeInline&gt;</ph> to sort ascending by count, <ph id="4">&lt;codeInline&gt;value&lt;/codeInline&gt;</ph> to sort ascending by value, or <ph id="5">&lt;codeInline&gt;-value&lt;/codeInline&gt;</ph> to sort descending by value)</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;sort&lt;/codeInline&gt;</ph> (one of <ph id="2">&lt;codeInline&gt;count&lt;/codeInline&gt;</ph> to sort descending by count, <ph id="3">&lt;codeInline&gt;-count&lt;/codeInline&gt;</ph> to sort ascending by count, <ph id="4">&lt;codeInline&gt;value&lt;/codeInline&gt;</ph> to sort ascending by value, or <ph id="5">&lt;codeInline&gt;-value&lt;/codeInline&gt;</ph> to sort descending by value)</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>For example, <ph id="1">&lt;codeInline&gt;facet=category,count:3,sort:count&lt;/codeInline&gt;</ph> gets the top three categories in facet results in descending order by the number of documents with each city name.</source>
            <target state="new">For example, <ph id="1">&lt;codeInline&gt;facet=category,count:3,sort:count&lt;/codeInline&gt;</ph> gets the top three categories in facet results in descending order by the number of documents with each city name.</target>
          </trans-unit>
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>If the top three categories are Budget, Motel, and Luxury, and Budget has 5 hits, Motel has 6, and Luxury has 4, then the buckets will be in the order Motel, Budget, Luxury.</source>
            <target state="new">If the top three categories are Budget, Motel, and Luxury, and Budget has 5 hits, Motel has 6, and Luxury has 4, then the buckets will be in the order Motel, Budget, Luxury.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;facet=rating,sort:-value&lt;/codeInline&gt;</ph> produces buckets for all possible ratings, in descending order by value.</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;facet=rating,sort:-value&lt;/codeInline&gt;</ph> produces buckets for all possible ratings, in descending order by value.</target>
          </trans-unit>
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>For example, if the ratings are from 1 to 5, the buckets will be ordered 5, 4, 3, 2, 1, irrespective of how many documents match each rating.</source>
            <target state="new">For example, if the ratings are from 1 to 5, the buckets will be ordered 5, 4, 3, 2, 1, irrespective of how many documents match each rating.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;values&lt;/codeInline&gt;</ph> (pipe-delimited numeric or <ph id="2">&lt;codeInline&gt;Edm.DateTimeOffset&lt;/codeInline&gt;</ph> values specifying a dynamic set of facet entry values).</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;values&lt;/codeInline&gt;</ph> (pipe-delimited numeric or <ph id="2">&lt;codeInline&gt;Edm.DateTimeOffset&lt;/codeInline&gt;</ph> values specifying a dynamic set of facet entry values).</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>For example, <ph id="1">&lt;codeInline&gt;facet=baseRate,values:10|20&lt;/codeInline&gt;</ph> produces three buckets: one for base rate 0 up to but not including 10, one for 10 up to but not including 20, and one for 20 and higher.</source>
            <target state="new">For example, <ph id="1">&lt;codeInline&gt;facet=baseRate,values:10|20&lt;/codeInline&gt;</ph> produces three buckets: one for base rate 0 up to but not including 10, one for 10 up to but not including 20, and one for 20 and higher.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;facet=lastRenovationDate,values:2010-02-01T00:00:00Z&lt;/codeInline&gt;</ph> produces two buckets: one for hotels renovated before February 2010, and one for hotels renovated February 1st, 2010 or later.</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;facet=lastRenovationDate,values:2010-02-01T00:00:00Z&lt;/codeInline&gt;</ph> produces two buckets: one for hotels renovated before February 2010, and one for hotels renovated February 1st, 2010 or later.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;interval&lt;/codeInline&gt;</ph> (integer interval greater than 0 for numbers, or <ph id="2">&lt;codeInline&gt;minute, hour, day, week, month, quarter, year&lt;/codeInline&gt;</ph> for date time values).</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;interval&lt;/codeInline&gt;</ph> (integer interval greater than 0 for numbers, or <ph id="2">&lt;codeInline&gt;minute, hour, day, week, month, quarter, year&lt;/codeInline&gt;</ph> for date time values).</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>For example, <ph id="1">&lt;codeInline&gt;facet=baseRate,interval:100&lt;/codeInline&gt;</ph> produces buckets based on base rate ranges of size 100.</source>
            <target state="new">For example, <ph id="1">&lt;codeInline&gt;facet=baseRate,interval:100&lt;/codeInline&gt;</ph> produces buckets based on base rate ranges of size 100.</target>
          </trans-unit>
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>If base rates are all between $60 and $600, there will be buckets for 0-100, 100-200, 200-300, 300-400, 400-500, and 500-600.</source>
            <target state="new">If base rates are all between $60 and $600, there will be buckets for 0-100, 100-200, 200-300, 300-400, 400-500, and 500-600.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;facet=lastRenovationDate,interval:year&lt;/codeInline&gt;</ph> produces one bucket for each year when hotels were renovated.</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;facet=lastRenovationDate,interval:year&lt;/codeInline&gt;</ph> produces one bucket for each year when hotels were renovated.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;count&lt;/codeInline&gt;</ph> and <ph id="2">&lt;codeInline&gt;sort&lt;/codeInline&gt;</ph> can be combined in the same facet specification, but they cannot be combined with <ph id="3">&lt;codeInline&gt;interval&lt;/codeInline&gt;</ph> or <ph id="4">&lt;codeInline&gt;values&lt;/codeInline&gt;</ph>, and <ph id="5">&lt;codeInline&gt;interval&lt;/codeInline&gt;</ph> and <ph id="6">&lt;codeInline&gt;values&lt;/codeInline&gt;</ph> cannot be combined together.</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;count&lt;/codeInline&gt;</ph> and <ph id="2">&lt;codeInline&gt;sort&lt;/codeInline&gt;</ph> can be combined in the same facet specification, but they cannot be combined with <ph id="3">&lt;codeInline&gt;interval&lt;/codeInline&gt;</ph> or <ph id="4">&lt;codeInline&gt;values&lt;/codeInline&gt;</ph>, and <ph id="5">&lt;codeInline&gt;interval&lt;/codeInline&gt;</ph> and <ph id="6">&lt;codeInline&gt;values&lt;/codeInline&gt;</ph> cannot be combined together.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>A structured search expression in standard OData syntax.</source>
            <target state="new">A structured search expression in standard OData syntax.</target>
          </trans-unit>
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>See <ph id="1">&lt;link xlink:href="20217801-f1f7-49e2-badf-0ac356bf8975" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;OData Expression Syntax for Azure Search&lt;/link&gt;</ph> for details on the subset of the OData expression grammar that Azure Search supports.</source>
            <target state="new">See <ph id="1">&lt;link xlink:href="20217801-f1f7-49e2-badf-0ac356bf8975" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;OData Expression Syntax for Azure Search&lt;/link&gt;</ph> for details on the subset of the OData expression grammar that Azure Search supports.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>A set of comma-separated field names used for hit highlights.</source>
            <target state="new">A set of comma-separated field names used for hit highlights.</target>
          </trans-unit>
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>Only <ph id="1">&lt;codeInline&gt;searchable&lt;/codeInline&gt;</ph> fields can be used for hit highlighting.</source>
            <target state="new">Only <ph id="1">&lt;codeInline&gt;searchable&lt;/codeInline&gt;</ph> fields can be used for hit highlighting.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>Defaults to <ph id="1">&lt;codeInline&gt;%%amp;lt;/em%%amp;gt;&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Defaults to <ph id="1">&lt;codeInline&gt;%%amp;lt;/em%%amp;gt;&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>A string tag that appends to hit highlights.</source>
            <target state="new">A string tag that appends to hit highlights.</target>
          </trans-unit>
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>Must be set with <ph id="1">&lt;codeInline&gt;highlightPostTag&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Must be set with <ph id="1">&lt;codeInline&gt;highlightPostTag&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>Reserved characters in URL must be percent-encoded (for example, %23 instead of #).</source>
            <target state="new">Reserved characters in URL must be percent-encoded (for example, %23 instead of #).</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>Defaults to <ph id="1">&lt;codeInline&gt;%%amp;lt;/em%%amp;gt;&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Defaults to <ph id="1">&lt;codeInline&gt;%%amp;lt;/em%%amp;gt;&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>A string tag that appends to hit highlights.</source>
            <target state="new">A string tag that appends to hit highlights.</target>
          </trans-unit>
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>Must be set with <ph id="1">&lt;codeInline&gt;highlightPreTag&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Must be set with <ph id="1">&lt;codeInline&gt;highlightPreTag&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>Reserved characters in URL must be percent-encoded (for example, %23 instead of #).</source>
            <target state="new">Reserved characters in URL must be percent-encoded (for example, %23 instead of #).</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.</source>
            <target state="new">The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>Zero or more strings.</source>
            <target state="new">Zero or more strings.</target>
          </trans-unit>
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>Indicates the value for each parameter defined in a scoring function (for example, <ph id="1">&lt;codeInline&gt;referencePointParameter&lt;/codeInline&gt;</ph>) using the format name:value.</source>
            <target state="new">Indicates the value for each parameter defined in a scoring function (for example, <ph id="1">&lt;codeInline&gt;referencePointParameter&lt;/codeInline&gt;</ph>) using the format name:value.</target>
          </trans-unit>
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>For example, if the scoring profile defines a function with a parameter called "mylocation" the query string option would be &amp;scoringParameter=mylocation:-122.2,44.8</source>
            <target state="new">For example, if the scoring profile defines a function with a parameter called "mylocation" the query string option would be &amp;scoringParameter=mylocation:-122.2,44.8</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>Defaults to <ph id="1">&lt;codeInline&gt;100&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Defaults to <ph id="1">&lt;codeInline&gt;100&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success.</source>
            <target state="new">A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success.</target>
          </trans-unit>
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>By default, the entire index must be available or the Search operation will return HTTP status code 503.</source>
            <target state="new">By default, the entire index must be available or the Search operation will return HTTP status code 503.</target>
          </trans-unit>
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>If you set <ph id="1">&lt;codeInline&gt;minimumCoverage&lt;/codeInline&gt;</ph> and Search succeeds, it will return HTTP 200 and include a <ph id="2">&lt;codeInline&gt;@search.coverage&lt;/codeInline&gt;</ph> value in the response indicating the percentage of the index that was included in the query.</source>
            <target state="new">If you set <ph id="1">&lt;codeInline&gt;minimumCoverage&lt;/codeInline&gt;</ph> and Search succeeds, it will return HTTP 200 and include a <ph id="2">&lt;codeInline&gt;@search.coverage&lt;/codeInline&gt;</ph> value in the response indicating the percentage of the index that was included in the query.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>Setting this parameter to a value lower than 100 can be useful for ensuring search availability even for services with only one replica.</source>
            <target state="new">Setting this parameter to a value lower than 100 can be useful for ensuring search availability even for services with only one replica.</target>
          </trans-unit>
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>However, not all matching documents are guaranteed to be present in the search results.</source>
            <target state="new">However, not all matching documents are guaranteed to be present in the search results.</target>
          </trans-unit>
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>If search recall is more important to your application than availability, then it's best to leave <ph id="1">&lt;codeInline&gt;minimumCoverage&lt;/codeInline&gt;</ph> at its default value of 100.</source>
            <target state="new">If search recall is more important to your application than availability, then it's best to leave <ph id="1">&lt;codeInline&gt;minimumCoverage&lt;/codeInline&gt;</ph> at its default value of 100.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;api-version&lt;/codeInline&gt;</ph> parameter is required.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;api-version&lt;/codeInline&gt;</ph> parameter is required.</target>
          </trans-unit>
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>The current version is <ph id="1">&lt;codeInline&gt;api-version=2015-02-28&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The current version is <ph id="1">&lt;codeInline&gt;api-version=2015-02-28&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>See <ph id="1">&lt;link xlink:href="62ffee0b-ae3b-46c1-9ddb-a372d21c6f4d" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Versions of the Azure Search Service REST API&lt;/link&gt;</ph> for details and alternative versions.</source>
            <target state="new">See <ph id="1">&lt;link xlink:href="62ffee0b-ae3b-46c1-9ddb-a372d21c6f4d" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Versions of the Azure Search Service REST API&lt;/link&gt;</ph> for details and alternative versions.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>Request Headers</source>
            <target state="new">Request Headers</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>The following table describes the required and optional request headers.</source>
            <target state="new">The following table describes the required and optional request headers.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>Request Header</source>
            <target state="new">Request Header</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>Specifies the content type of the results returned by the service.</source>
            <target state="new">Specifies the content type of the results returned by the service.</target>
          </trans-unit>
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>This value must be set to <ph id="1">&lt;codeInline&gt;application/json&lt;/codeInline&gt;</ph>.</source>
            <target state="new">This value must be set to <ph id="1">&lt;codeInline&gt;application/json&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;api-key&lt;/codeInline&gt;</ph> is used to authenticate the request to your Search service.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;api-key&lt;/codeInline&gt;</ph> is used to authenticate the request to your Search service.</target>
          </trans-unit>
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>It is a string value, unique to your service URL.</source>
            <target state="new">It is a string value, unique to your service URL.</target>
          </trans-unit>
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;languageKeyword&gt;Search&lt;/languageKeyword&gt;</ph> request can specify either an admin key or query key for <ph id="2">&lt;codeInline&gt;api-key&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The <ph id="1">&lt;languageKeyword&gt;Search&lt;/languageKeyword&gt;</ph> request can specify either an admin key or query key for <ph id="2">&lt;codeInline&gt;api-key&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source>You will also need the service name to construct the request URL.</source>
            <target state="new">You will also need the service name to construct the request URL.</target>
          </trans-unit>
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>You can get the service name and <ph id="1">&lt;codeInline&gt;api-key&lt;/codeInline&gt;</ph> from your service dashboard in the Azure Preview Portal.</source>
            <target state="new">You can get the service name and <ph id="1">&lt;codeInline&gt;api-key&lt;/codeInline&gt;</ph> from your service dashboard in the Azure Preview Portal.</target>
          </trans-unit>
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source>See <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Create an Azure Search service in the portal<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/en-us/documentation/articles/search-create-service-portal/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> for page navigation help.</source>
            <target state="new">See <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Create an Azure Search service in the portal<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/en-us/documentation/articles/search-create-service-portal/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> for page navigation help.</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>Request Body</source>
            <target state="new">Request Body</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source>None.</source>
            <target state="new">None.</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>Response</source>
            <target state="new">Response</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source>Status Code: "200 OK" is returned for a successful response.</source>
            <target state="new">Status Code: "200 OK" is returned for a successful response.</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="130" translate="yes" xml:space="preserve">
            <source>Examples</source>
            <target state="new">Examples</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="131" translate="yes" xml:space="preserve">
            <source>You can find additional examples in <ph id="1">&lt;link xlink:href="20217801-f1f7-49e2-badf-0ac356bf8975" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;OData Expression Syntax for Azure Search&lt;/link&gt;</ph>.</source>
            <target state="new">You can find additional examples in <ph id="1">&lt;link xlink:href="20217801-f1f7-49e2-badf-0ac356bf8975" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;OData Expression Syntax for Azure Search&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="132" translate="yes" xml:space="preserve">
            <source>Search the Index sorted descending by date:</source>
            <target state="new">Search the Index sorted descending by date:</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="133" translate="yes" xml:space="preserve">
            <source>In a faceted search, search the index and retrieve facets for categories, ratings, tags, as well as items with baseRate in specific ranges:</source>
            <target state="new">In a faceted search, search the index and retrieve facets for categories, ratings, tags, as well as items with baseRate in specific ranges:</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="134" translate="yes" xml:space="preserve">
            <source>Using a filter, narrow down the previous faceted query result after the user clicks on Rating 3 and category "Motel".</source>
            <target state="new">Using a filter, narrow down the previous faceted query result after the user clicks on Rating 3 and category "Motel".</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="135" translate="yes" xml:space="preserve">
            <source>In a faceted search, set an upper limit on unique terms returned in a query.</source>
            <target state="new">In a faceted search, set an upper limit on unique terms returned in a query.</target>
          </trans-unit>
          <trans-unit id="136" translate="yes" xml:space="preserve">
            <source>The default is 10, but you can increase or decrease this value using the count parameter on the facet attribute.</source>
            <target state="new">The default is 10, but you can increase or decrease this value using the count parameter on the facet attribute.</target>
          </trans-unit>
          <trans-unit id="137" translate="yes" xml:space="preserve">
            <source>This example returns facets for city, limited to 5.</source>
            <target state="new">This example returns facets for city, limited to 5.</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="138" translate="yes" xml:space="preserve">
            <source>Search the Index within specific fields (for example, a language field): </source>
            <target state="new">Search the Index within specific fields (for example, a language field): </target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="139" translate="yes" xml:space="preserve">
            <source>Search the Index across multiple fields.</source>
            <target state="new">Search the Index across multiple fields.</target>
          </trans-unit>
          <trans-unit id="140" translate="yes" xml:space="preserve">
            <source>For example, you can store and query searchable fields in multiple languages, all within the same index.</source>
            <target state="new">For example, you can store and query searchable fields in multiple languages, all within the same index.</target>
          </trans-unit>
          <trans-unit id="141" translate="yes" xml:space="preserve">
            <source>If English and French descriptions co-exist in the same document, you can return any or all in the query results:</source>
            <target state="new">If English and French descriptions co-exist in the same document, you can return any or all in the query results:</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="142" translate="yes" xml:space="preserve">
            <source>Note that you can only query index at a time.</source>
            <target state="new">Note that you can only query index at a time.</target>
          </trans-unit>
          <trans-unit id="143" translate="yes" xml:space="preserve">
            <source>Do not create multiple indexes for each language unless you plan to query one at a time.</source>
            <target state="new">Do not create multiple indexes for each language unless you plan to query one at a time.</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="144" translate="yes" xml:space="preserve">
            <source>Paging - Get the 1st page of items (page size is 10):</source>
            <target state="new">Paging - Get the 1st page of items (page size is 10):</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="145" translate="yes" xml:space="preserve">
            <source>Paging - Get the 2nd page of items (page size is 10):</source>
            <target state="new">Paging - Get the 2nd page of items (page size is 10):</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="146" translate="yes" xml:space="preserve">
            <source>Retrieve a specific set of fields:</source>
            <target state="new">Retrieve a specific set of fields:</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="147" translate="yes" xml:space="preserve">
            <source>Retrieve documents matching a specific filter expression:</source>
            <target state="new">Retrieve documents matching a specific filter expression:</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="148" translate="yes" xml:space="preserve">
            <source>Search the index and return fragments with hit highlights:</source>
            <target state="new">Search the index and return fragments with hit highlights:</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="149" translate="yes" xml:space="preserve">
            <source>Search the index and return documents sorted from closer to farther away from a reference location:</source>
            <target state="new">Search the index and return documents sorted from closer to farther away from a reference location:</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="150" translate="yes" xml:space="preserve">
            <source>Search the index assuming there's a scoring profile called "geo" with two distance scoring functions, one defining a parameter called "currentLocation" and one defining a parameter called "lastLocation":</source>
            <target state="new">Search the index assuming there's a scoring profile called "geo" with two distance scoring functions, one defining a parameter called "currentLocation" and one defining a parameter called "lastLocation":</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="151" translate="yes" xml:space="preserve">
            <source>Find documents in the index using simple query syntax.</source>
            <target state="new">Find documents in the index using simple query syntax.</target>
          </trans-unit>
          <trans-unit id="152" translate="yes" xml:space="preserve">
            <source>This query returns hotels where searchable fields contain the terms "comfort" and "location" but not "motel":</source>
            <target state="new">This query returns hotels where searchable fields contain the terms "comfort" and "location" but not "motel":</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="153" translate="yes" xml:space="preserve">
            <source>The use of <ph id="1">&lt;codeInline&gt;searchMode=all&lt;/codeInline&gt;</ph> overrides the default of <ph id="2">&lt;codeInline&gt;searchMode=any&lt;/codeInline&gt;</ph>, ensuring that <ph id="3">&lt;codeInline&gt;-motel&lt;/codeInline&gt;</ph> means "AND NOT" instead of "OR NOT".</source>
            <target state="new">The use of <ph id="1">&lt;codeInline&gt;searchMode=all&lt;/codeInline&gt;</ph> overrides the default of <ph id="2">&lt;codeInline&gt;searchMode=any&lt;/codeInline&gt;</ph>, ensuring that <ph id="3">&lt;codeInline&gt;-motel&lt;/codeInline&gt;</ph> means "AND NOT" instead of "OR NOT".</target>
          </trans-unit>
          <trans-unit id="154" translate="yes" xml:space="preserve">
            <source>Without <ph id="1">&lt;codeInline&gt;searchMode=all&lt;/codeInline&gt;</ph>, you get "OR NOT" which expands rather than restricts search results, and this can be counter-intuitive to some users.</source>
            <target state="new">Without <ph id="1">&lt;codeInline&gt;searchMode=all&lt;/codeInline&gt;</ph>, you get "OR NOT" which expands rather than restricts search results, and this can be counter-intuitive to some users.</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="155" translate="yes" xml:space="preserve">
            <source>Azure Search .NET SDK</source>
            <target state="new">Azure Search .NET SDK</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>