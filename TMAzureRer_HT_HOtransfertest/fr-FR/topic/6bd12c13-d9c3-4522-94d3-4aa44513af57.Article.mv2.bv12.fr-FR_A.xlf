<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="fr-FR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANisEJwzAMAFfxABZEsuzYHaD0XbqALFsQSBNIE8j49ePg4M4s9Mqk0DszMNoEdcoVdEJJpRiKFO9qC5hYKuSWI3CZEWrmBGQpalGlMXiXakNSDNCKBuBIBIXbMBHmiEEszt6hd3bA8+3dvS5m/T4fx76f3tFog9f1le1zyPZb5Vz27Q8phdRVogAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Apply Math Operation</source>
            <target state="new">Apply Math Operation</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Applies a mathematical operation to column values</source>
            <target state="new">Applies a mathematical operation to column values</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Category: <bpt id="1">&lt;legacyLink xlink:href="8A248CBA-24AA-4779-AAD6-35D73A0A2340" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>Statistical Functions<ept id="1">&lt;/legacyLink&gt;</ept></source>
            <target state="new">Category: <bpt id="1">&lt;legacyLink xlink:href="8A248CBA-24AA-4779-AAD6-35D73A0A2340" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>Statistical Functions<ept id="1">&lt;/legacyLink&gt;</ept></target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Module Overview</source>
            <target state="new">Module Overview</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>You can use the <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept> module to create calculations to apply on some or all of the columns in the input dataset.</source>
            <target state="new">You can use the <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept> module to create calculations to apply on some or all of the columns in the input dataset.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Supported math operations include rounding, common arithmetic functions such as multiplication and division, trigonometric functions, various rounding functions, and special functions used in data science such as gamma and error functions.</source>
            <target state="new">Supported math operations include rounding, common arithmetic functions such as multiplication and division, trigonometric functions, various rounding functions, and special functions used in data science such as gamma and error functions.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept> module returns a dataset that includes the result of the specified calculations.</source>
            <target state="new">The <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept> module returns a dataset that includes the result of the specified calculations.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>You can opt to return the source columns with the results, output only the results, or replace the values in the columns that you select for the specified operation.</source>
            <target state="new">You can opt to return the source columns with the results, output only the results, or replace the values in the columns that you select for the specified operation.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Often several instances of the <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept> will be chained together to complete a complex operation on a column.</source>
            <target state="new">Often several instances of the <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept> will be chained together to complete a complex operation on a column.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Viewing some examples is the easiest way to see how to build mathematical formulas constructed using the module.</source>
            <target state="new">Viewing some examples is the easiest way to see how to build mathematical formulas constructed using the module.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Examples</source>
            <target state="new">Examples</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>For examples of how to use <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept>, see these sample experiments in the <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>Model Gallery<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://gallery.azureml.net/&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept>:</source>
            <target state="new">For examples of how to use <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept>, see these sample experiments in the <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>Model Gallery<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://gallery.azureml.net/&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept>:</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Color quantization<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=525272&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample, one set of column values is subtracted from another, and then the results are squared.</source>
            <target state="new">In the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Color quantization<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=525272&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample, one set of column values is subtracted from another, and then the results are squared.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Customer relationship prediction<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=525941&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample, the constant 1 is added to all values in a column to distinguish between zeros and missing values.</source>
            <target state="new">In the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Customer relationship prediction<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=525941&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample, the constant 1 is added to all values in a column to distinguish between zeros and missing values.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Flight delay prediction<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=525725&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample demonstrates various operations, including rounding and division.</source>
            <target state="new">The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Flight delay prediction<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=525725&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample demonstrates various operations, including rounding and division.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Direct marketing<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=525168&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample uses comparison operations to determine whether probability scores meet a required value.</source>
            <target state="new">The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Direct marketing<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=525168&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample uses comparison operations to determine whether probability scores meet a required value.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>How to Use Apply Math Operation</source>
            <target state="new">How to Use Apply Math Operation</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Click the <bpt id="1">&lt;ui&gt;</bpt>Category<ept id="1">&lt;/ui&gt;</ept> dropdown list, and choose a type of function:</source>
            <target state="new">Click the <bpt id="1">&lt;ui&gt;</bpt>Category<ept id="1">&lt;/ui&gt;</ept> dropdown list, and choose a type of function:</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Basic</source>
            <target state="new">Basic</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Basic unary functions, such as absolute values, the value of pi, etc.</source>
            <target state="new">Basic unary functions, such as absolute values, the value of pi, etc.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Compare</source>
            <target state="new">Compare</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Comparison operations</source>
            <target state="new">Comparison operations</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Operations</source>
            <target state="new">Operations</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Core arithmetic operations such as add and divide</source>
            <target state="new">Core arithmetic operations such as add and divide</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Rounding</source>
            <target state="new">Rounding</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Rounding and ceiling functions of all kinds</source>
            <target state="new">Rounding and ceiling functions of all kinds</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Special mathematical functions</source>
            <target state="new">Special mathematical functions</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Special mathematical functions</source>
            <target state="new">Special mathematical functions</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Trigonometric functions</source>
            <target state="new">Trigonometric functions</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Trigonometric functions</source>
            <target state="new">Trigonometric functions</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Depending on the type of operation you choose, you will pick one or more columns and one or more constants to use in the operation.</source>
            <target state="new">Depending on the type of operation you choose, you will pick one or more columns and one or more constants to use in the operation.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Input columns must be numeric.</source>
            <target state="new">Input columns must be numeric.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Moreover, the range of data must be valid for the selected mathematical operation.</source>
            <target state="new">Moreover, the range of data must be valid for the selected mathematical operation.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>Otherwise an error or NaN (not a number) result may occur.</source>
            <target state="new">Otherwise an error or NaN (not a number) result may occur.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>For example, <ph id="1">&lt;math&gt;Ln(-1.0)&lt;/math&gt;</ph> is an invalid operation and results in <ph id="2">&lt;math&gt;NaN&lt;/math&gt;</ph>.</source>
            <target state="new">For example, <ph id="1">&lt;math&gt;Ln(-1.0)&lt;/math&gt;</ph> is an invalid operation and results in <ph id="2">&lt;math&gt;NaN&lt;/math&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Indicate whether you want the results to overwrite the current column, or be appended to the current dataset.</source>
            <target state="new">Indicate whether you want the results to overwrite the current column, or be appended to the current dataset.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>You   can also output just the results and ignore the rest of the datset.</source>
            <target state="new">You   can also output just the results and ignore the rest of the datset.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Basic</source>
            <target state="new">Basic</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;ui&gt;</bpt>Basic<ept id="1">&lt;/ui&gt;</ept> category includes these core mathematical functions:</source>
            <target state="new">The <bpt id="1">&lt;ui&gt;</bpt>Basic<ept id="1">&lt;/ui&gt;</ept> category includes these core mathematical functions:</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Abs</source>
            <target state="new">Abs</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Returns the absolute value.</source>
            <target state="new">Returns the absolute value.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>This is a unary operation, so there are no parameters.</source>
            <target state="new">This is a unary operation, so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Atan2</source>
            <target state="new">Atan2</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Returns a four-quadrant inverse tangent.</source>
            <target state="new">Returns a four-quadrant inverse tangent.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Corresponds to the ATAN2 function in Matlab.</source>
            <target state="new">Corresponds to the ATAN2 function in Matlab.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Select the columns to apply the operation to by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</source>
            <target state="new">Select the columns to apply the operation to by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Specify another column or a constant to use in computing the value by selecting the <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Specify another column or a constant to use in computing the value by selecting the <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>If the second argument is a column, select a single column with values to be used as the second argument.</source>
            <target state="new">If the second argument is a column, select a single column with values to be used as the second argument.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>If the second argument is a constant, type the value in the <bpt id="1">&lt;ui&gt;</bpt>Constant second argument<ept id="1">&lt;/ui&gt;</ept> text box.</source>
            <target state="new">If the second argument is a constant, type the value in the <bpt id="1">&lt;ui&gt;</bpt>Constant second argument<ept id="1">&lt;/ui&gt;</ept> text box.</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>Conj</source>
            <target state="new">Conj</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Create the conjugate for the current value.</source>
            <target state="new">Create the conjugate for the current value.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>This is a unary operation, so there are no parameters.</source>
            <target state="new">This is a unary operation, so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>CubeRoot</source>
            <target state="new">CubeRoot</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>Calculate the cube root for the current value.</source>
            <target state="new">Calculate the cube root for the current value.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>This is a unary operation, so there are no parameters.</source>
            <target state="new">This is a unary operation, so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>DoubleFactorial</source>
            <target state="new">DoubleFactorial</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>Calculate the double factorial for the current value.</source>
            <target state="new">Calculate the double factorial for the current value.</target>
          </trans-unit>
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>The double factorial is an extension of the normal factorial function, and it is denoted as <ph id="1">&lt;math&gt;x!!&lt;/math&gt;</ph>.</source>
            <target state="new">The double factorial is an extension of the normal factorial function, and it is denoted as <ph id="1">&lt;math&gt;x!!&lt;/math&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>Eps</source>
            <target state="new">Eps</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>Returns the size of the gap between the current value and the next-highest, double-precision number.</source>
            <target state="new">Returns the size of the gap between the current value and the next-highest, double-precision number.</target>
          </trans-unit>
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Corresponds to the EPS function in Matlab.</source>
            <target state="new">Corresponds to the EPS function in Matlab.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>Exp</source>
            <target state="new">Exp</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>Returns the exponential for each value in the column.</source>
            <target state="new">Returns the exponential for each value in the column.</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>Exp2</source>
            <target state="new">Exp2</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>Returns the base-2 exponential of the argument.</source>
            <target state="new">Returns the base-2 exponential of the argument.</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>Select the columns to apply the operation to by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</source>
            <target state="new">Select the columns to apply the operation to by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>Specify another column or a constant to use in computing the function by selecting the <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Specify another column or a constant to use in computing the function by selecting the <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>If the second argument is a column, select a single column with values to be used as the second argument.</source>
            <target state="new">If the second argument is a column, select a single column with values to be used as the second argument.</target>
          </trans-unit>
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>If the second argument is a constant, type the value in the <bpt id="1">&lt;ui&gt;</bpt>Constant second argument<ept id="1">&lt;/ui&gt;</ept> text box.</source>
            <target state="new">If the second argument is a constant, type the value in the <bpt id="1">&lt;ui&gt;</bpt>Constant second argument<ept id="1">&lt;/ui&gt;</ept> text box.</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>ExpMinus1</source>
            <target state="new">ExpMinus1</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>Returns the negative exponent.</source>
            <target state="new">Returns the negative exponent.</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>Factorial</source>
            <target state="new">Factorial</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>Returns the factorial for the specified number.</source>
            <target state="new">Returns the factorial for the specified number.</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>Hypotenuse</source>
            <target state="new">Hypotenuse</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>Calculates the hypotenuse given the current column and the supplied arguments.</source>
            <target state="new">Calculates the hypotenuse given the current column and the supplied arguments.</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>Select the columns to apply the operation to by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</source>
            <target state="new">Select the columns to apply the operation to by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>Specify another column or a constant to use in computing the function by selecting the <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Specify another column or a constant to use in computing the function by selecting the <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>If the second argument is a column, select a single column with values to be used as the second argument.</source>
            <target state="new">If the second argument is a column, select a single column with values to be used as the second argument.</target>
          </trans-unit>
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>If the second argument is a constant, type the value in the <bpt id="1">&lt;ui&gt;</bpt>Constant second argument<ept id="1">&lt;/ui&gt;</ept> text box.</source>
            <target state="new">If the second argument is a constant, type the value in the <bpt id="1">&lt;ui&gt;</bpt>Constant second argument<ept id="1">&lt;/ui&gt;</ept> text box.</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>ImaginaryPart</source>
            <target state="new">ImaginaryPart</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>Returns the imaginary part of the values in the selected column.</source>
            <target state="new">Returns the imaginary part of the values in the selected column.</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>Ln</source>
            <target state="new">Ln</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>Returns the natural logarithm.</source>
            <target state="new">Returns the natural logarithm.</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>LnPlus1</source>
            <target state="new">LnPlus1</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>Returns the natural logarithm plus one.</source>
            <target state="new">Returns the natural logarithm plus one.</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>Log</source>
            <target state="new">Log</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>Returns the log of the values in the selected column, given the specified base.</source>
            <target state="new">Returns the log of the values in the selected column, given the specified base.</target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>Select the columns to apply the operation to by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</source>
            <target state="new">Select the columns to apply the operation to by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>Specify another column that contains base values, or specify a constant to use as a base by selecting from <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Specify another column that contains base values, or specify a constant to use as a base by selecting from <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>If the second argument is a column, each value in the column is used as the log base for the corresponding row.</source>
            <target state="new">If the second argument is a column, each value in the column is used as the log base for the corresponding row.</target>
          </trans-unit>
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>If the second argument is a constant, type the base value in the <bpt id="1">&lt;ui&gt;</bpt>Constant second argument<ept id="1">&lt;/ui&gt;</ept> text box.</source>
            <target state="new">If the second argument is a constant, type the base value in the <bpt id="1">&lt;ui&gt;</bpt>Constant second argument<ept id="1">&lt;/ui&gt;</ept> text box.</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>Log10</source>
            <target state="new">Log10</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>Returns the base 10 logarithm.</source>
            <target state="new">Returns the base 10 logarithm.</target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>Log2</source>
            <target state="new">Log2</target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>Returns the base 2 logarithm.</source>
            <target state="new">Returns the base 2 logarithm.</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source>NthRoot</source>
            <target state="new">NthRoot</target>
          </trans-unit>
        </group>
        <group id="94">
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>Returns the nth root of the value, using an <ph id="1">&lt;math&gt;n&lt;/math&gt;</ph> that you specify.</source>
            <target state="new">Returns the nth root of the value, using an <ph id="1">&lt;math&gt;n&lt;/math&gt;</ph> that you specify.</target>
          </trans-unit>
        </group>
        <group id="95">
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>Select the columns to apply the operation to, by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</source>
            <target state="new">Select the columns to apply the operation to, by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</target>
          </trans-unit>
        </group>
        <group id="96">
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>Specify another column that contains the root, or specify a constant to use as the root by selecting from <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Specify another column that contains the root, or specify a constant to use as the root by selecting from <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="97">
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>If the second argument is a column, each value in the column is used as the value of <ph id="1">&lt;math&gt;n&lt;/math&gt;</ph> for the corresponding row.</source>
            <target state="new">If the second argument is a column, each value in the column is used as the value of <ph id="1">&lt;math&gt;n&lt;/math&gt;</ph> for the corresponding row.</target>
          </trans-unit>
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>If the second argument is a constant, type the value for <ph id="1">&lt;math&gt;n&lt;/math&gt;</ph> in the <bpt id="2">&lt;ui&gt;</bpt>Constant second argument<ept id="2">&lt;/ui&gt;</ept> text box.</source>
            <target state="new">If the second argument is a constant, type the value for <ph id="1">&lt;math&gt;n&lt;/math&gt;</ph> in the <bpt id="2">&lt;ui&gt;</bpt>Constant second argument<ept id="2">&lt;/ui&gt;</ept> text box.</target>
          </trans-unit>
        </group>
        <group id="98">
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source>Pow</source>
            <target state="new">Pow</target>
          </trans-unit>
        </group>
        <group id="99">
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>Calculates <ph id="1">&lt;math&gt;X&lt;/math&gt;</ph> raised to the power of <ph id="2">&lt;math&gt;Y&lt;/math&gt;</ph>.</source>
            <target state="new">Calculates <ph id="1">&lt;math&gt;X&lt;/math&gt;</ph> raised to the power of <ph id="2">&lt;math&gt;Y&lt;/math&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="100">
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source>Select the columns that contains the base (which should be a float) by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</source>
            <target state="new">Select the columns that contains the base (which should be a float) by using the <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept> option.</target>
          </trans-unit>
        </group>
        <group id="101">
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>Specify another column that contains the exponent, or specify a constant to use as the exponent by selecting from <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Specify another column that contains the exponent, or specify a constant to use as the exponent by selecting from <bpt id="1">&lt;ui&gt;</bpt>Second argument type<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="102">
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source>If the second argument is a column, each value in the column is used as the exponent for the corresponding row.</source>
            <target state="new">If the second argument is a column, each value in the column is used as the exponent for the corresponding row.</target>
          </trans-unit>
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>If the second argument is a constant, type the value for the exponent in the <bpt id="1">&lt;ui&gt;</bpt>Constant second argument<ept id="1">&lt;/ui&gt;</ept> text box.</source>
            <target state="new">If the second argument is a constant, type the value for the exponent in the <bpt id="1">&lt;ui&gt;</bpt>Constant second argument<ept id="1">&lt;/ui&gt;</ept> text box.</target>
          </trans-unit>
        </group>
        <group id="103">
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source>RealPart</source>
            <target state="new">RealPart</target>
          </trans-unit>
        </group>
        <group id="104">
          <trans-unit id="130" translate="yes" xml:space="preserve">
            <source>Returns the real part of the values in the column.</source>
            <target state="new">Returns the real part of the values in the column.</target>
          </trans-unit>
        </group>
        <group id="105">
          <trans-unit id="131" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="132" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="106">
          <trans-unit id="133" translate="yes" xml:space="preserve">
            <source>Sqrt</source>
            <target state="new">Sqrt</target>
          </trans-unit>
        </group>
        <group id="107">
          <trans-unit id="134" translate="yes" xml:space="preserve">
            <source>Returns the square root of the values in the column.</source>
            <target state="new">Returns the square root of the values in the column.</target>
          </trans-unit>
        </group>
        <group id="108">
          <trans-unit id="135" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="136" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="109">
          <trans-unit id="137" translate="yes" xml:space="preserve">
            <source>SqrtPi</source>
            <target state="new">SqrtPi</target>
          </trans-unit>
        </group>
        <group id="110">
          <trans-unit id="138" translate="yes" xml:space="preserve">
            <source>Returns the square root of (number * pi).</source>
            <target state="new">Returns the square root of (number * pi).</target>
          </trans-unit>
        </group>
        <group id="111">
          <trans-unit id="139" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="140" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="112">
          <trans-unit id="141" translate="yes" xml:space="preserve">
            <source>Square</source>
            <target state="new">Square</target>
          </trans-unit>
        </group>
        <group id="113">
          <trans-unit id="142" translate="yes" xml:space="preserve">
            <source>Squares the values in the column.</source>
            <target state="new">Squares the values in the column.</target>
          </trans-unit>
        </group>
        <group id="114">
          <trans-unit id="143" translate="yes" xml:space="preserve">
            <source>This is a unary operation so there are no parameters.</source>
            <target state="new">This is a unary operation so there are no parameters.</target>
          </trans-unit>
          <trans-unit id="144" translate="yes" xml:space="preserve">
            <source>Select the columns to which the operation should apply.</source>
            <target state="new">Select the columns to which the operation should apply.</target>
          </trans-unit>
        </group>
        <group id="115">
          <trans-unit id="145" translate="yes" xml:space="preserve">
            <source>Compare</source>
            <target state="new">Compare</target>
          </trans-unit>
        </group>
        <group id="116">
          <trans-unit id="146" translate="yes" xml:space="preserve">
            <source>Select one of the comparison operations to apply.</source>
            <target state="new">Select one of the comparison operations to apply.</target>
          </trans-unit>
          <trans-unit id="147" translate="yes" xml:space="preserve">
            <source>For example, you might decide to compare the results of evaluating a model against a threshold, represented as a constant, and generate TRUE/FALSE flags to indicate which rows were greater than the threshold value.</source>
            <target state="new">For example, you might decide to compare the results of evaluating a model against a threshold, represented as a constant, and generate TRUE/FALSE flags to indicate which rows were greater than the threshold value.</target>
          </trans-unit>
          <trans-unit id="148" translate="yes" xml:space="preserve">
            <source>Or you might want to check whether the values in two columns matched.</source>
            <target state="new">Or you might want to check whether the values in two columns matched.</target>
          </trans-unit>
        </group>
        <group id="117">
          <trans-unit id="149" translate="yes" xml:space="preserve">
            <source>These operations are all binary operations, so you need to specify a column or columns of values, and choose a constant or another column to use for comparison.</source>
            <target state="new">These operations are all binary operations, so you need to specify a column or columns of values, and choose a constant or another column to use for comparison.</target>
          </trans-unit>
        </group>
        <group id="118">
          <trans-unit id="150" translate="yes" xml:space="preserve">
            <source>The headings of the returned dataset indicate the operation and the columns that were used, for example:</source>
            <target state="new">The headings of the returned dataset indicate the operation and the columns that were used, for example:</target>
          </trans-unit>
        </group>
        <group id="119">
          <trans-unit id="151" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Equals(Col2_Col1)<ept id="1">&lt;/embeddedLabel&gt;</ept> indicates that you tested Col2 against Col1.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Equals(Col2_Col1)<ept id="1">&lt;/embeddedLabel&gt;</ept> indicates that you tested Col2 against Col1.</target>
          </trans-unit>
        </group>
        <group id="120">
          <trans-unit id="152" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Equals(Col2_$10)<ept id="1">&lt;/embeddedLabel&gt;</ept> indicates that you chose a constant to use in comparison.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Equals(Col2_$10)<ept id="1">&lt;/embeddedLabel&gt;</ept> indicates that you chose a constant to use in comparison.</target>
          </trans-unit>
        </group>
        <group id="121">
          <trans-unit id="153" translate="yes" xml:space="preserve">
            <source>Both columns that you compare must be in the same dataset.</source>
            <target state="new">Both columns that you compare must be in the same dataset.</target>
          </trans-unit>
        </group>
        <group id="122">
          <trans-unit id="154" translate="yes" xml:space="preserve">
            <source>To compare two values or sets of values</source>
            <target state="new">To compare two values or sets of values</target>
          </trans-unit>
        </group>
        <group id="123">
          <trans-unit id="155" translate="yes" xml:space="preserve">
            <source>Choose the type of the first comparison set by using the <bpt id="1">&lt;ui&gt;</bpt>Value to compare type<ept id="1">&lt;/ui&gt;</ept> option.</source>
            <target state="new">Choose the type of the first comparison set by using the <bpt id="1">&lt;ui&gt;</bpt>Value to compare type<ept id="1">&lt;/ui&gt;</ept> option.</target>
          </trans-unit>
        </group>
        <group id="124">
          <trans-unit id="156" translate="yes" xml:space="preserve">
            <source>If you want to compare two sets of column values, choose <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept>, and then use the <bpt id="2">&lt;ui&gt;</bpt>Column Selector<ept id="2">&lt;/ui&gt;</ept> to choose the first column or columns.</source>
            <target state="new">If you want to compare two sets of column values, choose <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept>, and then use the <bpt id="2">&lt;ui&gt;</bpt>Column Selector<ept id="2">&lt;/ui&gt;</ept> to choose the first column or columns.</target>
          </trans-unit>
        </group>
        <group id="125">
          <trans-unit id="157" translate="yes" xml:space="preserve">
            <source>If you want to compare the values in the column or columns against a constant, select <bpt id="1">&lt;ui&gt;</bpt>Constant<ept id="1">&lt;/ui&gt;</ept>, and then type the value in the <bpt id="2">&lt;ui&gt;</bpt>Constant value to compare<ept id="2">&lt;/ui&gt;</ept> text box.</source>
            <target state="new">If you want to compare the values in the column or columns against a constant, select <bpt id="1">&lt;ui&gt;</bpt>Constant<ept id="1">&lt;/ui&gt;</ept>, and then type the value in the <bpt id="2">&lt;ui&gt;</bpt>Constant value to compare<ept id="2">&lt;/ui&gt;</ept> text box.</target>
          </trans-unit>
        </group>
        <group id="126">
          <trans-unit id="158" translate="yes" xml:space="preserve">
            <source>EqualTo</source>
            <target state="new">EqualTo</target>
          </trans-unit>
        </group>
        <group id="127">
          <trans-unit id="159" translate="yes" xml:space="preserve">
            <source>Returns True if the values are the same, and returns False if they are not.</source>
            <target state="new">Returns True if the values are the same, and returns False if they are not.</target>
          </trans-unit>
        </group>
        <group id="128">
          <trans-unit id="160" translate="yes" xml:space="preserve">
            <source>GreaterThan</source>
            <target state="new">GreaterThan</target>
          </trans-unit>
        </group>
        <group id="129">
          <trans-unit id="161" translate="yes" xml:space="preserve">
            <source>Returns True if the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> are greater than the constant or comparison column, and returns False if they are not.</source>
            <target state="new">Returns True if the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> are greater than the constant or comparison column, and returns False if they are not.</target>
          </trans-unit>
        </group>
        <group id="130">
          <trans-unit id="162" translate="yes" xml:space="preserve">
            <source>GreaterThanOrEqualTo</source>
            <target state="new">GreaterThanOrEqualTo</target>
          </trans-unit>
        </group>
        <group id="131">
          <trans-unit id="163" translate="yes" xml:space="preserve">
            <source>Returns True if the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> are greater than or equal to the constant or comparison column, and returns False if they are not.</source>
            <target state="new">Returns True if the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> are greater than or equal to the constant or comparison column, and returns False if they are not.</target>
          </trans-unit>
        </group>
        <group id="132">
          <trans-unit id="164" translate="yes" xml:space="preserve">
            <source>LessThan</source>
            <target state="new">LessThan</target>
          </trans-unit>
        </group>
        <group id="133">
          <trans-unit id="165" translate="yes" xml:space="preserve">
            <source>Returns True if the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> are less than the constant or comparison column, and returns False if they are not.</source>
            <target state="new">Returns True if the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> are less than the constant or comparison column, and returns False if they are not.</target>
          </trans-unit>
        </group>
        <group id="134">
          <trans-unit id="166" translate="yes" xml:space="preserve">
            <source>LessThanOrEqualTo</source>
            <target state="new">LessThanOrEqualTo</target>
          </trans-unit>
        </group>
        <group id="135">
          <trans-unit id="167" translate="yes" xml:space="preserve">
            <source>Returns True if the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> are less than or equal to the constant or comparison column, and returns False if they are not.</source>
            <target state="new">Returns True if the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> are less than or equal to the constant or comparison column, and returns False if they are not.</target>
          </trans-unit>
        </group>
        <group id="136">
          <trans-unit id="168" translate="yes" xml:space="preserve">
            <source>NotEqualTo</source>
            <target state="new">NotEqualTo</target>
          </trans-unit>
        </group>
        <group id="137">
          <trans-unit id="169" translate="yes" xml:space="preserve">
            <source>Returns True if the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> are not equal to the constant or comparison column, and returns False if they are equal.</source>
            <target state="new">Returns True if the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> are not equal to the constant or comparison column, and returns False if they are equal.</target>
          </trans-unit>
        </group>
        <group id="138">
          <trans-unit id="170" translate="yes" xml:space="preserve">
            <source>PairMax</source>
            <target state="new">PairMax</target>
          </trans-unit>
        </group>
        <group id="139">
          <trans-unit id="171" translate="yes" xml:space="preserve">
            <source>Returns the value that is greater—the value in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> or the value in the constant or comparison column.</source>
            <target state="new">Returns the value that is greater—the value in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> or the value in the constant or comparison column.</target>
          </trans-unit>
        </group>
        <group id="140">
          <trans-unit id="172" translate="yes" xml:space="preserve">
            <source>PairMin</source>
            <target state="new">PairMin</target>
          </trans-unit>
        </group>
        <group id="141">
          <trans-unit id="173" translate="yes" xml:space="preserve">
            <source>Returns the value that is less—the value in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> or the value in the constant or comparison column</source>
            <target state="new">Returns the value that is less—the value in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> or the value in the constant or comparison column</target>
          </trans-unit>
        </group>
        <group id="142">
          <trans-unit id="174" translate="yes" xml:space="preserve">
            <source>Operations</source>
            <target state="new">Operations</target>
          </trans-unit>
        </group>
        <group id="143">
          <trans-unit id="175" translate="yes" xml:space="preserve">
            <source>This group includes basic arithmetic operations.</source>
            <target state="new">This group includes basic arithmetic operations.</target>
          </trans-unit>
          <trans-unit id="176" translate="yes" xml:space="preserve">
            <source>You can chain them together to create calculations and modify dataset values en masse.</source>
            <target state="new">You can chain them together to create calculations and modify dataset values en masse.</target>
          </trans-unit>
        </group>
        <group id="144">
          <trans-unit id="177" translate="yes" xml:space="preserve">
            <source>To create a formula by using arithmetic operations</source>
            <target state="new">To create a formula by using arithmetic operations</target>
          </trans-unit>
        </group>
        <group id="145">
          <trans-unit id="178" translate="yes" xml:space="preserve">
            <source>Choose the columns to operate on by using the <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> option.</source>
            <target state="new">Choose the columns to operate on by using the <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> option.</target>
          </trans-unit>
        </group>
        <group id="146">
          <trans-unit id="179" translate="yes" xml:space="preserve">
            <source>Choose the number or column values to use as argument to the operator by selecting an <bpt id="1">&lt;ui&gt;</bpt>Operation argument type<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Choose the number or column values to use as argument to the operator by selecting an <bpt id="1">&lt;ui&gt;</bpt>Operation argument type<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="147">
          <trans-unit id="180" translate="yes" xml:space="preserve">
            <source>If you want to compare the values in the column or columns against a constant, select <bpt id="1">&lt;ui&gt;</bpt>Constant<ept id="1">&lt;/ui&gt;</ept> and then type the value in the <bpt id="2">&lt;ui&gt;</bpt>Constant value to compare<ept id="2">&lt;/ui&gt;</ept> text box.</source>
            <target state="new">If you want to compare the values in the column or columns against a constant, select <bpt id="1">&lt;ui&gt;</bpt>Constant<ept id="1">&lt;/ui&gt;</ept> and then type the value in the <bpt id="2">&lt;ui&gt;</bpt>Constant value to compare<ept id="2">&lt;/ui&gt;</ept> text box.</target>
          </trans-unit>
        </group>
        <group id="148">
          <trans-unit id="181" translate="yes" xml:space="preserve">
            <source>To use another column of values as the argument to the operator, select <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept>, and then use the <bpt id="2">&lt;ui&gt;</bpt>Column Selector<ept id="2">&lt;/ui&gt;</ept> to choose the column used as <bpt id="3">&lt;ui&gt;</bpt>Operation argument<ept id="3">&lt;/ui&gt;</ept>.</source>
            <target state="new">To use another column of values as the argument to the operator, select <bpt id="1">&lt;ui&gt;</bpt>ColumnSet<ept id="1">&lt;/ui&gt;</ept>, and then use the <bpt id="2">&lt;ui&gt;</bpt>Column Selector<ept id="2">&lt;/ui&gt;</ept> to choose the column used as <bpt id="3">&lt;ui&gt;</bpt>Operation argument<ept id="3">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="149">
          <trans-unit id="182" translate="yes" xml:space="preserve">
            <source>For example, you might add two columns by using one instance of <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept>, and then use another instance of <bpt id="2">&lt;ui&gt;</bpt>Apply Math Operation<ept id="2">&lt;/ui&gt;</ept> to divide the sum by a constant to obtain the mean.</source>
            <target state="new">For example, you might add two columns by using one instance of <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept>, and then use another instance of <bpt id="2">&lt;ui&gt;</bpt>Apply Math Operation<ept id="2">&lt;/ui&gt;</ept> to divide the sum by a constant to obtain the mean.</target>
          </trans-unit>
        </group>
        <group id="150">
          <trans-unit id="183" translate="yes" xml:space="preserve">
            <source>Add</source>
            <target state="new">Add</target>
          </trans-unit>
        </group>
        <group id="151">
          <trans-unit id="184" translate="yes" xml:space="preserve">
            <source>Adds a constant or the column values defined in <bpt id="1">&lt;ui&gt;</bpt>Operation argument<ept id="1">&lt;/ui&gt;</ept> to the values in the column that is specified by <bpt id="2">&lt;ui&gt;</bpt>Column set<ept id="2">&lt;/ui&gt;</ept>.</source>
            <target state="new">Adds a constant or the column values defined in <bpt id="1">&lt;ui&gt;</bpt>Operation argument<ept id="1">&lt;/ui&gt;</ept> to the values in the column that is specified by <bpt id="2">&lt;ui&gt;</bpt>Column set<ept id="2">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="152">
          <trans-unit id="185" translate="yes" xml:space="preserve">
            <source>Divide</source>
            <target state="new">Divide</target>
          </trans-unit>
        </group>
        <group id="153">
          <trans-unit id="186" translate="yes" xml:space="preserve">
            <source>Multiplies the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> by the specified constant or column values.</source>
            <target state="new">Multiplies the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> by the specified constant or column values.</target>
          </trans-unit>
        </group>
        <group id="154">
          <trans-unit id="187" translate="yes" xml:space="preserve">
            <source>Multiply</source>
            <target state="new">Multiply</target>
          </trans-unit>
        </group>
        <group id="155">
          <trans-unit id="188" translate="yes" xml:space="preserve">
            <source>Divides the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> by a constant or by the column values defined in <bpt id="2">&lt;ui&gt;</bpt>Operation argument<ept id="2">&lt;/ui&gt;</ept>.</source>
            <target state="new">Divides the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> by a constant or by the column values defined in <bpt id="2">&lt;ui&gt;</bpt>Operation argument<ept id="2">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="156">
          <trans-unit id="189" translate="yes" xml:space="preserve">
            <source>Subtract</source>
            <target state="new">Subtract</target>
          </trans-unit>
        </group>
        <group id="157">
          <trans-unit id="190" translate="yes" xml:space="preserve">
            <source>Subtracts the specified constant or column values from the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Subtracts the specified constant or column values from the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="158">
          <trans-unit id="191" translate="yes" xml:space="preserve">
            <source>Rounding</source>
            <target state="new">Rounding</target>
          </trans-unit>
        </group>
        <group id="159">
          <trans-unit id="192" translate="yes" xml:space="preserve">
            <source>Select a type of rounding operation to apply to the selected columns.</source>
            <target state="new">Select a type of rounding operation to apply to the selected columns.</target>
          </trans-unit>
        </group>
        <group id="160">
          <trans-unit id="193" translate="yes" xml:space="preserve">
            <source>For most rounding operations, you must specify a precision value by one of these methods: </source>
            <target state="new">For most rounding operations, you must specify a precision value by one of these methods: </target>
          </trans-unit>
        </group>
        <group id="161">
          <trans-unit id="194" translate="yes" xml:space="preserve">
            <source>Setting <bpt id="1">&lt;ui&gt;</bpt>Precision Type<ept id="1">&lt;/ui&gt;</ept> to <bpt id="2">&lt;ui&gt;</bpt>ColumnSet<ept id="2">&lt;/ui&gt;</ept> and choosing a column with appropriate values.</source>
            <target state="new">Setting <bpt id="1">&lt;ui&gt;</bpt>Precision Type<ept id="1">&lt;/ui&gt;</ept> to <bpt id="2">&lt;ui&gt;</bpt>ColumnSet<ept id="2">&lt;/ui&gt;</ept> and choosing a column with appropriate values.</target>
          </trans-unit>
        </group>
        <group id="162">
          <trans-unit id="195" translate="yes" xml:space="preserve">
            <source>Setting <bpt id="1">&lt;ui&gt;</bpt>Precision Type<ept id="1">&lt;/ui&gt;</ept> to <bpt id="2">&lt;ui&gt;</bpt>Constant<ept id="2">&lt;/ui&gt;</ept> and typing a value in the <bpt id="3">&lt;ui&gt;</bpt>Constant Precision<ept id="3">&lt;/ui&gt;</ept> text box.</source>
            <target state="new">Setting <bpt id="1">&lt;ui&gt;</bpt>Precision Type<ept id="1">&lt;/ui&gt;</ept> to <bpt id="2">&lt;ui&gt;</bpt>Constant<ept id="2">&lt;/ui&gt;</ept> and typing a value in the <bpt id="3">&lt;ui&gt;</bpt>Constant Precision<ept id="3">&lt;/ui&gt;</ept> text box.</target>
          </trans-unit>
        </group>
        <group id="163">
          <trans-unit id="196" translate="yes" xml:space="preserve">
            <source>Ceiling</source>
            <target state="new">Ceiling</target>
          </trans-unit>
        </group>
        <group id="164">
          <trans-unit id="197" translate="yes" xml:space="preserve">
            <source>Returns the ceiling for the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Returns the ceiling for the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="165">
          <trans-unit id="198" translate="yes" xml:space="preserve">
            <source>CeilingPower2</source>
            <target state="new">CeilingPower2</target>
          </trans-unit>
        </group>
        <group id="166">
          <trans-unit id="199" translate="yes" xml:space="preserve">
            <source>Returns the squared ceiling for the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Returns the squared ceiling for the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="167">
          <trans-unit id="200" translate="yes" xml:space="preserve">
            <source>Floor</source>
            <target state="new">Floor</target>
          </trans-unit>
        </group>
        <group id="168">
          <trans-unit id="201" translate="yes" xml:space="preserve">
            <source>Returns the floor for the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, to the specified precision.</source>
            <target state="new">Returns the floor for the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, to the specified precision.</target>
          </trans-unit>
        </group>
        <group id="169">
          <trans-unit id="202" translate="yes" xml:space="preserve">
            <source>Mod</source>
            <target state="new">Mod</target>
          </trans-unit>
        </group>
        <group id="170">
          <trans-unit id="203" translate="yes" xml:space="preserve">
            <source>Returns the fractional part of the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, to the specified precision.</source>
            <target state="new">Returns the fractional part of the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, to the specified precision.</target>
          </trans-unit>
        </group>
        <group id="171">
          <trans-unit id="204" translate="yes" xml:space="preserve">
            <source>Quotient</source>
            <target state="new">Quotient</target>
          </trans-unit>
        </group>
        <group id="172">
          <trans-unit id="205" translate="yes" xml:space="preserve">
            <source>Returns the fractional part of the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, to the specified precision.</source>
            <target state="new">Returns the fractional part of the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, to the specified precision.</target>
          </trans-unit>
        </group>
        <group id="173">
          <trans-unit id="206" translate="yes" xml:space="preserve">
            <source>Remainder</source>
            <target state="new">Remainder</target>
          </trans-unit>
        </group>
        <group id="174">
          <trans-unit id="207" translate="yes" xml:space="preserve">
            <source>Returns the remainder for the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Returns the remainder for the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="175">
          <trans-unit id="208" translate="yes" xml:space="preserve">
            <source>RoundDigits</source>
            <target state="new">RoundDigits</target>
          </trans-unit>
        </group>
        <group id="176">
          <trans-unit id="209" translate="yes" xml:space="preserve">
            <source>Returns the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, rounded by the 4/5 rule to the specified number of digits.</source>
            <target state="new">Returns the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, rounded by the 4/5 rule to the specified number of digits.</target>
          </trans-unit>
        </group>
        <group id="177">
          <trans-unit id="210" translate="yes" xml:space="preserve">
            <source>RoundDown</source>
            <target state="new">RoundDown</target>
          </trans-unit>
        </group>
        <group id="178">
          <trans-unit id="211" translate="yes" xml:space="preserve">
            <source>Returns the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, rounded down to the specified number of digits.</source>
            <target state="new">Returns the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, rounded down to the specified number of digits.</target>
          </trans-unit>
        </group>
        <group id="179">
          <trans-unit id="212" translate="yes" xml:space="preserve">
            <source>RoundUp</source>
            <target state="new">RoundUp</target>
          </trans-unit>
        </group>
        <group id="180">
          <trans-unit id="213" translate="yes" xml:space="preserve">
            <source>Returns the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, rounded up to the specified number of digits.</source>
            <target state="new">Returns the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, rounded up to the specified number of digits.</target>
          </trans-unit>
        </group>
        <group id="181">
          <trans-unit id="214" translate="yes" xml:space="preserve">
            <source>ToEven</source>
            <target state="new">ToEven</target>
          </trans-unit>
        </group>
        <group id="182">
          <trans-unit id="215" translate="yes" xml:space="preserve">
            <source>Returns the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, rounded to the nearest whole, even number.</source>
            <target state="new">Returns the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, rounded to the nearest whole, even number.</target>
          </trans-unit>
        </group>
        <group id="183">
          <trans-unit id="216" translate="yes" xml:space="preserve">
            <source>ToOdd</source>
            <target state="new">ToOdd</target>
          </trans-unit>
        </group>
        <group id="184">
          <trans-unit id="217" translate="yes" xml:space="preserve">
            <source>Returns the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, rounded to the nearest whole, odd number.</source>
            <target state="new">Returns the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept>, rounded to the nearest whole, odd number.</target>
          </trans-unit>
        </group>
        <group id="185">
          <trans-unit id="218" translate="yes" xml:space="preserve">
            <source>Truncate</source>
            <target state="new">Truncate</target>
          </trans-unit>
        </group>
        <group id="186">
          <trans-unit id="219" translate="yes" xml:space="preserve">
            <source>Truncates the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> by removing all digits not allowed by the specified precision.</source>
            <target state="new">Truncates the values in <bpt id="1">&lt;ui&gt;</bpt>Column set<ept id="1">&lt;/ui&gt;</ept> by removing all digits not allowed by the specified precision.</target>
          </trans-unit>
        </group>
        <group id="187">
          <trans-unit id="220" translate="yes" xml:space="preserve">
            <source>Special</source>
            <target state="new">Special</target>
          </trans-unit>
        </group>
        <group id="188">
          <trans-unit id="221" translate="yes" xml:space="preserve">
            <source>Azure Machine Learning Studio provides these special mathematical functions.</source>
            <target state="new">Azure Machine Learning Studio provides these special mathematical functions.</target>
          </trans-unit>
          <trans-unit id="222" translate="yes" xml:space="preserve">
            <source>All operations are unary on the elected columns unless specifically noted.</source>
            <target state="new">All operations are unary on the elected columns unless specifically noted.</target>
          </trans-unit>
        </group>
        <group id="189">
          <trans-unit id="223" translate="yes" xml:space="preserve">
            <source>Beta</source>
            <target state="new">Beta</target>
          </trans-unit>
        </group>
        <group id="190">
          <trans-unit id="224" translate="yes" xml:space="preserve">
            <source>Returns the value of Euler’s beta function.</source>
            <target state="new">Returns the value of Euler’s beta function.</target>
          </trans-unit>
        </group>
        <group id="191">
          <trans-unit id="225" translate="yes" xml:space="preserve">
            <source>EllipticIntegralE</source>
            <target state="new">EllipticIntegralE</target>
          </trans-unit>
        </group>
        <group id="192">
          <trans-unit id="226" translate="yes" xml:space="preserve">
            <source>Returns the value of the incomplete elliptic integral €.</source>
            <target state="new">Returns the value of the incomplete elliptic integral €.</target>
          </trans-unit>
        </group>
        <group id="193">
          <trans-unit id="227" translate="yes" xml:space="preserve">
            <source>Specify a constant or column of values to apply as an argument.</source>
            <target state="new">Specify a constant or column of values to apply as an argument.</target>
          </trans-unit>
        </group>
        <group id="194">
          <trans-unit id="228" translate="yes" xml:space="preserve">
            <source>EllipticIntegralK</source>
            <target state="new">EllipticIntegralK</target>
          </trans-unit>
        </group>
        <group id="195">
          <trans-unit id="229" translate="yes" xml:space="preserve">
            <source>Returns the value of the complete elliptic integral (K).</source>
            <target state="new">Returns the value of the complete elliptic integral (K).</target>
          </trans-unit>
        </group>
        <group id="196">
          <trans-unit id="230" translate="yes" xml:space="preserve">
            <source>Specify a constant or column of values to apply as an argument.</source>
            <target state="new">Specify a constant or column of values to apply as an argument.</target>
          </trans-unit>
        </group>
        <group id="197">
          <trans-unit id="231" translate="yes" xml:space="preserve">
            <source>Erf</source>
            <target state="new">Erf</target>
          </trans-unit>
        </group>
        <group id="198">
          <trans-unit id="232" translate="yes" xml:space="preserve">
            <source>Returns the value of the error function.</source>
            <target state="new">Returns the value of the error function.</target>
          </trans-unit>
        </group>
        <group id="199">
          <trans-unit id="233" translate="yes" xml:space="preserve">
            <source>The error function (also called the Gauss error function) is a special function of the sigmoid shape that is used in probability to describe diffusion.</source>
            <target state="new">The error function (also called the Gauss error function) is a special function of the sigmoid shape that is used in probability to describe diffusion.</target>
          </trans-unit>
        </group>
        <group id="200">
          <trans-unit id="234" translate="yes" xml:space="preserve">
            <source>Erfc</source>
            <target state="new">Erfc</target>
          </trans-unit>
        </group>
        <group id="201">
          <trans-unit id="235" translate="yes" xml:space="preserve">
            <source>Returns the value of the complementary error function.</source>
            <target state="new">Returns the value of the complementary error function.</target>
          </trans-unit>
        </group>
        <group id="202">
          <trans-unit id="236" translate="yes" xml:space="preserve">
            <source>Erfc is defined as <ph id="1">&lt;math&gt;1 – erf(x)&lt;/math&gt;</ph>.</source>
            <target state="new">Erfc is defined as <ph id="1">&lt;math&gt;1 – erf(x)&lt;/math&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="203">
          <trans-unit id="237" translate="yes" xml:space="preserve">
            <source>ErfScaled</source>
            <target state="new">ErfScaled</target>
          </trans-unit>
        </group>
        <group id="204">
          <trans-unit id="238" translate="yes" xml:space="preserve">
            <source>Returns the value of the scaled error function.</source>
            <target state="new">Returns the value of the scaled error function.</target>
          </trans-unit>
        </group>
        <group id="205">
          <trans-unit id="239" translate="yes" xml:space="preserve">
            <source>The scaled version of the error function can be used to avoid arithmetic underflow.</source>
            <target state="new">The scaled version of the error function can be used to avoid arithmetic underflow.</target>
          </trans-unit>
        </group>
        <group id="206">
          <trans-unit id="240" translate="yes" xml:space="preserve">
            <source>ErfInverse</source>
            <target state="new">ErfInverse</target>
          </trans-unit>
        </group>
        <group id="207">
          <trans-unit id="241" translate="yes" xml:space="preserve">
            <source>Returns the value of the inverse erf function.</source>
            <target state="new">Returns the value of the inverse erf function.</target>
          </trans-unit>
        </group>
        <group id="208">
          <trans-unit id="242" translate="yes" xml:space="preserve">
            <source>ExponentialIntegralEin</source>
            <target state="new">ExponentialIntegralEin</target>
          </trans-unit>
        </group>
        <group id="209">
          <trans-unit id="243" translate="yes" xml:space="preserve">
            <source>Returns the value of the exponential integral <ph id="1">&lt;math&gt;Ei&lt;/math&gt;</ph>.</source>
            <target state="new">Returns the value of the exponential integral <ph id="1">&lt;math&gt;Ei&lt;/math&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="210">
          <trans-unit id="244" translate="yes" xml:space="preserve">
            <source>Gamma</source>
            <target state="new">Gamma</target>
          </trans-unit>
        </group>
        <group id="211">
          <trans-unit id="245" translate="yes" xml:space="preserve">
            <source>Returns the value of the gamma function.</source>
            <target state="new">Returns the value of the gamma function.</target>
          </trans-unit>
        </group>
        <group id="212">
          <trans-unit id="246" translate="yes" xml:space="preserve">
            <source>GammaLn</source>
            <target state="new">GammaLn</target>
          </trans-unit>
        </group>
        <group id="213">
          <trans-unit id="247" translate="yes" xml:space="preserve">
            <source>Returns the natural logarithm of the gamma function.</source>
            <target state="new">Returns the natural logarithm of the gamma function.</target>
          </trans-unit>
        </group>
        <group id="214">
          <trans-unit id="248" translate="yes" xml:space="preserve">
            <source>GammaRegularizedP</source>
            <target state="new">GammaRegularizedP</target>
          </trans-unit>
        </group>
        <group id="215">
          <trans-unit id="249" translate="yes" xml:space="preserve">
            <source>Returns the value of the regularized incomplete gamma function.</source>
            <target state="new">Returns the value of the regularized incomplete gamma function.</target>
          </trans-unit>
        </group>
        <group id="216">
          <trans-unit id="250" translate="yes" xml:space="preserve">
            <source>Specify a constant or column of values to apply as an argument.</source>
            <target state="new">Specify a constant or column of values to apply as an argument.</target>
          </trans-unit>
        </group>
        <group id="217">
          <trans-unit id="251" translate="yes" xml:space="preserve">
            <source>GammaRegularizedPInverse</source>
            <target state="new">GammaRegularizedPInverse</target>
          </trans-unit>
        </group>
        <group id="218">
          <trans-unit id="252" translate="yes" xml:space="preserve">
            <source>Returns the value of the inverse regularized incomplete gamma function.</source>
            <target state="new">Returns the value of the inverse regularized incomplete gamma function.</target>
          </trans-unit>
        </group>
        <group id="219">
          <trans-unit id="253" translate="yes" xml:space="preserve">
            <source>Specify a constant or column of values to apply as an argument.</source>
            <target state="new">Specify a constant or column of values to apply as an argument.</target>
          </trans-unit>
        </group>
        <group id="220">
          <trans-unit id="254" translate="yes" xml:space="preserve">
            <source>GammaRegularizedQ</source>
            <target state="new">GammaRegularizedQ</target>
          </trans-unit>
        </group>
        <group id="221">
          <trans-unit id="255" translate="yes" xml:space="preserve">
            <source>Returns the value of the regularized incomplete gamma function.</source>
            <target state="new">Returns the value of the regularized incomplete gamma function.</target>
          </trans-unit>
        </group>
        <group id="222">
          <trans-unit id="256" translate="yes" xml:space="preserve">
            <source>Specify a constant or column of values to apply as an argument.</source>
            <target state="new">Specify a constant or column of values to apply as an argument.</target>
          </trans-unit>
        </group>
        <group id="223">
          <trans-unit id="257" translate="yes" xml:space="preserve">
            <source>GammaRegularizedQInverse</source>
            <target state="new">GammaRegularizedQInverse</target>
          </trans-unit>
        </group>
        <group id="224">
          <trans-unit id="258" translate="yes" xml:space="preserve">
            <source>Returns the value of the inverse generalized regularized incomplete gamma function.</source>
            <target state="new">Returns the value of the inverse generalized regularized incomplete gamma function.</target>
          </trans-unit>
        </group>
        <group id="225">
          <trans-unit id="259" translate="yes" xml:space="preserve">
            <source>Specify a constant or column of values to apply as an argument.</source>
            <target state="new">Specify a constant or column of values to apply as an argument.</target>
          </trans-unit>
        </group>
        <group id="226">
          <trans-unit id="260" translate="yes" xml:space="preserve">
            <source>PolyGamma</source>
            <target state="new">PolyGamma</target>
          </trans-unit>
        </group>
        <group id="227">
          <trans-unit id="261" translate="yes" xml:space="preserve">
            <source>Returns the value of the polygamma function.</source>
            <target state="new">Returns the value of the polygamma function.</target>
          </trans-unit>
        </group>
        <group id="228">
          <trans-unit id="262" translate="yes" xml:space="preserve">
            <source>Specify a constant or column of values to apply as an argument.</source>
            <target state="new">Specify a constant or column of values to apply as an argument.</target>
          </trans-unit>
        </group>
        <group id="229">
          <trans-unit id="263" translate="yes" xml:space="preserve">
            <source>Trigonometric</source>
            <target state="new">Trigonometric</target>
          </trans-unit>
        </group>
        <group id="230">
          <trans-unit id="264" translate="yes" xml:space="preserve">
            <source>Azure Machine Learning Studio provides the following trigonometric functions.</source>
            <target state="new">Azure Machine Learning Studio provides the following trigonometric functions.</target>
          </trans-unit>
        </group>
        <group id="231">
          <trans-unit id="265" translate="yes" xml:space="preserve">
            <source>All trigonometric functions are unary and require no additional arguments.</source>
            <target state="new">All trigonometric functions are unary and require no additional arguments.</target>
          </trans-unit>
        </group>
        <group id="232">
          <trans-unit id="266" translate="yes" xml:space="preserve">
            <source>Asech</source>
            <target state="new">Asech</target>
          </trans-unit>
        </group>
        <group id="233">
          <trans-unit id="267" translate="yes" xml:space="preserve">
            <source>Calculates the arcsecant of the argument.</source>
            <target state="new">Calculates the arcsecant of the argument.</target>
          </trans-unit>
        </group>
        <group id="234">
          <trans-unit id="268" translate="yes" xml:space="preserve">
            <source>Asin</source>
            <target state="new">Asin</target>
          </trans-unit>
        </group>
        <group id="235">
          <trans-unit id="269" translate="yes" xml:space="preserve">
            <source>Calculates the arcsecant of the argument.</source>
            <target state="new">Calculates the arcsecant of the argument.</target>
          </trans-unit>
        </group>
        <group id="236">
          <trans-unit id="270" translate="yes" xml:space="preserve">
            <source>AsinDegrees</source>
            <target state="new">AsinDegrees</target>
          </trans-unit>
        </group>
        <group id="237">
          <trans-unit id="271" translate="yes" xml:space="preserve">
            <source>Calculates the arcsine in degrees of the argument.</source>
            <target state="new">Calculates the arcsine in degrees of the argument.</target>
          </trans-unit>
        </group>
        <group id="238">
          <trans-unit id="272" translate="yes" xml:space="preserve">
            <source>Asinh</source>
            <target state="new">Asinh</target>
          </trans-unit>
        </group>
        <group id="239">
          <trans-unit id="273" translate="yes" xml:space="preserve">
            <source>Calculates the arcsine in degrees for the argument.</source>
            <target state="new">Calculates the arcsine in degrees for the argument.</target>
          </trans-unit>
        </group>
        <group id="240">
          <trans-unit id="274" translate="yes" xml:space="preserve">
            <source>Atan</source>
            <target state="new">Atan</target>
          </trans-unit>
        </group>
        <group id="241">
          <trans-unit id="275" translate="yes" xml:space="preserve">
            <source>Calculates the arctangent of the argument.</source>
            <target state="new">Calculates the arctangent of the argument.</target>
          </trans-unit>
        </group>
        <group id="242">
          <trans-unit id="276" translate="yes" xml:space="preserve">
            <source>AtanDegrees</source>
            <target state="new">AtanDegrees</target>
          </trans-unit>
        </group>
        <group id="243">
          <trans-unit id="277" translate="yes" xml:space="preserve">
            <source>Calculates the arctangent in degrees of the argument.</source>
            <target state="new">Calculates the arctangent in degrees of the argument.</target>
          </trans-unit>
        </group>
        <group id="244">
          <trans-unit id="278" translate="yes" xml:space="preserve">
            <source>Atanh</source>
            <target state="new">Atanh</target>
          </trans-unit>
        </group>
        <group id="245">
          <trans-unit id="279" translate="yes" xml:space="preserve">
            <source>Calculates the hyperbolic arctangent of the argument.</source>
            <target state="new">Calculates the hyperbolic arctangent of the argument.</target>
          </trans-unit>
        </group>
        <group id="246">
          <trans-unit id="280" translate="yes" xml:space="preserve">
            <source>Cis</source>
            <target state="new">Cis</target>
          </trans-unit>
        </group>
        <group id="247">
          <trans-unit id="281" translate="yes" xml:space="preserve">
            <source>Returns the lesser of two numbers.</source>
            <target state="new">Returns the lesser of two numbers.</target>
          </trans-unit>
        </group>
        <group id="248">
          <trans-unit id="282" translate="yes" xml:space="preserve">
            <source>Cos</source>
            <target state="new">Cos</target>
          </trans-unit>
        </group>
        <group id="249">
          <trans-unit id="283" translate="yes" xml:space="preserve">
            <source>Calculates the cosine of the argument.</source>
            <target state="new">Calculates the cosine of the argument.</target>
          </trans-unit>
        </group>
        <group id="250">
          <trans-unit id="284" translate="yes" xml:space="preserve">
            <source>CosDegrees</source>
            <target state="new">CosDegrees</target>
          </trans-unit>
        </group>
        <group id="251">
          <trans-unit id="285" translate="yes" xml:space="preserve">
            <source>Calculates the cosine in degrees for the argument.</source>
            <target state="new">Calculates the cosine in degrees for the argument.</target>
          </trans-unit>
        </group>
        <group id="252">
          <trans-unit id="286" translate="yes" xml:space="preserve">
            <source>Coth</source>
            <target state="new">Coth</target>
          </trans-unit>
        </group>
        <group id="253">
          <trans-unit id="287" translate="yes" xml:space="preserve">
            <source>Calculates the hyperbolic cotangent for the argument.</source>
            <target state="new">Calculates the hyperbolic cotangent for the argument.</target>
          </trans-unit>
        </group>
        <group id="254">
          <trans-unit id="288" translate="yes" xml:space="preserve">
            <source>Csc</source>
            <target state="new">Csc</target>
          </trans-unit>
        </group>
        <group id="255">
          <trans-unit id="289" translate="yes" xml:space="preserve">
            <source>Calculates the cosecant for the argument.</source>
            <target state="new">Calculates the cosecant for the argument.</target>
          </trans-unit>
        </group>
        <group id="256">
          <trans-unit id="290" translate="yes" xml:space="preserve">
            <source>CscDegrees</source>
            <target state="new">CscDegrees</target>
          </trans-unit>
        </group>
        <group id="257">
          <trans-unit id="291" translate="yes" xml:space="preserve">
            <source>Calculates the cosecant in degrees for the argument.</source>
            <target state="new">Calculates the cosecant in degrees for the argument.</target>
          </trans-unit>
        </group>
        <group id="258">
          <trans-unit id="292" translate="yes" xml:space="preserve">
            <source>Csch</source>
            <target state="new">Csch</target>
          </trans-unit>
        </group>
        <group id="259">
          <trans-unit id="293" translate="yes" xml:space="preserve">
            <source>Calculates the hyperbolic cosecant for the argument.</source>
            <target state="new">Calculates the hyperbolic cosecant for the argument.</target>
          </trans-unit>
        </group>
        <group id="260">
          <trans-unit id="294" translate="yes" xml:space="preserve">
            <source>DegreestoRadians</source>
            <target state="new">DegreestoRadians</target>
          </trans-unit>
        </group>
        <group id="261">
          <trans-unit id="295" translate="yes" xml:space="preserve">
            <source>Converts degrees to radians.</source>
            <target state="new">Converts degrees to radians.</target>
          </trans-unit>
        </group>
        <group id="262">
          <trans-unit id="296" translate="yes" xml:space="preserve">
            <source>Sec</source>
            <target state="new">Sec</target>
          </trans-unit>
        </group>
        <group id="263">
          <trans-unit id="297" translate="yes" xml:space="preserve">
            <source>Calculates the secant of the argument.</source>
            <target state="new">Calculates the secant of the argument.</target>
          </trans-unit>
        </group>
        <group id="264">
          <trans-unit id="298" translate="yes" xml:space="preserve">
            <source>SecDegrees</source>
            <target state="new">SecDegrees</target>
          </trans-unit>
        </group>
        <group id="265">
          <trans-unit id="299" translate="yes" xml:space="preserve">
            <source>Calculates the secant in degrees for the argument.</source>
            <target state="new">Calculates the secant in degrees for the argument.</target>
          </trans-unit>
        </group>
        <group id="266">
          <trans-unit id="300" translate="yes" xml:space="preserve">
            <source>Sech</source>
            <target state="new">Sech</target>
          </trans-unit>
        </group>
        <group id="267">
          <trans-unit id="301" translate="yes" xml:space="preserve">
            <source>Calculates the hyperbolic secant of the argument.</source>
            <target state="new">Calculates the hyperbolic secant of the argument.</target>
          </trans-unit>
        </group>
        <group id="268">
          <trans-unit id="302" translate="yes" xml:space="preserve">
            <source>Sign</source>
            <target state="new">Sign</target>
          </trans-unit>
        </group>
        <group id="269">
          <trans-unit id="303" translate="yes" xml:space="preserve">
            <source>Returns the sign of the value.</source>
            <target state="new">Returns the sign of the value.</target>
          </trans-unit>
        </group>
        <group id="270">
          <trans-unit id="304" translate="yes" xml:space="preserve">
            <source>Sin</source>
            <target state="new">Sin</target>
          </trans-unit>
        </group>
        <group id="271">
          <trans-unit id="305" translate="yes" xml:space="preserve">
            <source>Calculates the sine of the argument.</source>
            <target state="new">Calculates the sine of the argument.</target>
          </trans-unit>
        </group>
        <group id="272">
          <trans-unit id="306" translate="yes" xml:space="preserve">
            <source>Sinc</source>
            <target state="new">Sinc</target>
          </trans-unit>
        </group>
        <group id="273">
          <trans-unit id="307" translate="yes" xml:space="preserve">
            <source>Calculates the sine-cosine value of the argument.</source>
            <target state="new">Calculates the sine-cosine value of the argument.</target>
          </trans-unit>
        </group>
        <group id="274">
          <trans-unit id="308" translate="yes" xml:space="preserve">
            <source>SinDegrees</source>
            <target state="new">SinDegrees</target>
          </trans-unit>
        </group>
        <group id="275">
          <trans-unit id="309" translate="yes" xml:space="preserve">
            <source>Calculates the sine in degrees for the argument.</source>
            <target state="new">Calculates the sine in degrees for the argument.</target>
          </trans-unit>
        </group>
        <group id="276">
          <trans-unit id="310" translate="yes" xml:space="preserve">
            <source>Sinh</source>
            <target state="new">Sinh</target>
          </trans-unit>
        </group>
        <group id="277">
          <trans-unit id="311" translate="yes" xml:space="preserve">
            <source>Calculates the hyperbolic sine of the argument.</source>
            <target state="new">Calculates the hyperbolic sine of the argument.</target>
          </trans-unit>
        </group>
        <group id="278">
          <trans-unit id="312" translate="yes" xml:space="preserve">
            <source>Tan</source>
            <target state="new">Tan</target>
          </trans-unit>
        </group>
        <group id="279">
          <trans-unit id="313" translate="yes" xml:space="preserve">
            <source>Calculates the tangent of the argument.</source>
            <target state="new">Calculates the tangent of the argument.</target>
          </trans-unit>
        </group>
        <group id="280">
          <trans-unit id="314" translate="yes" xml:space="preserve">
            <source>TanDegrees</source>
            <target state="new">TanDegrees</target>
          </trans-unit>
        </group>
        <group id="281">
          <trans-unit id="315" translate="yes" xml:space="preserve">
            <source>Calculates the tangent in degrees for the argument.</source>
            <target state="new">Calculates the tangent in degrees for the argument.</target>
          </trans-unit>
        </group>
        <group id="282">
          <trans-unit id="316" translate="yes" xml:space="preserve">
            <source>Tanh</source>
            <target state="new">Tanh</target>
          </trans-unit>
        </group>
        <group id="283">
          <trans-unit id="317" translate="yes" xml:space="preserve">
            <source>Calculates the hyperbolic tangent of the argument.</source>
            <target state="new">Calculates the hyperbolic tangent of the argument.</target>
          </trans-unit>
        </group>
        <group id="284">
          <trans-unit id="318" translate="yes" xml:space="preserve">
            <source>Technical Notes</source>
            <target state="new">Technical Notes</target>
          </trans-unit>
        </group>
        <group id="285">
          <trans-unit id="319" translate="yes" xml:space="preserve">
            <source> Unary vs. Binary Operations</source>
            <target state="new"> Unary vs. Binary Operations</target>
          </trans-unit>
        </group>
        <group id="286">
          <trans-unit id="320" translate="yes" xml:space="preserve">
            <source>The math functions in <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept> can be classified as either unary or binary operations:</source>
            <target state="new">The math functions in <bpt id="1">&lt;ui&gt;</bpt>Apply Math Operation<ept id="1">&lt;/ui&gt;</ept> can be classified as either unary or binary operations:</target>
          </trans-unit>
        </group>
        <group id="287">
          <trans-unit id="321" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Unary operations<ept id="1">&lt;/embeddedLabel&gt;</ept>: You modify the values in a single column without referring to other columns or constants.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Unary operations<ept id="1">&lt;/embeddedLabel&gt;</ept>: You modify the values in a single column without referring to other columns or constants.</target>
          </trans-unit>
        </group>
        <group id="288">
          <trans-unit id="322" translate="yes" xml:space="preserve">
            <source>For example, you might truncate the column’s values to a certain degree of precision, round values up or down, or find ceiling or floor values.</source>
            <target state="new">For example, you might truncate the column’s values to a certain degree of precision, round values up or down, or find ceiling or floor values.</target>
          </trans-unit>
        </group>
        <group id="289">
          <trans-unit id="323" translate="yes" xml:space="preserve">
            <source>An example of a unary operation is <ph id="1">&lt;codeInline&gt;Abs(X)&lt;/codeInline&gt;</ph>, where X is the column that is provided as input.</source>
            <target state="new">An example of a unary operation is <ph id="1">&lt;codeInline&gt;Abs(X)&lt;/codeInline&gt;</ph>, where X is the column that is provided as input.</target>
          </trans-unit>
        </group>
        <group id="290">
          <trans-unit id="324" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Binary operations<ept id="1">&lt;/embeddedLabel&gt;</ept>: You choose two pairs of values or columns, and the result is computed for each row in the column.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Binary operations<ept id="1">&lt;/embeddedLabel&gt;</ept>: You choose two pairs of values or columns, and the result is computed for each row in the column.</target>
          </trans-unit>
        </group>
        <group id="291">
          <trans-unit id="325" translate="yes" xml:space="preserve">
            <source>An example of a binary operation that uses two columns is <ph id="1">&lt;codeInline&gt;Subtract(X,Y)&lt;/codeInline&gt;</ph>, in which X is the first column you select, and Y is the second column.</source>
            <target state="new">An example of a binary operation that uses two columns is <ph id="1">&lt;codeInline&gt;Subtract(X,Y)&lt;/codeInline&gt;</ph>, in which X is the first column you select, and Y is the second column.</target>
          </trans-unit>
        </group>
        <group id="292">
          <trans-unit id="326" translate="yes" xml:space="preserve">
            <source>An example of using a binary operation that combines a column and a constant might be <ph id="1">&lt;codeInline&gt;Subtract(X,mean)&lt;/codeInline&gt;</ph>, where you type the column mean as a constant and subtract it from each value in column X. </source>
            <target state="new">An example of using a binary operation that combines a column and a constant might be <ph id="1">&lt;codeInline&gt;Subtract(X,mean)&lt;/codeInline&gt;</ph>, where you type the column mean as a constant and subtract it from each value in column X. </target>
          </trans-unit>
        </group>
        <group id="293">
          <trans-unit id="327" translate="yes" xml:space="preserve">
            <source>Categorical Columns</source>
            <target state="new">Categorical Columns</target>
          </trans-unit>
        </group>
        <group id="294">
          <trans-unit id="328" translate="yes" xml:space="preserve">
            <source>For categorical columns, a unary operation is applied not only to column data, but also to categorical data values.</source>
            <target state="new">For categorical columns, a unary operation is applied not only to column data, but also to categorical data values.</target>
          </trans-unit>
        </group>
        <group id="295">
          <trans-unit id="329" translate="yes" xml:space="preserve">
            <source>If a unary operation is applied to a categorical column, different categorical data values of input column can be transformed to equal associated categorical data values of the output column.</source>
            <target state="new">If a unary operation is applied to a categorical column, different categorical data values of input column can be transformed to equal associated categorical data values of the output column.</target>
          </trans-unit>
        </group>
        <group id="296">
          <trans-unit id="330" translate="yes" xml:space="preserve">
            <source>In this case, the values are merged and the number of categorical data values in the output becomes less than the number in the input.</source>
            <target state="new">In this case, the values are merged and the number of categorical data values in the output becomes less than the number in the input.</target>
          </trans-unit>
        </group>
        <group id="297">
          <trans-unit id="331" translate="yes" xml:space="preserve">
            <source>If a binary operation is applied to a categorical column and some other column, the behavior of the module is as follows:</source>
            <target state="new">If a binary operation is applied to a categorical column and some other column, the behavior of the module is as follows:</target>
          </trans-unit>
        </group>
        <group id="298">
          <trans-unit id="332" translate="yes" xml:space="preserve">
            <source>If the other column is dense, the output column is categorical.</source>
            <target state="new">If the other column is dense, the output column is categorical.</target>
          </trans-unit>
        </group>
        <group id="299">
          <trans-unit id="333" translate="yes" xml:space="preserve">
            <source>Categorical data values presented in the input are lost.</source>
            <target state="new">Categorical data values presented in the input are lost.</target>
          </trans-unit>
        </group>
        <group id="300">
          <trans-unit id="334" translate="yes" xml:space="preserve">
            <source>The output column has only those values that are present in the output column data.</source>
            <target state="new">The output column has only those values that are present in the output column data.</target>
          </trans-unit>
        </group>
        <group id="301">
          <trans-unit id="335" translate="yes" xml:space="preserve">
            <source>If the other column is sparse, the output column is sparse.</source>
            <target state="new">If the other column is sparse, the output column is sparse.</target>
          </trans-unit>
        </group>
        <group id="302">
          <trans-unit id="336" translate="yes" xml:space="preserve">
            <source>If both arguments of a binary operation are sparse columns, the resulting column contains background zeros in all positions where both input columns contained background zeros.</source>
            <target state="new">If both arguments of a binary operation are sparse columns, the resulting column contains background zeros in all positions where both input columns contained background zeros.</target>
          </trans-unit>
        </group>
        <group id="303">
          <trans-unit id="337" translate="yes" xml:space="preserve">
            <source>Sparse Columns</source>
            <target state="new">Sparse Columns</target>
          </trans-unit>
        </group>
        <group id="304">
          <trans-unit id="338" translate="yes" xml:space="preserve">
            <source>In sparse columns, all elements that correspond to background zeros are not processed in unary operations.</source>
            <target state="new">In sparse columns, all elements that correspond to background zeros are not processed in unary operations.</target>
          </trans-unit>
        </group>
        <group id="305">
          <trans-unit id="339" translate="yes" xml:space="preserve">
            <source>If one argument of a binary operation is a sparse column and the other argument is a dense one, the resulting column is sparse with all background zeros propagated from input from the sparse column.</source>
            <target state="new">If one argument of a binary operation is a sparse column and the other argument is a dense one, the resulting column is sparse with all background zeros propagated from input from the sparse column.</target>
          </trans-unit>
        </group>
        <group id="306">
          <trans-unit id="340" translate="yes" xml:space="preserve">
            <source>Expected Inputs</source>
            <target state="new">Expected Inputs</target>
          </trans-unit>
        </group>
        <group id="307">
          <trans-unit id="341" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="308">
          <trans-unit id="342" translate="yes" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
        </group>
        <group id="309">
          <trans-unit id="343" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="310">
          <trans-unit id="344" translate="yes" xml:space="preserve">
            <source>Dataset</source>
            <target state="new">Dataset</target>
          </trans-unit>
        </group>
        <group id="311">
          <trans-unit id="345" translate="yes" xml:space="preserve">
            <source>Input dataset</source>
            <target state="new">Input dataset</target>
          </trans-unit>
        </group>
        <group id="312">
          <trans-unit id="346" translate="yes" xml:space="preserve">
            <source>Outputs</source>
            <target state="new">Outputs</target>
          </trans-unit>
        </group>
        <group id="313">
          <trans-unit id="347" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="314">
          <trans-unit id="348" translate="yes" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
        </group>
        <group id="315">
          <trans-unit id="349" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="316">
          <trans-unit id="350" translate="yes" xml:space="preserve">
            <source>Results dataset</source>
            <target state="new">Results dataset</target>
          </trans-unit>
        </group>
        <group id="317">
          <trans-unit id="351" translate="yes" xml:space="preserve">
            <source>Results dataset</source>
            <target state="new">Results dataset</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>