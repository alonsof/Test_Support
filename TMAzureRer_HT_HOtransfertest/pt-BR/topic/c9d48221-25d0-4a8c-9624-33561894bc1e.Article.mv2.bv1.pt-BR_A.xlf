<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="pt-BR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAAdjUEKwyAQAL/iA1xwdTVujz31XPqBVVcIpElJLOT5Db3MZQam96CFfAVVIiDsDorLBapDScwdRdgaj2XCogEwTv2qWgBuF4rWlnzUGtNkTeVG2XsEH5sDklyBkycIISbMTKWiWoPWfAbcn9acy9y7nuO2b9u4Jn/3+L5lfe2yHouMeVt/4WSGlaEAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>WHERE</source>
            <target state="new">WHERE</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>WHERE (Azure Stream Analytics)</source>
            <target state="new">WHERE (Azure Stream Analytics)</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Specifies the search condition for the rows returned by the query.</source>
            <target state="new">Specifies the search condition for the rows returned by the query.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Syntax</source>
            <target state="new">Syntax</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Arguments</source>
            <target state="new">Arguments</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>&lt; search_condition &gt; </source>
            <target state="new">&lt; search_condition &gt; </target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Specifies the conditions for the rows returned in the result set for a SELECT statement, query expression, or subquery.</source>
            <target state="new">Specifies the conditions for the rows returned in the result set for a SELECT statement, query expression, or subquery.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>There is no limit to the number of predicates that can be included in a search condition.</source>
            <target state="new">There is no limit to the number of predicates that can be included in a search condition.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>NOT</source>
            <target state="new">NOT</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Negates the Boolean expression specified by the predicate.</source>
            <target state="new">Negates the Boolean expression specified by the predicate.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>AND </source>
            <target state="new">AND </target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Combines two conditions and evaluates to TRUE when both of the conditions are TRUE.</source>
            <target state="new">Combines two conditions and evaluates to TRUE when both of the conditions are TRUE.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>OR</source>
            <target state="new">OR</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Combines two conditions and evaluates to TRUE when either condition is TRUE.</source>
            <target state="new">Combines two conditions and evaluates to TRUE when either condition is TRUE.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>&lt; predicate &gt; </source>
            <target state="new">&lt; predicate &gt; </target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Is an expression that returns TRUE or FALSE.</source>
            <target state="new">Is an expression that returns TRUE or FALSE.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>expression </source>
            <target state="new">expression </target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Is a column name, a constant, a function, a variable, a scalar subquery, or any combination of column names, constants, and functions connected by an operator or operators, or a subquery.</source>
            <target state="new">Is a column name, a constant, a function, a variable, a scalar subquery, or any combination of column names, constants, and functions connected by an operator or operators, or a subquery.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>The expression can also contain the CASE expression.</source>
            <target state="new">The expression can also contain the CASE expression.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>=</source>
            <target state="new">=</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Is the operator used to test the equality between two expressions.</source>
            <target state="new">Is the operator used to test the equality between two expressions.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>&lt;&gt;</source>
            <target state="new">&lt;&gt;</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Is the operator used to test the condition of two expressions not being equal to each other.</source>
            <target state="new">Is the operator used to test the condition of two expressions not being equal to each other.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>!=</source>
            <target state="new">!=</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Is the operator used to test the condition of two expressions not being equal to each other.</source>
            <target state="new">Is the operator used to test the condition of two expressions not being equal to each other.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>&gt;</source>
            <target state="new">&gt;</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Is the operator used to test the condition of one expression being greater than the other.</source>
            <target state="new">Is the operator used to test the condition of one expression being greater than the other.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>&gt;=</source>
            <target state="new">&gt;=</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Is the operator used to test the condition of one expression being greater than or equal to the other expression.</source>
            <target state="new">Is the operator used to test the condition of one expression being greater than or equal to the other expression.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>!&gt;</source>
            <target state="new">!&gt;</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Is the operator used to test the condition of one expression not being greater than the other expression.</source>
            <target state="new">Is the operator used to test the condition of one expression not being greater than the other expression.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>&lt;</source>
            <target state="new">&lt;</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Is the operator used to test the condition of one expression being less than the other.</source>
            <target state="new">Is the operator used to test the condition of one expression being less than the other.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>&lt;=</source>
            <target state="new">&lt;=</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Is the operator used to test the condition of one expression being less than or equal to the other expression.</source>
            <target state="new">Is the operator used to test the condition of one expression being less than or equal to the other expression.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>!&lt;</source>
            <target state="new">!&lt;</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Is the operator used to test the condition of one expression not being less than the other expression.</source>
            <target state="new">Is the operator used to test the condition of one expression not being less than the other expression.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>String_expression</source>
            <target state="new">String_expression</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Is a string of characters and wildcard characters.</source>
            <target state="new">Is a string of characters and wildcard characters.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>[NOT] LIKE</source>
            <target state="new">[NOT] LIKE</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Indicates that the subsequent character string is to be used with pattern matching.</source>
            <target state="new">Indicates that the subsequent character string is to be used with pattern matching.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>[NOT] BETWEEN</source>
            <target state="new">[NOT] BETWEEN</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Specifies an inclusive range of values.</source>
            <target state="new">Specifies an inclusive range of values.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Use AND to separate the starting and ending values.</source>
            <target state="new">Use AND to separate the starting and ending values.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>[NOT] NULL</source>
            <target state="new">[NOT] NULL</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Specifies a search for null values, or for values that are not null, depending on the keywords used.</source>
            <target state="new">Specifies a search for null values, or for values that are not null, depending on the keywords used.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>