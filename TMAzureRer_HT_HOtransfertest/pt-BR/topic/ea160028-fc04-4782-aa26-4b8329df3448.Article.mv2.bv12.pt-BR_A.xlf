<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="pt-BR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANjUEOwyAMBL/CA7CEwTi4x556rvoBk2ApUppUKZXy/HLY04xmzVKrFGdojQgILUANpcIcUFnEUFW8i6WhZWZYUmYg0Qyik0HBhIm5oSzsXVPkEGIBm8NoTSWCahx+LSnKYomoeIfefTrcn95d22rWrn47j6OPk8HGHr+37q9T9++mfT32P2e4FD6iAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Policy expressions</source>
            <target state="new">Policy expressions</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>API Management policy expressions</source>
            <target state="new">API Management policy expressions</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Policy expressions  syntax is C# 6.0.</source>
            <target state="new">Policy expressions  syntax is C# 6.0.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Each expression has access to the implicitly provided <bpt id="1">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#ContextVariables" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>context<ept id="1">&lt;/legacyLink&gt;</ept> variable and an allowed <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#CLRTypes" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>subset<ept id="2">&lt;/legacyLink&gt;</ept> of .NET Framework types.</source>
            <target state="new">Each expression has access to the implicitly provided <bpt id="1">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#ContextVariables" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>context<ept id="1">&lt;/legacyLink&gt;</ept> variable and an allowed <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#CLRTypes" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>subset<ept id="2">&lt;/legacyLink&gt;</ept> of .NET Framework types.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> policy expressions, see the <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>Policy Expressions<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;https://azure.microsoft.com/documentation/videos/policy-expressions-in-azure-api-management/&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept> video.</source>
            <target state="new"><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> policy expressions, see the <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>Policy Expressions<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;https://azure.microsoft.com/documentation/videos/policy-expressions-in-azure-api-management/&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept> video.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>For demonstrations of configuring policies using policy expressions, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Cloud Cover Episode 177: More API Management Features with Vlad Vinogradsky<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://azure.microsoft.com/documentation/videos/episode-177-more-api-management-features-with-vlad-vinogradsky/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">For demonstrations of configuring policies using policy expressions, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Cloud Cover Episode 177: More API Management Features with Vlad Vinogradsky<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://azure.microsoft.com/documentation/videos/episode-177-more-api-management-features-with-vlad-vinogradsky/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>This video contains the following policy expression demonstrations.</source>
            <target state="new">This video contains the following policy expression demonstrations.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>10:30 - See how to apply policy at the API level to supply context information to the backend service using the <ph id="1">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#SetQueryStringParameter" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set query string parameter&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#SetHTTPheader" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set HTTP header&lt;/link&gt;</ph> policies.</source>
            <target state="new">10:30 - See how to apply policy at the API level to supply context information to the backend service using the <ph id="1">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#SetQueryStringParameter" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set query string parameter&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#SetHTTPheader" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set HTTP header&lt;/link&gt;</ph> policies.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>At 12:10 there is a demo of calling an operation in the developer portal where you can see these policies at work.</source>
            <target state="new">At 12:10 there is a demo of calling an operation in the developer portal where you can see these policies at work.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>13:50 - See how to use the <ph id="1">&lt;link xlink:href="034febe3-465f-4840-9fc6-c448ef520b0f#ValidateJWT" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Validate JWT&lt;/link&gt;</ph> policy to pre-authorize access to operations based on token claims.</source>
            <target state="new">13:50 - See how to use the <ph id="1">&lt;link xlink:href="034febe3-465f-4840-9fc6-c448ef520b0f#ValidateJWT" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Validate JWT&lt;/link&gt;</ph> policy to pre-authorize access to operations based on token claims.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Fast forward to 15:00 to see the policies configured in the policy editor and then to 18:50 for a demonstration of calling an operation from the developer portal both with and without the required authorization token.</source>
            <target state="new">Fast forward to 15:00 to see the policies configured in the policy editor and then to 18:50 for a demonstration of calling an operation from the developer portal both with and without the required authorization token.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>21:00 - See how to use an <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>API Inspector<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://azure.microsoft.com/documentation/articles/api-management-howto-api-inspector/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> trace to see how policies are evaluated and the results of the evaluations.</source>
            <target state="new">21:00 - See how to use an <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>API Inspector<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://azure.microsoft.com/documentation/articles/api-management-howto-api-inspector/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> trace to see how policies are evaluated and the results of the evaluations.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>25:25 - See how to use policy expressions with the <ph id="1">&lt;link xlink:href="8147199c-24d8-439f-b2a9-da28a70a890c#GetFromCache" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get from cache&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="8147199c-24d8-439f-b2a9-da28a70a890c#StoreToCache" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Store to cache&lt;/link&gt;</ph> policies to configure API Management response caching duration that matches the response caching of the backend service as specified by the backed service's <ph id="3">&lt;codeInline&gt;Cache-Control&lt;/codeInline&gt;</ph> directive.</source>
            <target state="new">25:25 - See how to use policy expressions with the <ph id="1">&lt;link xlink:href="8147199c-24d8-439f-b2a9-da28a70a890c#GetFromCache" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get from cache&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="8147199c-24d8-439f-b2a9-da28a70a890c#StoreToCache" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Store to cache&lt;/link&gt;</ph> policies to configure API Management response caching duration that matches the response caching of the backend service as specified by the backed service's <ph id="3">&lt;codeInline&gt;Cache-Control&lt;/codeInline&gt;</ph> directive.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>34:30 - See how to perform content filtering by removing data elements from the response received from the backend service using the <ph id="1">&lt;link xlink:href="8a13348b-7856-428f-8e35-9e4273d94323#choose" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Control flow&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#SetBody" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set body&lt;/link&gt;</ph> policies.</source>
            <target state="new">34:30 - See how to perform content filtering by removing data elements from the response received from the backend service using the <ph id="1">&lt;link xlink:href="8a13348b-7856-428f-8e35-9e4273d94323#choose" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Control flow&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#SetBody" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set body&lt;/link&gt;</ph> policies.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Start  at 31:50 to see an overview of <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>The Dark Sky Forecast API<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://developer.forecast.io/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> used for this demo.</source>
            <target state="new">Start  at 31:50 to see an overview of <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>The Dark Sky Forecast API<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://developer.forecast.io/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> used for this demo.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>To download the policy statements used in this video, see the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>api-management-samples/policies<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://github.com/Azure/api-management-samples/tree/master/policies&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> github repo.</source>
            <target state="new">To download the policy statements used in this video, see the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>api-management-samples/policies<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://github.com/Azure/api-management-samples/tree/master/policies&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> github repo.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>In this topic</source>
            <target state="new">In this topic</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Syntax</source>
            <target state="new">Syntax</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Single statement expressions are enclosed in <ph id="1">&lt;codeInline&gt;@(expression)&lt;/codeInline&gt;</ph>, where <ph id="2">&lt;codeInline&gt;expression&lt;/codeInline&gt;</ph> is a well-formed C# expression statement.</source>
            <target state="new">Single statement expressions are enclosed in <ph id="1">&lt;codeInline&gt;@(expression)&lt;/codeInline&gt;</ph>, where <ph id="2">&lt;codeInline&gt;expression&lt;/codeInline&gt;</ph> is a well-formed C# expression statement.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Multi-statement expressions are enclosed in <ph id="1">&lt;codeInline&gt;@{expression}&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Multi-statement expressions are enclosed in <ph id="1">&lt;codeInline&gt;@{expression}&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>All code paths within multi-statement expressions must end with a <ph id="1">&lt;codeInline&gt;return&lt;/codeInline&gt;</ph> statement.</source>
            <target state="new">All code paths within multi-statement expressions must end with a <ph id="1">&lt;codeInline&gt;return&lt;/codeInline&gt;</ph> statement.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Examples</source>
            <target state="new">Examples</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Usage</source>
            <target state="new">Usage</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Expressions can be used as attribute values or text values in any of the API Management <bpt id="1">&lt;legacyLink xlink:href="1cc460cb-8e67-41aa-bc76-bbafc1892798" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>policies<ept id="1">&lt;/legacyLink&gt;</ept>, unless the policy reference specifies otherwise.</source>
            <target state="new">Expressions can be used as attribute values or text values in any of the API Management <bpt id="1">&lt;legacyLink xlink:href="1cc460cb-8e67-41aa-bc76-bbafc1892798" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>policies<ept id="1">&lt;/legacyLink&gt;</ept>, unless the policy reference specifies otherwise.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Note that when you use policy expressions, there is only limited verification of the policy expressions when the policy is defined.</source>
            <target state="new">Note that when you use policy expressions, there is only limited verification of the policy expressions when the policy is defined.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Since the expressions are executed at run-time in the inbound or outbound pipeline by the proxy, any run-time exceptions generated by the policy expressions will result in a runtime error in the API call.</source>
            <target state="new">Since the expressions are executed at run-time in the inbound or outbound pipeline by the proxy, any run-time exceptions generated by the policy expressions will result in a runtime error in the API call.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>.NET Framework types allowed in policy expressions</source>
            <target state="new">.NET Framework types allowed in policy expressions</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>The following table lists the .NET Framework types and their members that are allowed in policy expressions.</source>
            <target state="new">The following table lists the .NET Framework types and their members that are allowed in policy expressions.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>CLR type</source>
            <target state="new">CLR type</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Supported methods</source>
            <target state="new">Supported methods</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Newtonsoft.Json.Linq.Extensions </source>
            <target state="new">Newtonsoft.Json.Linq.Extensions </target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Newtonsoft.Json.Linq.JArray </source>
            <target state="new">Newtonsoft.Json.Linq.JArray </target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Newtonsoft.Json.Linq.JConstructor </source>
            <target state="new">Newtonsoft.Json.Linq.JConstructor </target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Newtonsoft.Json.Linq.JContainer </source>
            <target state="new">Newtonsoft.Json.Linq.JContainer </target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Newtonsoft.Json.Linq.JObject </source>
            <target state="new">Newtonsoft.Json.Linq.JObject </target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Newtonsoft.Json.Linq.JProperty </source>
            <target state="new">Newtonsoft.Json.Linq.JProperty </target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Newtonsoft.Json.Linq.JRaw </source>
            <target state="new">Newtonsoft.Json.Linq.JRaw </target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Newtonsoft.Json.Linq.JToken </source>
            <target state="new">Newtonsoft.Json.Linq.JToken </target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Newtonsoft.Json.Linq.JTokenType </source>
            <target state="new">Newtonsoft.Json.Linq.JTokenType </target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>Newtonsoft.Json.Linq.JValue </source>
            <target state="new">Newtonsoft.Json.Linq.JValue </target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</source>
            <target state="new">System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,  TValue&gt;</source>
            <target state="new">System.Collections.Generic.IReadOnlyDictionary&lt;TKey,  TValue&gt;</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>System.Collections.Generic.ISet&lt;TKey, TValue&gt;</source>
            <target state="new">System.Collections.Generic.ISet&lt;TKey, TValue&gt;</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>System.Collections.Generic.KeyValuePair&lt;TKey,  TValue&gt;</source>
            <target state="new">System.Collections.Generic.KeyValuePair&lt;TKey,  TValue&gt;</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>Key, Value</source>
            <target state="new">Key, Value</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>System.Collections.Generic.List&lt;TKey, TValue&gt;</source>
            <target state="new">System.Collections.Generic.List&lt;TKey, TValue&gt;</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>System.Collections.Generic.Queue&lt;TKey, TValue&gt;</source>
            <target state="new">System.Collections.Generic.Queue&lt;TKey, TValue&gt;</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>System.Collections.Generic.Stack&lt;TKey, TValue&gt;</source>
            <target state="new">System.Collections.Generic.Stack&lt;TKey, TValue&gt;</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>System.Convert</source>
            <target state="new">System.Convert</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>System.DateTime</source>
            <target state="new">System.DateTime</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>System.DateTimeKind</source>
            <target state="new">System.DateTimeKind</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>Utc</source>
            <target state="new">Utc</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>System.DateTimeOffset</source>
            <target state="new">System.DateTimeOffset</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>System.Decimal</source>
            <target state="new">System.Decimal</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>System.Double</source>
            <target state="new">System.Double</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>System.Guid</source>
            <target state="new">System.Guid</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>System.IEnumerable&lt;T&gt;</source>
            <target state="new">System.IEnumerable&lt;T&gt;</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>System.IEnumerator&lt;T&gt;</source>
            <target state="new">System.IEnumerator&lt;T&gt;</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>System.Int16</source>
            <target state="new">System.Int16</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>System.Int32</source>
            <target state="new">System.Int32</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>System.Int64</source>
            <target state="new">System.Int64</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>System.Linq.Enumerable&lt;T&gt;</source>
            <target state="new">System.Linq.Enumerable&lt;T&gt;</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>System.Math</source>
            <target state="new">System.Math</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>System.MidpointRounding</source>
            <target state="new">System.MidpointRounding</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>System.Nullable&lt;T&gt;</source>
            <target state="new">System.Nullable&lt;T&gt;</target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>System.Random</source>
            <target state="new">System.Random</target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>System.SByte</source>
            <target state="new">System.SByte</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="94">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.</source>
            <target state="new">System.Security.Cryptography.</target>
          </trans-unit>
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>HMACSHA384</source>
            <target state="new">HMACSHA384</target>
          </trans-unit>
        </group>
        <group id="95">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="96">
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.</source>
            <target state="new">System.Security.Cryptography.</target>
          </trans-unit>
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>HMACSHA512</source>
            <target state="new">HMACSHA512</target>
          </trans-unit>
        </group>
        <group id="97">
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="98">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.HashAlgorithm</source>
            <target state="new">System.Security.Cryptography.HashAlgorithm</target>
          </trans-unit>
        </group>
        <group id="99">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="100">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.HMAC</source>
            <target state="new">System.Security.Cryptography.HMAC</target>
          </trans-unit>
        </group>
        <group id="101">
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="102">
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.HMACMD5</source>
            <target state="new">System.Security.Cryptography.HMACMD5</target>
          </trans-unit>
        </group>
        <group id="103">
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="104">
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.HMACSHA1</source>
            <target state="new">System.Security.Cryptography.HMACSHA1</target>
          </trans-unit>
        </group>
        <group id="105">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="106">
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.HMACSHA256</source>
            <target state="new">System.Security.Cryptography.HMACSHA256</target>
          </trans-unit>
        </group>
        <group id="107">
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="108">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.KeyedHashAlgorithm</source>
            <target state="new">System.Security.Cryptography.KeyedHashAlgorithm</target>
          </trans-unit>
        </group>
        <group id="109">
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="110">
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.MD5</source>
            <target state="new">System.Security.Cryptography.MD5</target>
          </trans-unit>
        </group>
        <group id="111">
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="112">
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.RNGCryptoServiceProvider</source>
            <target state="new">System.Security.Cryptography.RNGCryptoServiceProvider</target>
          </trans-unit>
        </group>
        <group id="113">
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="114">
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.SHA1</source>
            <target state="new">System.Security.Cryptography.SHA1</target>
          </trans-unit>
        </group>
        <group id="115">
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="116">
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.SHA1Managed</source>
            <target state="new">System.Security.Cryptography.SHA1Managed</target>
          </trans-unit>
        </group>
        <group id="117">
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="118">
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.SHA256</source>
            <target state="new">System.Security.Cryptography.SHA256</target>
          </trans-unit>
        </group>
        <group id="119">
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="120">
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.SHA256Managed</source>
            <target state="new">System.Security.Cryptography.SHA256Managed</target>
          </trans-unit>
        </group>
        <group id="121">
          <trans-unit id="130" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="122">
          <trans-unit id="131" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.SHA384</source>
            <target state="new">System.Security.Cryptography.SHA384</target>
          </trans-unit>
        </group>
        <group id="123">
          <trans-unit id="132" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="124">
          <trans-unit id="133" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.SHA384Managed</source>
            <target state="new">System.Security.Cryptography.SHA384Managed</target>
          </trans-unit>
        </group>
        <group id="125">
          <trans-unit id="134" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="126">
          <trans-unit id="135" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.SHA512</source>
            <target state="new">System.Security.Cryptography.SHA512</target>
          </trans-unit>
        </group>
        <group id="127">
          <trans-unit id="136" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="128">
          <trans-unit id="137" translate="yes" xml:space="preserve">
            <source>System.Security.Cryptography.SHA512Managed</source>
            <target state="new">System.Security.Cryptography.SHA512Managed</target>
          </trans-unit>
        </group>
        <group id="129">
          <trans-unit id="138" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="130">
          <trans-unit id="139" translate="yes" xml:space="preserve">
            <source>System.Single</source>
            <target state="new">System.Single</target>
          </trans-unit>
        </group>
        <group id="131">
          <trans-unit id="140" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="132">
          <trans-unit id="141" translate="yes" xml:space="preserve">
            <source>System.String</source>
            <target state="new">System.String</target>
          </trans-unit>
        </group>
        <group id="133">
          <trans-unit id="142" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="134">
          <trans-unit id="143" translate="yes" xml:space="preserve">
            <source>System.StringSplitOptions</source>
            <target state="new">System.StringSplitOptions</target>
          </trans-unit>
        </group>
        <group id="135">
          <trans-unit id="144" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="136">
          <trans-unit id="145" translate="yes" xml:space="preserve">
            <source>System.Text.Encoding</source>
            <target state="new">System.Text.Encoding</target>
          </trans-unit>
        </group>
        <group id="137">
          <trans-unit id="146" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="138">
          <trans-unit id="147" translate="yes" xml:space="preserve">
            <source>System.Text.RegularExpressions.Capture</source>
            <target state="new">System.Text.RegularExpressions.Capture</target>
          </trans-unit>
        </group>
        <group id="139">
          <trans-unit id="148" translate="yes" xml:space="preserve">
            <source>Index, Length, Value</source>
            <target state="new">Index, Length, Value</target>
          </trans-unit>
        </group>
        <group id="140">
          <trans-unit id="149" translate="yes" xml:space="preserve">
            <source>System.Text.RegularExpressions.CaptureCollection</source>
            <target state="new">System.Text.RegularExpressions.CaptureCollection</target>
          </trans-unit>
        </group>
        <group id="141">
          <trans-unit id="150" translate="yes" xml:space="preserve">
            <source>Count, Item</source>
            <target state="new">Count, Item</target>
          </trans-unit>
        </group>
        <group id="142">
          <trans-unit id="151" translate="yes" xml:space="preserve">
            <source>System.Text.RegularExpressions.Group</source>
            <target state="new">System.Text.RegularExpressions.Group</target>
          </trans-unit>
        </group>
        <group id="143">
          <trans-unit id="152" translate="yes" xml:space="preserve">
            <source>Captures, Success</source>
            <target state="new">Captures, Success</target>
          </trans-unit>
        </group>
        <group id="144">
          <trans-unit id="153" translate="yes" xml:space="preserve">
            <source>System.Text.RegularExpressions.GroupCollection</source>
            <target state="new">System.Text.RegularExpressions.GroupCollection</target>
          </trans-unit>
        </group>
        <group id="145">
          <trans-unit id="154" translate="yes" xml:space="preserve">
            <source>Count, Item</source>
            <target state="new">Count, Item</target>
          </trans-unit>
        </group>
        <group id="146">
          <trans-unit id="155" translate="yes" xml:space="preserve">
            <source>System.Text.RegularExpressions.Match</source>
            <target state="new">System.Text.RegularExpressions.Match</target>
          </trans-unit>
        </group>
        <group id="147">
          <trans-unit id="156" translate="yes" xml:space="preserve">
            <source>Empty, Groups, Result</source>
            <target state="new">Empty, Groups, Result</target>
          </trans-unit>
        </group>
        <group id="148">
          <trans-unit id="157" translate="yes" xml:space="preserve">
            <source>System.Text.RegularExpressions.Regex</source>
            <target state="new">System.Text.RegularExpressions.Regex</target>
          </trans-unit>
        </group>
        <group id="149">
          <trans-unit id="158" translate="yes" xml:space="preserve">
            <source>.ctor, IsMatch, Match, Matches, Replace</source>
            <target state="new">.ctor, IsMatch, Match, Matches, Replace</target>
          </trans-unit>
        </group>
        <group id="150">
          <trans-unit id="159" translate="yes" xml:space="preserve">
            <source>System.Text.RegularExpressions.RegexOptions</source>
            <target state="new">System.Text.RegularExpressions.RegexOptions</target>
          </trans-unit>
        </group>
        <group id="151">
          <trans-unit id="160" translate="yes" xml:space="preserve">
            <source>Compiled, IgnoreCase, IgnorePatternWhitespace, Multiline, None, RightToLeft, Singleline</source>
            <target state="new">Compiled, IgnoreCase, IgnorePatternWhitespace, Multiline, None, RightToLeft, Singleline</target>
          </trans-unit>
        </group>
        <group id="152">
          <trans-unit id="161" translate="yes" xml:space="preserve">
            <source>System.TimeSpan</source>
            <target state="new">System.TimeSpan</target>
          </trans-unit>
        </group>
        <group id="153">
          <trans-unit id="162" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="154">
          <trans-unit id="163" translate="yes" xml:space="preserve">
            <source>System.Tuple</source>
            <target state="new">System.Tuple</target>
          </trans-unit>
        </group>
        <group id="155">
          <trans-unit id="164" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="156">
          <trans-unit id="165" translate="yes" xml:space="preserve">
            <source>System.UInt16</source>
            <target state="new">System.UInt16</target>
          </trans-unit>
        </group>
        <group id="157">
          <trans-unit id="166" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="158">
          <trans-unit id="167" translate="yes" xml:space="preserve">
            <source>System.UInt32</source>
            <target state="new">System.UInt32</target>
          </trans-unit>
        </group>
        <group id="159">
          <trans-unit id="168" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="160">
          <trans-unit id="169" translate="yes" xml:space="preserve">
            <source>System.UInt64</source>
            <target state="new">System.UInt64</target>
          </trans-unit>
        </group>
        <group id="161">
          <trans-unit id="170" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="162">
          <trans-unit id="171" translate="yes" xml:space="preserve">
            <source>System.Uri</source>
            <target state="new">System.Uri</target>
          </trans-unit>
        </group>
        <group id="163">
          <trans-unit id="172" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="164">
          <trans-unit id="173" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.Extensions </source>
            <target state="new">System.Xml.Linq.Extensions </target>
          </trans-unit>
        </group>
        <group id="165">
          <trans-unit id="174" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="166">
          <trans-unit id="175" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XAttribute </source>
            <target state="new">System.Xml.Linq.XAttribute </target>
          </trans-unit>
        </group>
        <group id="167">
          <trans-unit id="176" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="168">
          <trans-unit id="177" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XCData </source>
            <target state="new">System.Xml.Linq.XCData </target>
          </trans-unit>
        </group>
        <group id="169">
          <trans-unit id="178" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="170">
          <trans-unit id="179" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XComment </source>
            <target state="new">System.Xml.Linq.XComment </target>
          </trans-unit>
        </group>
        <group id="171">
          <trans-unit id="180" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="172">
          <trans-unit id="181" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XContainer </source>
            <target state="new">System.Xml.Linq.XContainer </target>
          </trans-unit>
        </group>
        <group id="173">
          <trans-unit id="182" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="174">
          <trans-unit id="183" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XDeclaration </source>
            <target state="new">System.Xml.Linq.XDeclaration </target>
          </trans-unit>
        </group>
        <group id="175">
          <trans-unit id="184" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="176">
          <trans-unit id="185" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XDocument </source>
            <target state="new">System.Xml.Linq.XDocument </target>
          </trans-unit>
        </group>
        <group id="177">
          <trans-unit id="186" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="178">
          <trans-unit id="187" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XDocumentType </source>
            <target state="new">System.Xml.Linq.XDocumentType </target>
          </trans-unit>
        </group>
        <group id="179">
          <trans-unit id="188" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="180">
          <trans-unit id="189" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XElement </source>
            <target state="new">System.Xml.Linq.XElement </target>
          </trans-unit>
        </group>
        <group id="181">
          <trans-unit id="190" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="182">
          <trans-unit id="191" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XName </source>
            <target state="new">System.Xml.Linq.XName </target>
          </trans-unit>
        </group>
        <group id="183">
          <trans-unit id="192" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="184">
          <trans-unit id="193" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XNamespace </source>
            <target state="new">System.Xml.Linq.XNamespace </target>
          </trans-unit>
        </group>
        <group id="185">
          <trans-unit id="194" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="186">
          <trans-unit id="195" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XNode </source>
            <target state="new">System.Xml.Linq.XNode </target>
          </trans-unit>
        </group>
        <group id="187">
          <trans-unit id="196" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="188">
          <trans-unit id="197" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XNodeDocumentOrderComparer </source>
            <target state="new">System.Xml.Linq.XNodeDocumentOrderComparer </target>
          </trans-unit>
        </group>
        <group id="189">
          <trans-unit id="198" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="190">
          <trans-unit id="199" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XNodeEqualityComparer </source>
            <target state="new">System.Xml.Linq.XNodeEqualityComparer </target>
          </trans-unit>
        </group>
        <group id="191">
          <trans-unit id="200" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="192">
          <trans-unit id="201" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XObject </source>
            <target state="new">System.Xml.Linq.XObject </target>
          </trans-unit>
        </group>
        <group id="193">
          <trans-unit id="202" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="194">
          <trans-unit id="203" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XProcessingInstruction </source>
            <target state="new">System.Xml.Linq.XProcessingInstruction </target>
          </trans-unit>
        </group>
        <group id="195">
          <trans-unit id="204" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="196">
          <trans-unit id="205" translate="yes" xml:space="preserve">
            <source>System.Xml.Linq.XText </source>
            <target state="new">System.Xml.Linq.XText </target>
          </trans-unit>
        </group>
        <group id="197">
          <trans-unit id="206" translate="yes" xml:space="preserve">
            <source>All methods are supported</source>
            <target state="new">All methods are supported</target>
          </trans-unit>
        </group>
        <group id="198">
          <trans-unit id="207" translate="yes" xml:space="preserve">
            <source>System.Xml.XmlNodeType </source>
            <target state="new">System.Xml.XmlNodeType </target>
          </trans-unit>
        </group>
        <group id="199">
          <trans-unit id="208" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="200">
          <trans-unit id="209" translate="yes" xml:space="preserve">
            <source>Context variable</source>
            <target state="new">Context variable</target>
          </trans-unit>
        </group>
        <group id="201">
          <trans-unit id="210" translate="yes" xml:space="preserve">
            <source>A variable named <ph id="1">&lt;codeInline&gt;context&lt;/codeInline&gt;</ph> is implicitly available in every policy <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#Syntax" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>expression<ept id="2">&lt;/legacyLink&gt;</ept>.</source>
            <target state="new">A variable named <ph id="1">&lt;codeInline&gt;context&lt;/codeInline&gt;</ph> is implicitly available in every policy <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#Syntax" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>expression<ept id="2">&lt;/legacyLink&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="211" translate="yes" xml:space="preserve">
            <source>Its members provide information pertinent to the <ph id="1">&lt;codeInline&gt;\request&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Its members provide information pertinent to the <ph id="1">&lt;codeInline&gt;\request&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="212" translate="yes" xml:space="preserve">
            <source>All of the <ph id="1">&lt;codeInline&gt;context&lt;/codeInline&gt;</ph> members are read-only.</source>
            <target state="new">All of the <ph id="1">&lt;codeInline&gt;context&lt;/codeInline&gt;</ph> members are read-only.</target>
          </trans-unit>
        </group>
        <group id="202">
          <trans-unit id="213" translate="yes" xml:space="preserve">
            <source>Context Variable</source>
            <target state="new">Context Variable</target>
          </trans-unit>
        </group>
        <group id="203">
          <trans-unit id="214" translate="yes" xml:space="preserve">
            <source>Allowed methods, properties, and parameter values</source>
            <target state="new">Allowed methods, properties, and parameter values</target>
          </trans-unit>
        </group>
        <group id="204">
          <trans-unit id="215" translate="yes" xml:space="preserve">
            <source>context</source>
            <target state="new">context</target>
          </trans-unit>
        </group>
        <group id="205">
          <trans-unit id="216" translate="yes" xml:space="preserve">
            <source>Api: IApi</source>
            <target state="new">Api: IApi</target>
          </trans-unit>
        </group>
        <group id="206">
          <trans-unit id="217" translate="yes" xml:space="preserve">
            <source>Deployment</source>
            <target state="new">Deployment</target>
          </trans-unit>
        </group>
        <group id="207">
          <trans-unit id="218" translate="yes" xml:space="preserve">
            <source>Operation</source>
            <target state="new">Operation</target>
          </trans-unit>
        </group>
        <group id="208">
          <trans-unit id="219" translate="yes" xml:space="preserve">
            <source>Product</source>
            <target state="new">Product</target>
          </trans-unit>
        </group>
        <group id="209">
          <trans-unit id="220" translate="yes" xml:space="preserve">
            <source>Request</source>
            <target state="new">Request</target>
          </trans-unit>
        </group>
        <group id="210">
          <trans-unit id="221" translate="yes" xml:space="preserve">
            <source>Response</source>
            <target state="new">Response</target>
          </trans-unit>
        </group>
        <group id="211">
          <trans-unit id="222" translate="yes" xml:space="preserve">
            <source>Subscription</source>
            <target state="new">Subscription</target>
          </trans-unit>
        </group>
        <group id="212">
          <trans-unit id="223" translate="yes" xml:space="preserve">
            <source>Tracing: bool</source>
            <target state="new">Tracing: bool</target>
          </trans-unit>
        </group>
        <group id="213">
          <trans-unit id="224" translate="yes" xml:space="preserve">
            <source>User</source>
            <target state="new">User</target>
          </trans-unit>
        </group>
        <group id="214">
          <trans-unit id="225" translate="yes" xml:space="preserve">
            <source>Variables:IReadOnlyDictionary&lt;string, object&gt;</source>
            <target state="new">Variables:IReadOnlyDictionary&lt;string, object&gt;</target>
          </trans-unit>
        </group>
        <group id="215">
          <trans-unit id="226" translate="yes" xml:space="preserve">
            <source>void Trace(message: string)</source>
            <target state="new">void Trace(message: string)</target>
          </trans-unit>
        </group>
        <group id="216">
          <trans-unit id="227" translate="yes" xml:space="preserve">
            <source>context.Api</source>
            <target state="new">context.Api</target>
          </trans-unit>
        </group>
        <group id="217">
          <trans-unit id="228" translate="yes" xml:space="preserve">
            <source>Id: string</source>
            <target state="new">Id: string</target>
          </trans-unit>
        </group>
        <group id="218">
          <trans-unit id="229" translate="yes" xml:space="preserve">
            <source>Name: string</source>
            <target state="new">Name: string</target>
          </trans-unit>
        </group>
        <group id="219">
          <trans-unit id="230" translate="yes" xml:space="preserve">
            <source>Path: string</source>
            <target state="new">Path: string</target>
          </trans-unit>
        </group>
        <group id="220">
          <trans-unit id="231" translate="yes" xml:space="preserve">
            <source>ServiceUrl: IUrl</source>
            <target state="new">ServiceUrl: IUrl</target>
          </trans-unit>
        </group>
        <group id="221">
          <trans-unit id="232" translate="yes" xml:space="preserve">
            <source>context.Deployment</source>
            <target state="new">context.Deployment</target>
          </trans-unit>
        </group>
        <group id="222">
          <trans-unit id="233" translate="yes" xml:space="preserve">
            <source>Region: string</source>
            <target state="new">Region: string</target>
          </trans-unit>
        </group>
        <group id="223">
          <trans-unit id="234" translate="yes" xml:space="preserve">
            <source>ServiceName: string</source>
            <target state="new">ServiceName: string</target>
          </trans-unit>
        </group>
        <group id="224">
          <trans-unit id="235" translate="yes" xml:space="preserve">
            <source>context.Operation</source>
            <target state="new">context.Operation</target>
          </trans-unit>
        </group>
        <group id="225">
          <trans-unit id="236" translate="yes" xml:space="preserve">
            <source>Id: string</source>
            <target state="new">Id: string</target>
          </trans-unit>
        </group>
        <group id="226">
          <trans-unit id="237" translate="yes" xml:space="preserve">
            <source>Method: string</source>
            <target state="new">Method: string</target>
          </trans-unit>
        </group>
        <group id="227">
          <trans-unit id="238" translate="yes" xml:space="preserve">
            <source>Name: string</source>
            <target state="new">Name: string</target>
          </trans-unit>
        </group>
        <group id="228">
          <trans-unit id="239" translate="yes" xml:space="preserve">
            <source>UrlTemplate: string</source>
            <target state="new">UrlTemplate: string</target>
          </trans-unit>
        </group>
        <group id="229">
          <trans-unit id="240" translate="yes" xml:space="preserve">
            <source>context.Product</source>
            <target state="new">context.Product</target>
          </trans-unit>
        </group>
        <group id="230">
          <trans-unit id="241" translate="yes" xml:space="preserve">
            <source>Apis: IEnumerable&lt;IApi&gt;</source>
            <target state="new">Apis: IEnumerable&lt;IApi&gt;</target>
          </trans-unit>
        </group>
        <group id="231">
          <trans-unit id="242" translate="yes" xml:space="preserve">
            <source>ApprovalRequired: bool</source>
            <target state="new">ApprovalRequired: bool</target>
          </trans-unit>
        </group>
        <group id="232">
          <trans-unit id="243" translate="yes" xml:space="preserve">
            <source>Groups: IEnumerable&lt;IGroup&gt;</source>
            <target state="new">Groups: IEnumerable&lt;IGroup&gt;</target>
          </trans-unit>
        </group>
        <group id="233">
          <trans-unit id="244" translate="yes" xml:space="preserve">
            <source>Id: string</source>
            <target state="new">Id: string</target>
          </trans-unit>
        </group>
        <group id="234">
          <trans-unit id="245" translate="yes" xml:space="preserve">
            <source>Name: string</source>
            <target state="new">Name: string</target>
          </trans-unit>
        </group>
        <group id="235">
          <trans-unit id="246" translate="yes" xml:space="preserve">
            <source>State: enum ProductState {NotPublished, Published}</source>
            <target state="new">State: enum ProductState {NotPublished, Published}</target>
          </trans-unit>
        </group>
        <group id="236">
          <trans-unit id="247" translate="yes" xml:space="preserve">
            <source>SubscriptionLimit: int?</source>
            <target state="new">SubscriptionLimit: int?</target>
          </trans-unit>
        </group>
        <group id="237">
          <trans-unit id="248" translate="yes" xml:space="preserve">
            <source>SubscriptionRequired: bool</source>
            <target state="new">SubscriptionRequired: bool</target>
          </trans-unit>
        </group>
        <group id="238">
          <trans-unit id="249" translate="yes" xml:space="preserve">
            <source>context.Request</source>
            <target state="new">context.Request</target>
          </trans-unit>
        </group>
        <group id="239">
          <trans-unit id="250" translate="yes" xml:space="preserve">
            <source>Body: IMessageBody</source>
            <target state="new">Body: IMessageBody</target>
          </trans-unit>
        </group>
        <group id="240">
          <trans-unit id="251" translate="yes" xml:space="preserve">
            <source>Headers: IReadOnlyDictionary&lt;string, string[]&gt;</source>
            <target state="new">Headers: IReadOnlyDictionary&lt;string, string[]&gt;</target>
          </trans-unit>
        </group>
        <group id="241">
          <trans-unit id="252" translate="yes" xml:space="preserve">
            <source>IpAddress: string</source>
            <target state="new">IpAddress: string</target>
          </trans-unit>
        </group>
        <group id="242">
          <trans-unit id="253" translate="yes" xml:space="preserve">
            <source>MatchedParameters: IReadOnlyDictionary&lt;string, string&gt;</source>
            <target state="new">MatchedParameters: IReadOnlyDictionary&lt;string, string&gt;</target>
          </trans-unit>
        </group>
        <group id="243">
          <trans-unit id="254" translate="yes" xml:space="preserve">
            <source>Method: string</source>
            <target state="new">Method: string</target>
          </trans-unit>
        </group>
        <group id="244">
          <trans-unit id="255" translate="yes" xml:space="preserve">
            <source>Url: IUri</source>
            <target state="new">Url: IUri</target>
          </trans-unit>
        </group>
        <group id="245">
          <trans-unit id="256" translate="yes" xml:space="preserve">
            <source>string context.Request.Headers.GetValueOrDefault(headerName: string, defaultValue: string)</source>
            <target state="new">string context.Request.Headers.GetValueOrDefault(headerName: string, defaultValue: string)</target>
          </trans-unit>
        </group>
        <group id="246">
          <trans-unit id="257" translate="yes" xml:space="preserve">
            <source>headerName: string</source>
            <target state="new">headerName: string</target>
          </trans-unit>
        </group>
        <group id="247">
          <trans-unit id="258" translate="yes" xml:space="preserve">
            <source>defaultValue: string</source>
            <target state="new">defaultValue: string</target>
          </trans-unit>
        </group>
        <group id="248">
          <trans-unit id="259" translate="yes" xml:space="preserve">
            <source>Returns comma separated request header values or <ph id="1">&lt;codeInline&gt;defaultValue&lt;/codeInline&gt;</ph> if the header is not found.</source>
            <target state="new">Returns comma separated request header values or <ph id="1">&lt;codeInline&gt;defaultValue&lt;/codeInline&gt;</ph> if the header is not found.</target>
          </trans-unit>
        </group>
        <group id="249">
          <trans-unit id="260" translate="yes" xml:space="preserve">
            <source>context.Response</source>
            <target state="new">context.Response</target>
          </trans-unit>
        </group>
        <group id="250">
          <trans-unit id="261" translate="yes" xml:space="preserve">
            <source>Body: IMessageBody</source>
            <target state="new">Body: IMessageBody</target>
          </trans-unit>
        </group>
        <group id="251">
          <trans-unit id="262" translate="yes" xml:space="preserve">
            <source>Headers: IReadOnlyDictionary&lt;string, string[]&gt;</source>
            <target state="new">Headers: IReadOnlyDictionary&lt;string, string[]&gt;</target>
          </trans-unit>
        </group>
        <group id="252">
          <trans-unit id="263" translate="yes" xml:space="preserve">
            <source>StatusCode: int</source>
            <target state="new">StatusCode: int</target>
          </trans-unit>
        </group>
        <group id="253">
          <trans-unit id="264" translate="yes" xml:space="preserve">
            <source>StatusReason: string</source>
            <target state="new">StatusReason: string</target>
          </trans-unit>
        </group>
        <group id="254">
          <trans-unit id="265" translate="yes" xml:space="preserve">
            <source>string context.Response.Headers.GetValueOrDefault(headerName: string, defaultValue: string)</source>
            <target state="new">string context.Response.Headers.GetValueOrDefault(headerName: string, defaultValue: string)</target>
          </trans-unit>
        </group>
        <group id="255">
          <trans-unit id="266" translate="yes" xml:space="preserve">
            <source>headerName: string</source>
            <target state="new">headerName: string</target>
          </trans-unit>
        </group>
        <group id="256">
          <trans-unit id="267" translate="yes" xml:space="preserve">
            <source>defaultValue: string</source>
            <target state="new">defaultValue: string</target>
          </trans-unit>
        </group>
        <group id="257">
          <trans-unit id="268" translate="yes" xml:space="preserve">
            <source>Returns comma separated response header values or <ph id="1">&lt;codeInline&gt;defaultValue&lt;/codeInline&gt;</ph> if the header is not found.</source>
            <target state="new">Returns comma separated response header values or <ph id="1">&lt;codeInline&gt;defaultValue&lt;/codeInline&gt;</ph> if the header is not found.</target>
          </trans-unit>
        </group>
        <group id="258">
          <trans-unit id="269" translate="yes" xml:space="preserve">
            <source>context.Subscription</source>
            <target state="new">context.Subscription</target>
          </trans-unit>
        </group>
        <group id="259">
          <trans-unit id="270" translate="yes" xml:space="preserve">
            <source>CreatedTime: DateTime</source>
            <target state="new">CreatedTime: DateTime</target>
          </trans-unit>
        </group>
        <group id="260">
          <trans-unit id="271" translate="yes" xml:space="preserve">
            <source>EndDate: DateTime?</source>
            <target state="new">EndDate: DateTime?</target>
          </trans-unit>
        </group>
        <group id="261">
          <trans-unit id="272" translate="yes" xml:space="preserve">
            <source>Id: string</source>
            <target state="new">Id: string</target>
          </trans-unit>
        </group>
        <group id="262">
          <trans-unit id="273" translate="yes" xml:space="preserve">
            <source>Key: string</source>
            <target state="new">Key: string</target>
          </trans-unit>
        </group>
        <group id="263">
          <trans-unit id="274" translate="yes" xml:space="preserve">
            <source>Name: string</source>
            <target state="new">Name: string</target>
          </trans-unit>
        </group>
        <group id="264">
          <trans-unit id="275" translate="yes" xml:space="preserve">
            <source>PrimaryKey: string</source>
            <target state="new">PrimaryKey: string</target>
          </trans-unit>
        </group>
        <group id="265">
          <trans-unit id="276" translate="yes" xml:space="preserve">
            <source>SecondaryKey: string</source>
            <target state="new">SecondaryKey: string</target>
          </trans-unit>
        </group>
        <group id="266">
          <trans-unit id="277" translate="yes" xml:space="preserve">
            <source>StartDate: DateTime?</source>
            <target state="new">StartDate: DateTime?</target>
          </trans-unit>
        </group>
        <group id="267">
          <trans-unit id="278" translate="yes" xml:space="preserve">
            <source>context.User</source>
            <target state="new">context.User</target>
          </trans-unit>
        </group>
        <group id="268">
          <trans-unit id="279" translate="yes" xml:space="preserve">
            <source>Email: string</source>
            <target state="new">Email: string</target>
          </trans-unit>
        </group>
        <group id="269">
          <trans-unit id="280" translate="yes" xml:space="preserve">
            <source>FirstName: string</source>
            <target state="new">FirstName: string</target>
          </trans-unit>
        </group>
        <group id="270">
          <trans-unit id="281" translate="yes" xml:space="preserve">
            <source>Groups: IEnumerable&lt;IGroup&gt;</source>
            <target state="new">Groups: IEnumerable&lt;IGroup&gt;</target>
          </trans-unit>
        </group>
        <group id="271">
          <trans-unit id="282" translate="yes" xml:space="preserve">
            <source>Id: string</source>
            <target state="new">Id: string</target>
          </trans-unit>
        </group>
        <group id="272">
          <trans-unit id="283" translate="yes" xml:space="preserve">
            <source>Identities: IEnumerable&lt;IUserIdentity&gt;</source>
            <target state="new">Identities: IEnumerable&lt;IUserIdentity&gt;</target>
          </trans-unit>
        </group>
        <group id="273">
          <trans-unit id="284" translate="yes" xml:space="preserve">
            <source>LastName: string</source>
            <target state="new">LastName: string</target>
          </trans-unit>
        </group>
        <group id="274">
          <trans-unit id="285" translate="yes" xml:space="preserve">
            <source>Note: string</source>
            <target state="new">Note: string</target>
          </trans-unit>
        </group>
        <group id="275">
          <trans-unit id="286" translate="yes" xml:space="preserve">
            <source>RegistrationDate: DateTime</source>
            <target state="new">RegistrationDate: DateTime</target>
          </trans-unit>
        </group>
        <group id="276">
          <trans-unit id="287" translate="yes" xml:space="preserve">
            <source>IApi</source>
            <target state="new">IApi</target>
          </trans-unit>
        </group>
        <group id="277">
          <trans-unit id="288" translate="yes" xml:space="preserve">
            <source>Id: string</source>
            <target state="new">Id: string</target>
          </trans-unit>
        </group>
        <group id="278">
          <trans-unit id="289" translate="yes" xml:space="preserve">
            <source>Name: string</source>
            <target state="new">Name: string</target>
          </trans-unit>
        </group>
        <group id="279">
          <trans-unit id="290" translate="yes" xml:space="preserve">
            <source>Path: string</source>
            <target state="new">Path: string</target>
          </trans-unit>
        </group>
        <group id="280">
          <trans-unit id="291" translate="yes" xml:space="preserve">
            <source>Protocols: IEnumerable&lt;string&gt;</source>
            <target state="new">Protocols: IEnumerable&lt;string&gt;</target>
          </trans-unit>
        </group>
        <group id="281">
          <trans-unit id="292" translate="yes" xml:space="preserve">
            <source>ServiceUrl: IUrl</source>
            <target state="new">ServiceUrl: IUrl</target>
          </trans-unit>
        </group>
        <group id="282">
          <trans-unit id="293" translate="yes" xml:space="preserve">
            <source>SubscriptionKeyParameterNames: ISubscriptionKeyParameterNames</source>
            <target state="new">SubscriptionKeyParameterNames: ISubscriptionKeyParameterNames</target>
          </trans-unit>
        </group>
        <group id="283">
          <trans-unit id="294" translate="yes" xml:space="preserve">
            <source>IGroup</source>
            <target state="new">IGroup</target>
          </trans-unit>
        </group>
        <group id="284">
          <trans-unit id="295" translate="yes" xml:space="preserve">
            <source>Id: string</source>
            <target state="new">Id: string</target>
          </trans-unit>
        </group>
        <group id="285">
          <trans-unit id="296" translate="yes" xml:space="preserve">
            <source>Name: string</source>
            <target state="new">Name: string</target>
          </trans-unit>
        </group>
        <group id="286">
          <trans-unit id="297" translate="yes" xml:space="preserve">
            <source>IMessageBody</source>
            <target state="new">IMessageBody</target>
          </trans-unit>
        </group>
        <group id="287">
          <trans-unit id="298" translate="yes" xml:space="preserve">
            <source>As&lt;T&gt;(preserveContent: bool = false): Where T: string, JObject, JToken, JArray, XNode, XElement, XDocument</source>
            <target state="new">As&lt;T&gt;(preserveContent: bool = false): Where T: string, JObject, JToken, JArray, XNode, XElement, XDocument</target>
          </trans-unit>
        </group>
        <group id="288">
          <trans-unit id="299" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;context.Request.Body.As%%amp;lt;T%%amp;gt;&lt;/codeInline&gt;</ph> and <ph id="2">&lt;codeInline&gt;context.Request.Body.As%%amp;lt;T%%amp;gt;&lt;/codeInline&gt;</ph> methods are used to read a request or response message body in one of the specified formats.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;context.Request.Body.As%%amp;lt;T%%amp;gt;&lt;/codeInline&gt;</ph> and <ph id="2">&lt;codeInline&gt;context.Request.Body.As%%amp;lt;T%%amp;gt;&lt;/codeInline&gt;</ph> methods are used to read a request or response message body in one of the specified formats.</target>
          </trans-unit>
          <trans-unit id="300" translate="yes" xml:space="preserve">
            <source>Note that by default when you access the message body, the original message body is lost and must be set by returning the body back in the expression that reads the body.</source>
            <target state="new">Note that by default when you access the message body, the original message body is lost and must be set by returning the body back in the expression that reads the body.</target>
          </trans-unit>
          <trans-unit id="301" translate="yes" xml:space="preserve">
            <source>To preserve the body content, set the <ph id="1">&lt;codeInline&gt;preserveContent&lt;/codeInline&gt;</ph> parameter to <ph id="2">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> when accessing the message.</source>
            <target state="new">To preserve the body content, set the <ph id="1">&lt;codeInline&gt;preserveContent&lt;/codeInline&gt;</ph> parameter to <ph id="2">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> when accessing the message.</target>
          </trans-unit>
          <trans-unit id="302" translate="yes" xml:space="preserve">
            <source>The default value of <ph id="1">&lt;codeInline&gt;preserveContent&lt;/codeInline&gt;</ph> is <ph id="2">&lt;codeInline&gt;false&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The default value of <ph id="1">&lt;codeInline&gt;preserveContent&lt;/codeInline&gt;</ph> is <ph id="2">&lt;codeInline&gt;false&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="303" translate="yes" xml:space="preserve">
            <source>If <ph id="1">&lt;codeInline&gt;preserveContent&lt;/codeInline&gt;</ph> is set to <ph id="2">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> and a body is returned by the expression, the returned body is used.</source>
            <target state="new">If <ph id="1">&lt;codeInline&gt;preserveContent&lt;/codeInline&gt;</ph> is set to <ph id="2">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> and a body is returned by the expression, the returned body is used.</target>
          </trans-unit>
          <trans-unit id="304" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> the <ph id="2">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#SetBody" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set body&lt;/link&gt;</ph> policy.</source>
            <target state="new"><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> the <ph id="2">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#SetBody" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set body&lt;/link&gt;</ph> policy.</target>
          </trans-unit>
        </group>
        <group id="289">
          <trans-unit id="305" translate="yes" xml:space="preserve">
            <source>IUrl</source>
            <target state="new">IUrl</target>
          </trans-unit>
        </group>
        <group id="290">
          <trans-unit id="306" translate="yes" xml:space="preserve">
            <source>Host: string</source>
            <target state="new">Host: string</target>
          </trans-unit>
        </group>
        <group id="291">
          <trans-unit id="307" translate="yes" xml:space="preserve">
            <source>Path: string</source>
            <target state="new">Path: string</target>
          </trans-unit>
        </group>
        <group id="292">
          <trans-unit id="308" translate="yes" xml:space="preserve">
            <source>Port: int</source>
            <target state="new">Port: int</target>
          </trans-unit>
        </group>
        <group id="293">
          <trans-unit id="309" translate="yes" xml:space="preserve">
            <source>Query: IReadOnlyDictionary&lt;string, string[]&gt;</source>
            <target state="new">Query: IReadOnlyDictionary&lt;string, string[]&gt;</target>
          </trans-unit>
        </group>
        <group id="294">
          <trans-unit id="310" translate="yes" xml:space="preserve">
            <source>QueryString: string</source>
            <target state="new">QueryString: string</target>
          </trans-unit>
        </group>
        <group id="295">
          <trans-unit id="311" translate="yes" xml:space="preserve">
            <source>Schema: string</source>
            <target state="new">Schema: string</target>
          </trans-unit>
        </group>
        <group id="296">
          <trans-unit id="312" translate="yes" xml:space="preserve">
            <source>IUserIdentity</source>
            <target state="new">IUserIdentity</target>
          </trans-unit>
        </group>
        <group id="297">
          <trans-unit id="313" translate="yes" xml:space="preserve">
            <source>Id: string</source>
            <target state="new">Id: string</target>
          </trans-unit>
        </group>
        <group id="298">
          <trans-unit id="314" translate="yes" xml:space="preserve">
            <source>Provider: string</source>
            <target state="new">Provider: string</target>
          </trans-unit>
        </group>
        <group id="299">
          <trans-unit id="315" translate="yes" xml:space="preserve">
            <source>ISubscriptionKeyParameterNames</source>
            <target state="new">ISubscriptionKeyParameterNames</target>
          </trans-unit>
        </group>
        <group id="300">
          <trans-unit id="316" translate="yes" xml:space="preserve">
            <source>Header: string</source>
            <target state="new">Header: string</target>
          </trans-unit>
        </group>
        <group id="301">
          <trans-unit id="317" translate="yes" xml:space="preserve">
            <source>Query: string</source>
            <target state="new">Query: string</target>
          </trans-unit>
        </group>
        <group id="302">
          <trans-unit id="318" translate="yes" xml:space="preserve">
            <source>string IUrl.Query.GetValueOrDefault(queryParameterName: string, defaultValue: string)</source>
            <target state="new">string IUrl.Query.GetValueOrDefault(queryParameterName: string, defaultValue: string)</target>
          </trans-unit>
        </group>
        <group id="303">
          <trans-unit id="319" translate="yes" xml:space="preserve">
            <source>queryParameterName: string</source>
            <target state="new">queryParameterName: string</target>
          </trans-unit>
        </group>
        <group id="304">
          <trans-unit id="320" translate="yes" xml:space="preserve">
            <source>defaultValue: string</source>
            <target state="new">defaultValue: string</target>
          </trans-unit>
        </group>
        <group id="305">
          <trans-unit id="321" translate="yes" xml:space="preserve">
            <source>Returns comma separated query parameter values or <ph id="1">&lt;codeInline&gt;defaultValue&lt;/codeInline&gt;</ph> if the parameter is not found.</source>
            <target state="new">Returns comma separated query parameter values or <ph id="1">&lt;codeInline&gt;defaultValue&lt;/codeInline&gt;</ph> if the parameter is not found.</target>
          </trans-unit>
        </group>
        <group id="306">
          <trans-unit id="322" translate="yes" xml:space="preserve">
            <source>T context.Variables.GetValueOrDefault&lt;T&gt;(variableName: string, defaultValue: T)</source>
            <target state="new">T context.Variables.GetValueOrDefault&lt;T&gt;(variableName: string, defaultValue: T)</target>
          </trans-unit>
        </group>
        <group id="307">
          <trans-unit id="323" translate="yes" xml:space="preserve">
            <source>variableName: string</source>
            <target state="new">variableName: string</target>
          </trans-unit>
        </group>
        <group id="308">
          <trans-unit id="324" translate="yes" xml:space="preserve">
            <source>defaultValue: T</source>
            <target state="new">defaultValue: T</target>
          </trans-unit>
        </group>
        <group id="309">
          <trans-unit id="325" translate="yes" xml:space="preserve">
            <source>Returns variable value cast to type <ph id="1">&lt;codeInline&gt;T&lt;/codeInline&gt;</ph> or <ph id="2">&lt;codeInline&gt;defaultValue&lt;/codeInline&gt;</ph> if the variable is not found.</source>
            <target state="new">Returns variable value cast to type <ph id="1">&lt;codeInline&gt;T&lt;/codeInline&gt;</ph> or <ph id="2">&lt;codeInline&gt;defaultValue&lt;/codeInline&gt;</ph> if the variable is not found.</target>
          </trans-unit>
        </group>
        <group id="310">
          <trans-unit id="326" translate="yes" xml:space="preserve">
            <source>This method throws an exception if the specified type does not match the actual type of the returned variable.</source>
            <target state="new">This method throws an exception if the specified type does not match the actual type of the returned variable.</target>
          </trans-unit>
        </group>
        <group id="311">
          <trans-unit id="327" translate="yes" xml:space="preserve">
            <source>BasicAuthCredentials AsBasic(input: this string)</source>
            <target state="new">BasicAuthCredentials AsBasic(input: this string)</target>
          </trans-unit>
        </group>
        <group id="312">
          <trans-unit id="328" translate="yes" xml:space="preserve">
            <source>input: string</source>
            <target state="new">input: string</target>
          </trans-unit>
        </group>
        <group id="313">
          <trans-unit id="329" translate="yes" xml:space="preserve">
            <source>If the input parameter contains a valid HTTP Basic Authentication authorization request header value, the method returns an object of type <ph id="1">&lt;codeInline&gt;BasicAuthCredentials&lt;/codeInline&gt;</ph>; otherwise the method returns null.</source>
            <target state="new">If the input parameter contains a valid HTTP Basic Authentication authorization request header value, the method returns an object of type <ph id="1">&lt;codeInline&gt;BasicAuthCredentials&lt;/codeInline&gt;</ph>; otherwise the method returns null.</target>
          </trans-unit>
        </group>
        <group id="314">
          <trans-unit id="330" translate="yes" xml:space="preserve">
            <source>bool TryParseBasic(input: this string, result: out BasicAuthCredentials)</source>
            <target state="new">bool TryParseBasic(input: this string, result: out BasicAuthCredentials)</target>
          </trans-unit>
        </group>
        <group id="315">
          <trans-unit id="331" translate="yes" xml:space="preserve">
            <source>input: string</source>
            <target state="new">input: string</target>
          </trans-unit>
        </group>
        <group id="316">
          <trans-unit id="332" translate="yes" xml:space="preserve">
            <source>result: out BasicAuthCredentials</source>
            <target state="new">result: out BasicAuthCredentials</target>
          </trans-unit>
        </group>
        <group id="317">
          <trans-unit id="333" translate="yes" xml:space="preserve">
            <source>If the input parameter contains a valid HTTP Basic Authentication authorization request header value, the method returns <ph id="1">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> and the result parameter contains a value of type <ph id="2">&lt;codeInline&gt;BasicAuthCredentials&lt;/codeInline&gt;</ph>; otherwise the method returns <ph id="3">&lt;codeInline&gt;false&lt;/codeInline&gt;</ph>.</source>
            <target state="new">If the input parameter contains a valid HTTP Basic Authentication authorization request header value, the method returns <ph id="1">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> and the result parameter contains a value of type <ph id="2">&lt;codeInline&gt;BasicAuthCredentials&lt;/codeInline&gt;</ph>; otherwise the method returns <ph id="3">&lt;codeInline&gt;false&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="318">
          <trans-unit id="334" translate="yes" xml:space="preserve">
            <source>BasicAuthCredentials</source>
            <target state="new">BasicAuthCredentials</target>
          </trans-unit>
        </group>
        <group id="319">
          <trans-unit id="335" translate="yes" xml:space="preserve">
            <source>Password: string</source>
            <target state="new">Password: string</target>
          </trans-unit>
        </group>
        <group id="320">
          <trans-unit id="336" translate="yes" xml:space="preserve">
            <source>UserId: string</source>
            <target state="new">UserId: string</target>
          </trans-unit>
        </group>
        <group id="321">
          <trans-unit id="337" translate="yes" xml:space="preserve">
            <source>Jwt AsJwt(input: this string)</source>
            <target state="new">Jwt AsJwt(input: this string)</target>
          </trans-unit>
        </group>
        <group id="322">
          <trans-unit id="338" translate="yes" xml:space="preserve">
            <source>input: string</source>
            <target state="new">input: string</target>
          </trans-unit>
        </group>
        <group id="323">
          <trans-unit id="339" translate="yes" xml:space="preserve">
            <source>If the input parameter contains a valid JWT token value, the method returns an object of type <ph id="1">&lt;codeInline&gt;Jwt&lt;/codeInline&gt;</ph>; otherwise the method returns <ph id="2">&lt;codeInline&gt;null&lt;/codeInline&gt;</ph>.</source>
            <target state="new">If the input parameter contains a valid JWT token value, the method returns an object of type <ph id="1">&lt;codeInline&gt;Jwt&lt;/codeInline&gt;</ph>; otherwise the method returns <ph id="2">&lt;codeInline&gt;null&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="324">
          <trans-unit id="340" translate="yes" xml:space="preserve">
            <source>bool TryParseJwt(input: this string, result: out Jwt)</source>
            <target state="new">bool TryParseJwt(input: this string, result: out Jwt)</target>
          </trans-unit>
        </group>
        <group id="325">
          <trans-unit id="341" translate="yes" xml:space="preserve">
            <source>input: string</source>
            <target state="new">input: string</target>
          </trans-unit>
        </group>
        <group id="326">
          <trans-unit id="342" translate="yes" xml:space="preserve">
            <source>result: out Jwt</source>
            <target state="new">result: out Jwt</target>
          </trans-unit>
        </group>
        <group id="327">
          <trans-unit id="343" translate="yes" xml:space="preserve">
            <source>If the input parameter contains a valid JWT token value, the method returns <ph id="1">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> and the result parameter contains a value of type <ph id="2">&lt;codeInline&gt;Jwt&lt;/codeInline&gt;</ph>; otherwise the method returns <ph id="3">&lt;codeInline&gt;false&lt;/codeInline&gt;</ph>.</source>
            <target state="new">If the input parameter contains a valid JWT token value, the method returns <ph id="1">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> and the result parameter contains a value of type <ph id="2">&lt;codeInline&gt;Jwt&lt;/codeInline&gt;</ph>; otherwise the method returns <ph id="3">&lt;codeInline&gt;false&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="328">
          <trans-unit id="344" translate="yes" xml:space="preserve">
            <source>Jwt</source>
            <target state="new">Jwt</target>
          </trans-unit>
        </group>
        <group id="329">
          <trans-unit id="345" translate="yes" xml:space="preserve">
            <source>Algorithm: string</source>
            <target state="new">Algorithm: string</target>
          </trans-unit>
        </group>
        <group id="330">
          <trans-unit id="346" translate="yes" xml:space="preserve">
            <source>Audience: IEnumerable&lt;string&gt; </source>
            <target state="new">Audience: IEnumerable&lt;string&gt; </target>
          </trans-unit>
        </group>
        <group id="331">
          <trans-unit id="347" translate="yes" xml:space="preserve">
            <source>Claims: IReadOnlyDictionary&lt;string, string[]&gt;</source>
            <target state="new">Claims: IReadOnlyDictionary&lt;string, string[]&gt;</target>
          </trans-unit>
        </group>
        <group id="332">
          <trans-unit id="348" translate="yes" xml:space="preserve">
            <source>ExpirationTime: DateTime?</source>
            <target state="new">ExpirationTime: DateTime?</target>
          </trans-unit>
        </group>
        <group id="333">
          <trans-unit id="349" translate="yes" xml:space="preserve">
            <source>Id: string</source>
            <target state="new">Id: string</target>
          </trans-unit>
        </group>
        <group id="334">
          <trans-unit id="350" translate="yes" xml:space="preserve">
            <source>Issuer: string</source>
            <target state="new">Issuer: string</target>
          </trans-unit>
        </group>
        <group id="335">
          <trans-unit id="351" translate="yes" xml:space="preserve">
            <source>NotBefore: DateTime?</source>
            <target state="new">NotBefore: DateTime?</target>
          </trans-unit>
        </group>
        <group id="336">
          <trans-unit id="352" translate="yes" xml:space="preserve">
            <source>Subject: string</source>
            <target state="new">Subject: string</target>
          </trans-unit>
        </group>
        <group id="337">
          <trans-unit id="353" translate="yes" xml:space="preserve">
            <source>Type: string</source>
            <target state="new">Type: string</target>
          </trans-unit>
        </group>
        <group id="338">
          <trans-unit id="354" translate="yes" xml:space="preserve">
            <source>string Jwt.Claims.GetValueOrDefault(claimName: string, defaultValue: string)</source>
            <target state="new">string Jwt.Claims.GetValueOrDefault(claimName: string, defaultValue: string)</target>
          </trans-unit>
        </group>
        <group id="339">
          <trans-unit id="355" translate="yes" xml:space="preserve">
            <source>claimName: string</source>
            <target state="new">claimName: string</target>
          </trans-unit>
        </group>
        <group id="340">
          <trans-unit id="356" translate="yes" xml:space="preserve">
            <source>defaultValue: string</source>
            <target state="new">defaultValue: string</target>
          </trans-unit>
        </group>
        <group id="341">
          <trans-unit id="357" translate="yes" xml:space="preserve">
            <source>Returns comma separated claim values or <ph id="1">&lt;codeInline&gt;defaultValue&lt;/codeInline&gt;</ph> if the header is not found.</source>
            <target state="new">Returns comma separated claim values or <ph id="1">&lt;codeInline&gt;defaultValue&lt;/codeInline&gt;</ph> if the header is not found.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>