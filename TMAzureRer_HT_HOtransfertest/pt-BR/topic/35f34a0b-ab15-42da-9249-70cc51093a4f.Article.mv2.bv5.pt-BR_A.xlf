<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="pt-BR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANzMENwjAMAMBVMoAtOYnT1Dx58UYs4ARbqlRaVILU8eEGOPdsjVNHM2bk6ISN5oadok4iHlUFgpEUn5PhLJmQ2TOKTRW5Erl5r5MWCLl4ZqWG2mJBTk9FSSxYqfcSSbKyQ4gQ3gOvdwjnurjbOS7Hvg8ICcI/uX1fuj0O3T6rjmXfft3aY8ehAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Enumerating Blob Resources</source>
            <target state="new">Enumerating Blob Resources</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>The Blob service API includes operations for enumerating the containers within an account (the <ph id="1">&lt;link xlink:href="1a1d2a8e-de2b-4fa8-9d6d-582998a26a4f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;List Containers&lt;/link&gt;</ph> operation) and the blobs within a container (the <ph id="2">&lt;link xlink:href="fa4760a6-5343-4aa1-b484-df823ce817e7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;List Blobs&lt;/link&gt;</ph> operation).</source>
            <target state="new">The Blob service API includes operations for enumerating the containers within an account (the <ph id="1">&lt;link xlink:href="1a1d2a8e-de2b-4fa8-9d6d-582998a26a4f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;List Containers&lt;/link&gt;</ph> operation) and the blobs within a container (the <ph id="2">&lt;link xlink:href="fa4760a6-5343-4aa1-b484-df823ce817e7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;List Blobs&lt;/link&gt;</ph> operation).</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>These operations have some common features worth noting.</source>
            <target state="new">These operations have some common features worth noting.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>An enumeration operation returns an XML response that contains all or part of the requested list.</source>
            <target state="new">An enumeration operation returns an XML response that contains all or part of the requested list.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The operation returns entities in alphabetical order.</source>
            <target state="new">The operation returns entities in alphabetical order.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>This topic contains the following subtopics:</source>
            <target state="new">This topic contains the following subtopics:</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Setting Maximum Results</source>
            <target state="new">Setting Maximum Results</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Retrieving Partial List Results with Markers</source>
            <target state="new">Retrieving Partial List Results with Markers</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Filtering List Results</source>
            <target state="new">Filtering List Results</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Traversing the Blob Namespace</source>
            <target state="new">Traversing the Blob Namespace</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>XML Response Format</source>
            <target state="new">XML Response Format</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Setting Maximum Results</source>
            <target state="new">Setting Maximum Results</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>To specify the maximum number of results to be returned in a single call to an enumeration operation, specify a value for the <ph id="1">&lt;parameterReference&gt;maxresults&lt;/parameterReference&gt;</ph> parameter on the request URI.</source>
            <target state="new">To specify the maximum number of results to be returned in a single call to an enumeration operation, specify a value for the <ph id="1">&lt;parameterReference&gt;maxresults&lt;/parameterReference&gt;</ph> parameter on the request URI.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>If the maximum number of results is not specified in the request or is greater than 5,000, the server will return up to the maximum of 5,000 items.</source>
            <target state="new">If the maximum number of results is not specified in the request or is greater than 5,000, the server will return up to the maximum of 5,000 items.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>If you specify a maximum number of results less than or equal to zero, the service returns status code 400 (Bad Request).</source>
            <target state="new">If you specify a maximum number of results less than or equal to zero, the service returns status code 400 (Bad Request).</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Retrieving Partial List Results with Markers</source>
            <target state="new">Retrieving Partial List Results with Markers</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>The first time that the enumeration operation is performed against a particular resource, the response may contain all results, or it may contain a subset of the results and a marker value.</source>
            <target state="new">The first time that the enumeration operation is performed against a particular resource, the response may contain all results, or it may contain a subset of the results and a marker value.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The marker value can be passed to the subsequent call to return the next set of results, and so on, until the list is complete and no marker is returned.</source>
            <target state="new">The marker value can be passed to the subsequent call to return the next set of results, and so on, until the list is complete and no marker is returned.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>The marker value is included in the <ph id="1">&lt;languageKeyword&gt;NextMarker&lt;/languageKeyword&gt;</ph> element of the XML response.</source>
            <target state="new">The marker value is included in the <ph id="1">&lt;languageKeyword&gt;NextMarker&lt;/languageKeyword&gt;</ph> element of the XML response.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>When the <ph id="1">&lt;languageKeyword&gt;NextMarker&lt;/languageKeyword&gt;</ph> element is empty, the listing is complete.</source>
            <target state="new">When the <ph id="1">&lt;languageKeyword&gt;NextMarker&lt;/languageKeyword&gt;</ph> element is empty, the listing is complete.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>The value of <ph id="1">&lt;languageKeyword&gt;NextMarker&lt;/languageKeyword&gt;</ph> is a string value that is opaque to the client.</source>
            <target state="new">The value of <ph id="1">&lt;languageKeyword&gt;NextMarker&lt;/languageKeyword&gt;</ph> is a string value that is opaque to the client.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>To return the next set of results in a subsequent operation, pass the value returned in the <ph id="1">&lt;languageKeyword&gt;NextMarker&lt;/languageKeyword&gt;</ph> tag as the <ph id="2">&lt;parameterReference&gt;marker&lt;/parameterReference&gt;</ph> parameter on the request URI.</source>
            <target state="new">To return the next set of results in a subsequent operation, pass the value returned in the <ph id="1">&lt;languageKeyword&gt;NextMarker&lt;/languageKeyword&gt;</ph> tag as the <ph id="2">&lt;parameterReference&gt;marker&lt;/parameterReference&gt;</ph> parameter on the request URI.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Filtering List Results</source>
            <target state="new">Filtering List Results</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>The list of results can be filtered by specifying a prefix string on the request by using the <ph id="1">&lt;parameterReference&gt;prefix&lt;/parameterReference&gt;</ph> parameter.</source>
            <target state="new">The list of results can be filtered by specifying a prefix string on the request by using the <ph id="1">&lt;parameterReference&gt;prefix&lt;/parameterReference&gt;</ph> parameter.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>The list operation then returns the entities that have names that begin with that prefix.</source>
            <target state="new">The list operation then returns the entities that have names that begin with that prefix.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>If the <ph id="1">&lt;parameterReference&gt;prefix&lt;/parameterReference&gt;</ph> parameter is specified on the request URI, the response XML includes a <ph id="2">&lt;languageKeyword&gt;Prefix&lt;/languageKeyword&gt;</ph> element containing the prefix character or characters.</source>
            <target state="new">If the <ph id="1">&lt;parameterReference&gt;prefix&lt;/parameterReference&gt;</ph> parameter is specified on the request URI, the response XML includes a <ph id="2">&lt;languageKeyword&gt;Prefix&lt;/languageKeyword&gt;</ph> element containing the prefix character or characters.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>For example, specifying a prefix with a value of 'c' returns <ph id="1">&lt;codeInline&gt;%%amp;lt;Prefix%%amp;gt;&lt;/codeInline&gt;</ph><ph id="2">&lt;parameterReference&gt;c&lt;/parameterReference&gt;</ph><ph id="3">&lt;codeInline&gt;%%amp;lt;/Prefix%%amp;gt;&lt;/codeInline&gt;</ph> within the response XML.</source>
            <target state="new">For example, specifying a prefix with a value of 'c' returns <ph id="1">&lt;codeInline&gt;%%amp;lt;Prefix%%amp;gt;&lt;/codeInline&gt;</ph><ph id="2">&lt;parameterReference&gt;c&lt;/parameterReference&gt;</ph><ph id="3">&lt;codeInline&gt;%%amp;lt;/Prefix%%amp;gt;&lt;/codeInline&gt;</ph> within the response XML.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>For an example, see the <bpt id="1">&lt;legacyLink xlink:href="#ContainerList" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>Container List<ept id="1">&lt;/legacyLink&gt;</ept> section later in this topic.</source>
            <target state="new">For an example, see the <bpt id="1">&lt;legacyLink xlink:href="#ContainerList" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>Container List<ept id="1">&lt;/legacyLink&gt;</ept> section later in this topic.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Traversing the Blob Namespace</source>
            <target state="new">Traversing the Blob Namespace</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;link xlink:href="fa4760a6-5343-4aa1-b484-df823ce817e7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;List Blobs&lt;/link&gt;</ph> operation has an additional <ph id="2">&lt;parameterReference&gt;delimiter&lt;/parameterReference&gt;</ph> parameter that enables the caller to traverse the blob namespace by using a user-configured delimiter.</source>
            <target state="new">The <ph id="1">&lt;link xlink:href="fa4760a6-5343-4aa1-b484-df823ce817e7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;List Blobs&lt;/link&gt;</ph> operation has an additional <ph id="2">&lt;parameterReference&gt;delimiter&lt;/parameterReference&gt;</ph> parameter that enables the caller to traverse the blob namespace by using a user-configured delimiter.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>The delimiter may be a single character or a string.</source>
            <target state="new">The delimiter may be a single character or a string.</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>When the request includes this parameter, the operation returns a <ph id="1">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> element.</source>
            <target state="new">When the request includes this parameter, the operation returns a <ph id="1">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> element.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> element is returned in place of all blobs with names that begin with the same substring up to the appearance of the delimiter character.</source>
            <target state="new">The <ph id="1">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> element is returned in place of all blobs with names that begin with the same substring up to the appearance of the delimiter character.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>The value of the <ph id="1">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> element is <bpt id="2">&lt;placeholder&gt;</bpt>substring+delimiter<ept id="2">&lt;/placeholder&gt;</ept>, where <bpt id="3">&lt;placeholder&gt;</bpt>substring<ept id="3">&lt;/placeholder&gt;</ept> is the common substring that begins one or more blob names, and <bpt id="4">&lt;placeholder&gt;</bpt>delimiter<ept id="4">&lt;/placeholder&gt;</ept> is the value of the <bpt id="5">&lt;placeholder&gt;</bpt>delimiter<ept id="5">&lt;/placeholder&gt;</ept> parameter.</source>
            <target state="new">The value of the <ph id="1">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> element is <bpt id="2">&lt;placeholder&gt;</bpt>substring+delimiter<ept id="2">&lt;/placeholder&gt;</ept>, where <bpt id="3">&lt;placeholder&gt;</bpt>substring<ept id="3">&lt;/placeholder&gt;</ept> is the common substring that begins one or more blob names, and <bpt id="4">&lt;placeholder&gt;</bpt>delimiter<ept id="4">&lt;/placeholder&gt;</ept> is the value of the <bpt id="5">&lt;placeholder&gt;</bpt>delimiter<ept id="5">&lt;/placeholder&gt;</ept> parameter.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>You can use the value of <ph id="1">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> to make a subsequent call to list the blobs that begin with this prefix, by specifying the value of <ph id="2">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> for the <ph id="3">&lt;parameterReference&gt;prefix&lt;/parameterReference&gt;</ph> parameter on the request URI.</source>
            <target state="new">You can use the value of <ph id="1">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> to make a subsequent call to list the blobs that begin with this prefix, by specifying the value of <ph id="2">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> for the <ph id="3">&lt;parameterReference&gt;prefix&lt;/parameterReference&gt;</ph> parameter on the request URI.</target>
          </trans-unit>
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>In this way, you can traverse a virtual hierarchy of blobs as though it were a file system.</source>
            <target state="new">In this way, you can traverse a virtual hierarchy of blobs as though it were a file system.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>For an example, see the <bpt id="1">&lt;legacyLink xlink:href="#DelimitedBlobList" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>Delimited Blob List<ept id="1">&lt;/legacyLink&gt;</ept> example later in this topic.</source>
            <target state="new">For an example, see the <bpt id="1">&lt;legacyLink xlink:href="#DelimitedBlobList" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>Delimited Blob List<ept id="1">&lt;/legacyLink&gt;</ept> example later in this topic.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Note that each <ph id="1">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> returned counts toward the maximum result.</source>
            <target state="new">Note that each <ph id="1">&lt;languageKeyword&gt;BlobPrefix&lt;/languageKeyword&gt;</ph> returned counts toward the maximum result.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Note that you cannot enumerate blob snapshots if you include a delimiter with the request.</source>
            <target state="new">Note that you cannot enumerate blob snapshots if you include a delimiter with the request.</target>
          </trans-unit>
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>If you specify a value for the <ph id="1">&lt;parameterReference&gt;delimiter&lt;/parameterReference&gt;</ph> parameter and also set the <ph id="2">&lt;parameterReference&gt;include=snapshots&lt;/parameterReference&gt;</ph> parameter, the Blob service returns the InvalidQueryParameter error (HTTP status code 400 – Bad Request).</source>
            <target state="new">If you specify a value for the <ph id="1">&lt;parameterReference&gt;delimiter&lt;/parameterReference&gt;</ph> parameter and also set the <ph id="2">&lt;parameterReference&gt;include=snapshots&lt;/parameterReference&gt;</ph> parameter, the Blob service returns the InvalidQueryParameter error (HTTP status code 400 – Bad Request).</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>XML Response Format</source>
            <target state="new">XML Response Format</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>The list output is an XML document whose format is similar to those shown in the code examples later in this topic.</source>
            <target state="new">The list output is an XML document whose format is similar to those shown in the code examples later in this topic.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Note that the response body includes the values of all parameters that were specified on the request URI as elements within the response body.</source>
            <target state="new">Note that the response body includes the values of all parameters that were specified on the request URI as elements within the response body.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;unmanagedCodeEntityReference&gt;DateTime&lt;/unmanagedCodeEntityReference&gt;</ph> value returned in the <ph id="2">&lt;languageKeyword&gt;Last-Modified&lt;/languageKeyword&gt;</ph> element is in RFC 1123 format.</source>
            <target state="new">The <ph id="1">&lt;unmanagedCodeEntityReference&gt;DateTime&lt;/unmanagedCodeEntityReference&gt;</ph> value returned in the <ph id="2">&lt;languageKeyword&gt;Last-Modified&lt;/languageKeyword&gt;</ph> element is in RFC 1123 format.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>For more information about <ph id="1">&lt;parameterReference&gt;DateTime&lt;/parameterReference&gt;</ph> values, see <ph id="2">&lt;link xlink:href="d4f67d84-a51c-4ff7-8bd0-0ae206c9e3c9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Representation of Date/Time Values&lt;/link&gt;</ph>.</source>
            <target state="new">For more information about <ph id="1">&lt;parameterReference&gt;DateTime&lt;/parameterReference&gt;</ph> values, see <ph id="2">&lt;link xlink:href="d4f67d84-a51c-4ff7-8bd0-0ae206c9e3c9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Representation of Date/Time Values&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Container List</source>
            <target state="new">Container List</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>This example shows the result of an enumeration operation returning two containers.</source>
            <target state="new">This example shows the result of an enumeration operation returning two containers.</target>
          </trans-unit>
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>The request URI is as follows:</source>
            <target state="new">The request URI is as follows:</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>The prefix 'c' was specified to filter the list.</source>
            <target state="new">The prefix 'c' was specified to filter the list.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>The maximum number of results to return was set to 3.</source>
            <target state="new">The maximum number of results to return was set to 3.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>The NextMarker tag shows the name of the container that will be returned on a subsequent list operation.</source>
            <target state="new">The NextMarker tag shows the name of the container that will be returned on a subsequent list operation.</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Blob and Snapshot List</source>
            <target state="new">Blob and Snapshot List</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>This example shows the result of an enumeration operation that returns blobs and snapshots in a container named <bpt id="1">&lt;placeholder&gt;</bpt>mycontainer<ept id="1">&lt;/placeholder&gt;</ept>.</source>
            <target state="new">This example shows the result of an enumeration operation that returns blobs and snapshots in a container named <bpt id="1">&lt;placeholder&gt;</bpt>mycontainer<ept id="1">&lt;/placeholder&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>The request URI is as follows:</source>
            <target state="new">The request URI is as follows:</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>The response includes both the blobs and snapshots:</source>
            <target state="new">The response includes both the blobs and snapshots:</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>Delimited Blob List</source>
            <target state="new">Delimited Blob List</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>This example shows the result of an enumeration operation returning blobs beneath a container named <bpt id="1">&lt;placeholder&gt;</bpt>mycontainer<ept id="1">&lt;/placeholder&gt;</ept>.</source>
            <target state="new">This example shows the result of an enumeration operation returning blobs beneath a container named <bpt id="1">&lt;placeholder&gt;</bpt>mycontainer<ept id="1">&lt;/placeholder&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>The request URI is as follows:</source>
            <target state="new">The request URI is as follows:</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>In this case, the <ph id="1">&lt;parameterReference&gt;delimiter&lt;/parameterReference&gt;</ph> parameter has been specified as '/'.</source>
            <target state="new">In this case, the <ph id="1">&lt;parameterReference&gt;delimiter&lt;/parameterReference&gt;</ph> parameter has been specified as '/'.</target>
          </trans-unit>
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>The response body includes the <ph id="1">&lt;unmanagedCodeEntityReference&gt;BlobPrefix&lt;/unmanagedCodeEntityReference&gt;</ph> tag, which represents the group of blobs beginning with the same substring, including the delimiter.</source>
            <target state="new">The response body includes the <ph id="1">&lt;unmanagedCodeEntityReference&gt;BlobPrefix&lt;/unmanagedCodeEntityReference&gt;</ph> tag, which represents the group of blobs beginning with the same substring, including the delimiter.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>The sample blobs beneath the container are as follows.</source>
            <target state="new">The sample blobs beneath the container are as follows.</target>
          </trans-unit>
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>The first four are returned in the first enumeration operation, because <ph id="1">&lt;parameterReference&gt;MaxResults&lt;/parameterReference&gt;</ph> is set to 4.</source>
            <target state="new">The first four are returned in the first enumeration operation, because <ph id="1">&lt;parameterReference&gt;MaxResults&lt;/parameterReference&gt;</ph> is set to 4.</target>
          </trans-unit>
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>Note that <bpt id="1">&lt;placeholder&gt;</bpt>myfolder/blobA.txt<ept id="1">&lt;/placeholder&gt;</ept> and <bpt id="2">&lt;placeholder&gt;</bpt>myfolder/blobB.txt<ept id="2">&lt;/placeholder&gt;</ept> are grouped together in the response body in the <ph id="3">&lt;unmanagedCodeEntityReference&gt;BlobPrefix&lt;/unmanagedCodeEntityReference&gt;</ph> tag and count as a single blob in terms of the number of entities returned.</source>
            <target state="new">Note that <bpt id="1">&lt;placeholder&gt;</bpt>myfolder/blobA.txt<ept id="1">&lt;/placeholder&gt;</ept> and <bpt id="2">&lt;placeholder&gt;</bpt>myfolder/blobB.txt<ept id="2">&lt;/placeholder&gt;</ept> are grouped together in the response body in the <ph id="3">&lt;unmanagedCodeEntityReference&gt;BlobPrefix&lt;/unmanagedCodeEntityReference&gt;</ph> tag and count as a single blob in terms of the number of entities returned.</target>
          </trans-unit>
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>To return the blobs beginning with this prefix, make a subsequent request in which the prefix parameter is set to <bpt id="1">&lt;placeholder&gt;</bpt>myfolder/<ept id="1">&lt;/placeholder&gt;</ept>.</source>
            <target state="new">To return the blobs beginning with this prefix, make a subsequent request in which the prefix parameter is set to <bpt id="1">&lt;placeholder&gt;</bpt>myfolder/<ept id="1">&lt;/placeholder&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>blob1.txt</source>
            <target state="new">blob1.txt</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>blob2.txt</source>
            <target state="new">blob2.txt</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>myfolder/blobA.txt</source>
            <target state="new">myfolder/blobA.txt</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>myfolder/blobB.txt</source>
            <target state="new">myfolder/blobB.txt</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>newblob1.txt</source>
            <target state="new">newblob1.txt</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>newblob2.txt</source>
            <target state="new">newblob2.txt</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>The next blob to be returned is newblob2.txt, returned in the <ph id="1">&lt;unmanagedCodeEntityReference&gt;NextMarker&lt;/unmanagedCodeEntityReference&gt;</ph> tag.</source>
            <target state="new">The next blob to be returned is newblob2.txt, returned in the <ph id="1">&lt;unmanagedCodeEntityReference&gt;NextMarker&lt;/unmanagedCodeEntityReference&gt;</ph> tag.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>Enumerating Blobs in the Root Container</source>
            <target state="new">Enumerating Blobs in the Root Container</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>To enumerate blobs in the root container, you can use the following URL:</source>
            <target state="new">To enumerate blobs in the root container, you can use the following URL:</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>Keep in mind that when you list the blobs in the root container, the XML response body does not include an explicit reference to the root container in the blob's <ph id="1">&lt;languageKeyword&gt;URL&lt;/languageKeyword&gt;</ph> field.</source>
            <target state="new">Keep in mind that when you list the blobs in the root container, the XML response body does not include an explicit reference to the root container in the blob's <ph id="1">&lt;languageKeyword&gt;URL&lt;/languageKeyword&gt;</ph> field.</target>
          </trans-unit>
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>Here's a sample response listing blobs in the root container:</source>
            <target state="new">Here's a sample response listing blobs in the root container:</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>