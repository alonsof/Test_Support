<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="pt-BR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANjDsOwjAQBa/iA3glr+PEfpRU1IgL+LMrRQoJCkbK8XE3xcyoTlKCryQSAgVWR8WlQtVxXgDlnGFNK9qW0BKhQIYVhdLCgSIAdnCJPVvjp1FyFUKcZhpTDFJQZSQ/N8eaZmuG+Ol0f1pzbauqXP12HkcfuTXRmsfvnffXmffvlvt67H8DskpVoQAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Policy Element</source>
            <target state="new">Policy Element</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Policy Element</source>
            <target state="new">Policy Element</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>This topic provides the JSON format that is supported by the July 2015 Release of PowerShell.</source>
            <target state="new">This topic provides the JSON format that is supported by the July 2015 Release of PowerShell.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>If you are using an older version, see  <ph id="1">&lt;link xlink:href="6181047b-27fe-4cdb-b7f5-7ba2fe4443f7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Policy Element&lt;/link&gt;</ph> for the old JSON format.</source>
            <target state="new">If you are using an older version, see  <ph id="1">&lt;link xlink:href="6181047b-27fe-4cdb-b7f5-7ba2fe4443f7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Policy Element&lt;/link&gt;</ph> for the old JSON format.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Policy<ept id="1">&lt;/embeddedLabel&gt;</ept> section in an Azure Data Factory table JSON defines validation policies on the table.</source>
            <target state="new">The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Policy<ept id="1">&lt;/embeddedLabel&gt;</ept> section in an Azure Data Factory table JSON defines validation policies on the table.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The Azure Data Factory Service checks whether the data fulfills the condition you specify in this section.</source>
            <target state="new">The Azure Data Factory Service checks whether the data fulfills the condition you specify in this section.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The list of supported validation polices are shown in the following table:</source>
            <target state="new">The list of supported validation polices are shown in the following table:</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Policy Name</source>
            <target state="new">Policy Name</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Applied To</source>
            <target state="new">Applied To</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>minimumSizeMB</source>
            <target state="new">minimumSizeMB</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Validates that the data in an Azure blob meets the minimum size requirements (in megabytes).</source>
            <target state="new">Validates that the data in an Azure blob meets the minimum size requirements (in megabytes).</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Azure Blob</source>
            <target state="new">Azure Blob</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>minimumRows</source>
            <target state="new">minimumRows</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Validates that the data in an Azure SQL database or an Azure table contains the minimum number of rows.</source>
            <target state="new">Validates that the data in an Azure SQL database or an Azure table contains the minimum number of rows.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Azure SQL Database</source>
            <target state="new">Azure SQL Database</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Azure Table</source>
            <target state="new">Azure Table</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>validationPriorityOrder</source>
            <target state="new">validationPriorityOrder</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Determines the order in which validation is performed on slices.</source>
            <target state="new">Determines the order in which validation is performed on slices.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Possible values are: OldestFirst (default) and NewestFirst.</source>
            <target state="new">Possible values are: OldestFirst (default) and NewestFirst.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>All</source>
            <target state="new">All</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>externalData</source>
            <target state="new">externalData</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>See the following <ph id="1">&lt;link xlink:href="2308b1ce-9735-42c9-97f9-c19825d01f85#External" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;External tables&lt;/link&gt;</ph> section for details.</source>
            <target state="new">See the following <ph id="1">&lt;link xlink:href="2308b1ce-9735-42c9-97f9-c19825d01f85#External" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;External tables&lt;/link&gt;</ph> section for details.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Azure Blob</source>
            <target state="new">Azure Blob</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>External tables</source>
            <target state="new">External tables</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>External tables refer to tables that are <bpt id="1">&lt;embeddedLabel&gt;</bpt>not<ept id="1">&lt;/embeddedLabel&gt;</ept> explicitly produced by the pipelines running in the Azure Data Factory.</source>
            <target state="new">External tables refer to tables that are <bpt id="1">&lt;embeddedLabel&gt;</bpt>not<ept id="1">&lt;/embeddedLabel&gt;</ept> explicitly produced by the pipelines running in the Azure Data Factory.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>For example, the input data for a Copy Activity might be produced outside of the Azure Data Factory, and copied to Azure blob storage.</source>
            <target state="new">For example, the input data for a Copy Activity might be produced outside of the Azure Data Factory, and copied to Azure blob storage.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>To define an external table, you set the <bpt id="1">&lt;embeddedLabel&gt;</bpt>external<ept id="1">&lt;/embeddedLabel&gt;</ept> property in the table JSON to <bpt id="2">&lt;embeddedLabel&gt;</bpt>true<ept id="2">&lt;/embeddedLabel&gt;</ept> as shown in the following table.</source>
            <target state="new">To define an external table, you set the <bpt id="1">&lt;embeddedLabel&gt;</bpt>external<ept id="1">&lt;/embeddedLabel&gt;</ept> property in the table JSON to <bpt id="2">&lt;embeddedLabel&gt;</bpt>true<ept id="2">&lt;/embeddedLabel&gt;</ept> as shown in the following table.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>You can also define an external table by specifying policy settings for external tables using the <bpt id="1">&lt;embeddedLabel&gt;</bpt>externalData<ept id="1">&lt;/embeddedLabel&gt;</ept> element in the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Policy<ept id="2">&lt;/embeddedLabel&gt;</ept> section.</source>
            <target state="new">You can also define an external table by specifying policy settings for external tables using the <bpt id="1">&lt;embeddedLabel&gt;</bpt>externalData<ept id="1">&lt;/embeddedLabel&gt;</ept> element in the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Policy<ept id="2">&lt;/embeddedLabel&gt;</ept> section.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>When you define policies using <bpt id="1">&lt;embeddedLabel&gt;</bpt>externalData<ept id="1">&lt;/embeddedLabel&gt;</ept> element, setting <bpt id="2">&lt;embeddedLabel&gt;</bpt>external<ept id="2">&lt;/embeddedLabel&gt;</ept> property to <bpt id="3">&lt;embeddedLabel&gt;</bpt>true<ept id="3">&lt;/embeddedLabel&gt;</ept> is optional.</source>
            <target state="new">When you define policies using <bpt id="1">&lt;embeddedLabel&gt;</bpt>externalData<ept id="1">&lt;/embeddedLabel&gt;</ept> element, setting <bpt id="2">&lt;embeddedLabel&gt;</bpt>external<ept id="2">&lt;/embeddedLabel&gt;</ept> property to <bpt id="3">&lt;embeddedLabel&gt;</bpt>true<ept id="3">&lt;/embeddedLabel&gt;</ept> is optional.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>For external tables, the data slices to be marked as <bpt id="1">&lt;embeddedLabel&gt;</bpt>Ready<ept id="1">&lt;/embeddedLabel&gt;</ept> once the data is available in the store.</source>
            <target state="new">For external tables, the data slices to be marked as <bpt id="1">&lt;embeddedLabel&gt;</bpt>Ready<ept id="1">&lt;/embeddedLabel&gt;</ept> once the data is available in the store.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The following table lists the properties used in the <bpt id="1">&lt;embeddedLabel&gt;</bpt>externalData<ept id="1">&lt;/embeddedLabel&gt;</ept> section of the JSON script.</source>
            <target state="new">The following table lists the properties used in the <bpt id="1">&lt;embeddedLabel&gt;</bpt>externalData<ept id="1">&lt;/embeddedLabel&gt;</ept> section of the JSON script.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Default Value</source>
            <target state="new">Default Value</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>dataDelay</source>
            <target state="new">dataDelay</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Time to delay the check on availability of the external data.</source>
            <target state="new">Time to delay the check on availability of the external data.</target>
          </trans-unit>
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>For example if the data is supposed to be available hourly, the check to see the external data is actually available and the corresponding slice is Ready can be delayed by DataDelay.</source>
            <target state="new">For example if the data is supposed to be available hourly, the check to see the external data is actually available and the corresponding slice is Ready can be delayed by DataDelay.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Only applies to the present time; for example, if it is 1:00 PM right now and this value is 10 minutes, the validation will start at 1:10 PM.</source>
            <target state="new">Only applies to the present time; for example, if it is 1:00 PM right now and this value is 10 minutes, the validation will start at 1:10 PM.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>This setting does not affect slices in the past (slices with Slice End Time + dataDelay &lt; Now) will be processed without any delay.</source>
            <target state="new">This setting does not affect slices in the past (slices with Slice End Time + dataDelay &lt; Now) will be processed without any delay.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>0</source>
            <target state="new">0</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>retryInterval</source>
            <target state="new">retryInterval</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>The wait time between a failure and the next retry attempt.</source>
            <target state="new">The wait time between a failure and the next retry attempt.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Applies to present time; if the previous try failed, we wait this long after the last try.</source>
            <target state="new">Applies to present time; if the previous try failed, we wait this long after the last try.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>If it is 1:00pm right now, we will begin the first try.</source>
            <target state="new">If it is 1:00pm right now, we will begin the first try.</target>
          </trans-unit>
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>If the duration to complete the first validation check is 1 minute and the operation failed, the next retry will be at 1:00 + 1min (duration) + 1min (retry interval) = 1:02pm.</source>
            <target state="new">If the duration to complete the first validation check is 1 minute and the operation failed, the next retry will be at 1:00 + 1min (duration) + 1min (retry interval) = 1:02pm.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>For slices in the past, there will be no delay.</source>
            <target state="new">For slices in the past, there will be no delay.</target>
          </trans-unit>
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>The retry will happen immediately.</source>
            <target state="new">The retry will happen immediately.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>00:01:00 (1 minute)</source>
            <target state="new">00:01:00 (1 minute)</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>retryTimeout</source>
            <target state="new">retryTimeout</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>The timeout for each retry attempt.</source>
            <target state="new">The timeout for each retry attempt.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>If this is set to 10 minutes, the validation needs to be completed within 10 minutes.</source>
            <target state="new">If this is set to 10 minutes, the validation needs to be completed within 10 minutes.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>If it takes longer than 10 minutes to perform the validation (e.g. there are 1,000,000 rows in azure storage) the retry will time out.</source>
            <target state="new">If it takes longer than 10 minutes to perform the validation (e.g. there are 1,000,000 rows in azure storage) the retry will time out.</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>If all attempts for the validation time out, the slice will be marked as TimedOut.</source>
            <target state="new">If all attempts for the validation time out, the slice will be marked as TimedOut.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>00:10:00 (10 minutes)</source>
            <target state="new">00:10:00 (10 minutes)</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>maximumRetry</source>
            <target state="new">maximumRetry</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>Number of times to check for the availability of the external data.</source>
            <target state="new">Number of times to check for the availability of the external data.</target>
          </trans-unit>
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>The allowed maximum value is 10.</source>
            <target state="new">The allowed maximum value is 10.</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>3</source>
            <target state="new">3</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>