<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="pt-BR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANyTsOwjAMANCr5ACxFMfOj5GJGXEB52OpUmlRCVKPT4c3PVUalX2DMZiBUR1Ulys0hxJLURQp1jSKOTZU6D4FYMUAmagD1hqpqQuNnDXFUcaRHcTUCLiXAjkFBuw15VDTEErWoDWfCfenNee6qI5z3o59n9b46y6P31u21yHbd5W57NsfZICy9aIAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Apply SQL Transformation</source>
            <target state="new">Apply SQL Transformation</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Runs a SQLite query on input datasets to transform the data</source>
            <target state="new">Runs a SQLite query on input datasets to transform the data</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Category: <bpt id="1">&lt;legacyLink xlink:href="92B32033-F75F-4854-AC8F-9110B3FE7E09" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>Data Transformation / Manipulation<ept id="1">&lt;/legacyLink&gt;</ept></source>
            <target state="new">Category: <bpt id="1">&lt;legacyLink xlink:href="92B32033-F75F-4854-AC8F-9110B3FE7E09" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>Data Transformation / Manipulation<ept id="1">&lt;/legacyLink&gt;</ept></target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Module Overview</source>
            <target state="new">Module Overview</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>You can use the <bpt id="1">&lt;ui&gt;</bpt>Apply SQL Transformation<ept id="1">&lt;/ui&gt;</ept> module to specify a SQL query, using the SQLite syntax, to work with values in the input datasets.</source>
            <target state="new">You can use the <bpt id="1">&lt;ui&gt;</bpt>Apply SQL Transformation<ept id="1">&lt;/ui&gt;</ept> module to specify a SQL query, using the SQLite syntax, to work with values in the input datasets.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>SQL statements are handy when you need to modify your data or persist it for use in other environments.</source>
            <target state="new">SQL statements are handy when you need to modify your data or persist it for use in other environments.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>For example, using <bpt id="1">&lt;ui&gt;</bpt>Apply SQL Transformation<ept id="1">&lt;/ui&gt;</ept>, you can:</source>
            <target state="new">For example, using <bpt id="1">&lt;ui&gt;</bpt>Apply SQL Transformation<ept id="1">&lt;/ui&gt;</ept>, you can:</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Create tables for results and save the datasets in a portable database.</source>
            <target state="new">Create tables for results and save the datasets in a portable database.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Perform custom transformations on data types, or create aggregates.</source>
            <target state="new">Perform custom transformations on data types, or create aggregates.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Execute SQL query statements to filter or alter data and return the query results as a data table.</source>
            <target state="new">Execute SQL query statements to filter or alter data and return the query results as a data table.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>How to Configure Apply SQL Transformation</source>
            <target state="new">How to Configure Apply SQL Transformation</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The module can take up to three datasets as inputs.</source>
            <target state="new">The module can take up to three datasets as inputs.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>When you reference the datasets connected to each input port, use the names t1, t2, and t3.</source>
            <target state="new">When you reference the datasets connected to each input port, use the names t1, t2, and t3.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>The table number indicates the index of the input port.</source>
            <target state="new">The table number indicates the index of the input port.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The remaining parameter is a SQL query, which uses the SQLite syntax.</source>
            <target state="new">The remaining parameter is a SQL query, which uses the SQLite syntax.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Examples</source>
            <target state="new">Examples</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>For an example of how this module might be used in machine learning experiments, see this sample in the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Model Gallery<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://gallery.azureml.net/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>:</source>
            <target state="new">For an example of how this module might be used in machine learning experiments, see this sample in the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Model Gallery<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://gallery.azureml.net/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>:</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Apply SQL Transformation<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=525947&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample uses the Restaurant Ratings, Restaurant Features, and Restaurant Customers dataset to illustrate simple joins, select statements, and aggregate functions.</source>
            <target state="new">The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Apply SQL Transformation<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=525947&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample uses the Restaurant Ratings, Restaurant Features, and Restaurant Customers dataset to illustrate simple joins, select statements, and aggregate functions.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Syntax Notes and Examples</source>
            <target state="new">Syntax Notes and Examples</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>This module supports all standard statements of the SQLite syntax.</source>
            <target state="new">This module supports all standard statements of the SQLite syntax.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>When typing multiple lines in the SQL Script text box, use a semi-colon to terminate the statement.</source>
            <target state="new">When typing multiple lines in the SQL Script text box, use a semi-colon to terminate the statement.</target>
          </trans-unit>
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Otherwise, line breaks are converted to spaces.</source>
            <target state="new">Otherwise, line breaks are converted to spaces.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>For example, the following statements are equivalent:</source>
            <target state="new">For example, the following statements are equivalent:</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>If a column name duplicates the name of a reserved keyword, syntax highlighting will be applied.</source>
            <target state="new">If a column name duplicates the name of a reserved keyword, syntax highlighting will be applied.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>For example, in the following query on the Blood Donation dataset, Time is a valid column name and is also a reserved keyword.</source>
            <target state="new">For example, in the following query on the Blood Donation dataset, Time is a valid column name and is also a reserved keyword.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>In some cases, the query will return the correct results, but to avoid confusion, you should enclose column names with square brackets or double quotation marks.</source>
            <target state="new">In some cases, the query will return the correct results, but to avoid confusion, you should enclose column names with square brackets or double quotation marks.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Note that syntax highlighting remains on the keyword even after it is enclosed in quotes or brackets.</source>
            <target state="new">Note that syntax highlighting remains on the keyword even after it is enclosed in quotes or brackets.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>SQLite is case insensitive, except for a few commands that have case-sensitive variants with different meanings (GLOB vs. glob).</source>
            <target state="new">SQLite is case insensitive, except for a few commands that have case-sensitive variants with different meanings (GLOB vs. glob).</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>You can add comments by using either  <ph id="1">&lt;codeInline&gt;--&lt;/codeInline&gt;</ph> at the beginning of each line, or by enclosing text using <ph id="2">&lt;codeInline&gt;/* */&lt;/codeInline&gt;</ph>.</source>
            <target state="new">You can add comments by using either  <ph id="1">&lt;codeInline&gt;--&lt;/codeInline&gt;</ph> at the beginning of each line, or by enclosing text using <ph id="2">&lt;codeInline&gt;/* */&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>For example, this statement is valid:</source>
            <target state="new">For example, this statement is valid:</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>SELECT</source>
            <target state="new">SELECT</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>In the SELECT statement, column names that include spaces or other characters prohibited in identifiers must be enclosed in double quotation marks or in square brackets.</source>
            <target state="new">In the SELECT statement, column names that include spaces or other characters prohibited in identifiers must be enclosed in double quotation marks or in square brackets.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>This query uses the Two-Class Iris dataset on <ph id="1">&lt;codeInline&gt;t1&lt;/codeInline&gt;</ph>.</source>
            <target state="new">This query uses the Two-Class Iris dataset on <ph id="1">&lt;codeInline&gt;t1&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>This example demonstrates how to filter values in the dataset using a WHERE clause.</source>
            <target state="new">This example demonstrates how to filter values in the dataset using a WHERE clause.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Identifiers that include spaces, hyphens, etc. must be enclosed in brackets or quotation marks.</source>
            <target state="new">Identifiers that include spaces, hyphens, etc. must be enclosed in brackets or quotation marks.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Joins</source>
            <target state="new">Joins</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>The following examples use the Restaurant Ratings dataset on the input port corresponding to <ph id="1">&lt;codeInline&gt;t1&lt;/codeInline&gt;</ph>, and the Restaurant Features dataset on the input port corresponding to <ph id="2">&lt;codeInline&gt;t2&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The following examples use the Restaurant Ratings dataset on the input port corresponding to <ph id="1">&lt;codeInline&gt;t1&lt;/codeInline&gt;</ph>, and the Restaurant Features dataset on the input port corresponding to <ph id="2">&lt;codeInline&gt;t2&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>The following statement joins the two tables to create a dataset that combines the specified restaurant features with average ratings for each restaurant.</source>
            <target state="new">The following statement joins the two tables to create a dataset that combines the specified restaurant features with average ratings for each restaurant.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Aggregate functions</source>
            <target state="new">Aggregate functions</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>The following query returns a dataset containing the restaurant ID, along with the average rating for the restaurant.</source>
            <target state="new">The following query returns a dataset containing the restaurant ID, along with the average rating for the restaurant.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Aggregate functions currently supported are: <ph id="1">&lt;languageKeyword&gt;AVG&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;COUNT&lt;/languageKeyword&gt;</ph>, <ph id="3">&lt;languageKeyword&gt;MAX&lt;/languageKeyword&gt;</ph>, <ph id="4">&lt;languageKeyword&gt;MIN&lt;/languageKeyword&gt;</ph>, <ph id="5">&lt;languageKeyword&gt;SUM&lt;/languageKeyword&gt;</ph>, <ph id="6">&lt;languageKeyword&gt;TOTAL&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">Aggregate functions currently supported are: <ph id="1">&lt;languageKeyword&gt;AVG&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;COUNT&lt;/languageKeyword&gt;</ph>, <ph id="3">&lt;languageKeyword&gt;MAX&lt;/languageKeyword&gt;</ph>, <ph id="4">&lt;languageKeyword&gt;MIN&lt;/languageKeyword&gt;</ph>, <ph id="5">&lt;languageKeyword&gt;SUM&lt;/languageKeyword&gt;</ph>, <ph id="6">&lt;languageKeyword&gt;TOTAL&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Working with Strings</source>
            <target state="new">Working with Strings</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>SQLite supports the double pipe operator for concatenating strings.</source>
            <target state="new">SQLite supports the double pipe operator for concatenating strings.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>The following statement creates a new column by concatenating two text columns.</source>
            <target state="new">The following statement creates a new column by concatenating two text columns.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>The Transact-SQL string concatenation operator is not supported: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>+ (String Concatenation)<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://msdn.microsoft.com/en-us/library/ms177561.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>, </source>
            <target state="new">The Transact-SQL string concatenation operator is not supported: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>+ (String Concatenation)<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://msdn.microsoft.com/en-us/library/ms177561.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>, </target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>For example, the expression <ph id="1">&lt;codeInline&gt;('city + '-' + state) AS 'Target Region'&lt;/codeInline&gt;</ph>in the example query would return 0 for all values.</source>
            <target state="new">For example, the expression <ph id="1">&lt;codeInline&gt;('city + '-' + state) AS 'Target Region'&lt;/codeInline&gt;</ph>in the example query would return 0 for all values.</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>However, even though the operator is not supported for this data type, no error is raised in Azure Machine Learning.</source>
            <target state="new">However, even though the operator is not supported for this data type, no error is raised in Azure Machine Learning.</target>
          </trans-unit>
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Be sure to verify the results of <bpt id="1">&lt;ui&gt;</bpt>Apply SQL Transformation<ept id="1">&lt;/ui&gt;</ept> before using the resulting dataset in an experiment.</source>
            <target state="new">Be sure to verify the results of <bpt id="1">&lt;ui&gt;</bpt>Apply SQL Transformation<ept id="1">&lt;/ui&gt;</ept> before using the resulting dataset in an experiment.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>COALESCE and CASE</source>
            <target state="new">COALESCE and CASE</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>COALESCE evaluates multiple arguments in order and returns the value of the first expression that does not evaluate to NULL.</source>
            <target state="new">COALESCE evaluates multiple arguments in order and returns the value of the first expression that does not evaluate to NULL.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>For example, this query on the Steel Annealing Multi-Class dataset returns the first non-null flag from a list of columns assumed to have mutually exclusive values.</source>
            <target state="new">For example, this query on the Steel Annealing Multi-Class dataset returns the first non-null flag from a list of columns assumed to have mutually exclusive values.</target>
          </trans-unit>
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>If no flag is found, the string “none” is returned.</source>
            <target state="new">If no flag is found, the string “none” is returned.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>The CASE statement is useful for testing values and returning a new value based on the evaluated results.</source>
            <target state="new">The CASE statement is useful for testing values and returning a new value based on the evaluated results.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>SQLite supports the following syntax for CASE statements:</source>
            <target state="new">SQLite supports the following syntax for CASE statements:</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>CASE WHEN [condition] THEN [expression] ELSE [expression] END</source>
            <target state="new">CASE WHEN [condition] THEN [expression] ELSE [expression] END</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>CASE [expression] WHEN [value] THEN [expression] ELSE [expression] END</source>
            <target state="new">CASE [expression] WHEN [value] THEN [expression] ELSE [expression] END</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>For example, suppose you had previously used the <ph id="1">&lt;link xlink:href="6ea59c36-f283-410e-b34c-edfabfac39b0" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Indicator Values&lt;/link&gt;</ph> module to create a set feature columns containing true-false values.</source>
            <target state="new">For example, suppose you had previously used the <ph id="1">&lt;link xlink:href="6ea59c36-f283-410e-b34c-edfabfac39b0" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Indicator Values&lt;/link&gt;</ph> module to create a set feature columns containing true-false values.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>The following query collapses the values in multiple feature columns into a single multivalued column.</source>
            <target state="new">The following query collapses the values in multiple feature columns into a single multivalued column.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>Unsupported Statements</source>
            <target state="new">Unsupported Statements</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>Although SQLite supports much of the ANSI SQL standard, it does not include many features supported by commercial relational database systems.</source>
            <target state="new">Although SQLite supports much of the ANSI SQL standard, it does not include many features supported by commercial relational database systems.</target>
          </trans-unit>
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>In addition to the list of non-supported functions provided on the official SQLite site, the following wiki provides a list of other unsupported features: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>SQLite - Unsupported SQL<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://www2.sqlite.org/cvstrac/wiki?p=UnsupportedSql&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept></source>
            <target state="new">In addition to the list of non-supported functions provided on the official SQLite site, the following wiki provides a list of other unsupported features: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>SQLite - Unsupported SQL<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://www2.sqlite.org/cvstrac/wiki?p=UnsupportedSql&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept></target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>You can use <ph id="1">&lt;languageKeyword&gt;RENAME TABLE&lt;/languageKeyword&gt;</ph> and <ph id="2">&lt;languageKeyword&gt;ADD COLUMN&lt;/languageKeyword&gt;</ph> statements with the <ph id="3">&lt;languageKeyword&gt;ALTER TABLE&lt;/languageKeyword&gt;</ph> command, but other clauses are not supported, including <ph id="4">&lt;languageKeyword&gt;DROP COLUMN&lt;/languageKeyword&gt;</ph>, <ph id="5">&lt;languageKeyword&gt;ALTER COLUMN&lt;/languageKeyword&gt;</ph>, and <ph id="6">&lt;languageKeyword&gt;ADD CONSTRAINT&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">You can use <ph id="1">&lt;languageKeyword&gt;RENAME TABLE&lt;/languageKeyword&gt;</ph> and <ph id="2">&lt;languageKeyword&gt;ADD COLUMN&lt;/languageKeyword&gt;</ph> statements with the <ph id="3">&lt;languageKeyword&gt;ALTER TABLE&lt;/languageKeyword&gt;</ph> command, but other clauses are not supported, including <ph id="4">&lt;languageKeyword&gt;DROP COLUMN&lt;/languageKeyword&gt;</ph>, <ph id="5">&lt;languageKeyword&gt;ALTER COLUMN&lt;/languageKeyword&gt;</ph>, and <ph id="6">&lt;languageKeyword&gt;ADD CONSTRAINT&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>You can create a VIEW within SQLite, but thereafter views are read-only.</source>
            <target state="new">You can create a VIEW within SQLite, but thereafter views are read-only.</target>
          </trans-unit>
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>You cannot execute a <ph id="1">&lt;languageKeyword&gt;DELETE&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;INSERT&lt;/languageKeyword&gt;</ph>, or <ph id="3">&lt;languageKeyword&gt;UPDATE&lt;/languageKeyword&gt;</ph> statement on a view.</source>
            <target state="new">You cannot execute a <ph id="1">&lt;languageKeyword&gt;DELETE&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;INSERT&lt;/languageKeyword&gt;</ph>, or <ph id="3">&lt;languageKeyword&gt;UPDATE&lt;/languageKeyword&gt;</ph> statement on a view.</target>
          </trans-unit>
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>However, you can create a trigger that fires on an attempt to <ph id="1">&lt;languageKeyword&gt;DELETE&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;INSERT&lt;/languageKeyword&gt;</ph>, or <ph id="3">&lt;languageKeyword&gt;UPDATE&lt;/languageKeyword&gt;</ph> on a view and perform other operations in the body of the trigger.</source>
            <target state="new">However, you can create a trigger that fires on an attempt to <ph id="1">&lt;languageKeyword&gt;DELETE&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;INSERT&lt;/languageKeyword&gt;</ph>, or <ph id="3">&lt;languageKeyword&gt;UPDATE&lt;/languageKeyword&gt;</ph> on a view and perform other operations in the body of the trigger.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Technical Notes</source>
            <target state="new">Technical Notes</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>An input is required on port 1.</source>
            <target state="new">An input is required on port 1.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>If the input dataset has column names, the columns in the output dataset will use the column names from the input dataset.</source>
            <target state="new">If the input dataset has column names, the columns in the output dataset will use the column names from the input dataset.</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>If the input dataset does not have column names, the column names in the table are automatically created by using the following naming convention: T1COL1, T1COL2, T1COL3, and so on, where the numbers indicate the index of each column in the input dataset.</source>
            <target state="new">If the input dataset does not have column names, the column names in the table are automatically created by using the following naming convention: T1COL1, T1COL2, T1COL3, and so on, where the numbers indicate the index of each column in the input dataset.</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>For column names that contain a space or other special characters, use square brackets or double quotation marks when referring to the columns in the <ph id="1">&lt;languageKeyword&gt;SELECT&lt;/languageKeyword&gt;</ph> or <ph id="2">&lt;languageKeyword&gt;WHERE&lt;/languageKeyword&gt;</ph> clauses.</source>
            <target state="new">For column names that contain a space or other special characters, use square brackets or double quotation marks when referring to the columns in the <ph id="1">&lt;languageKeyword&gt;SELECT&lt;/languageKeyword&gt;</ph> or <ph id="2">&lt;languageKeyword&gt;WHERE&lt;/languageKeyword&gt;</ph> clauses.</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>What is SQLite?</source>
            <target state="new">What is SQLite?</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>SQLite is a public domain relational database management system that is contained in a C programming library.</source>
            <target state="new">SQLite is a public domain relational database management system that is contained in a C programming library.</target>
          </trans-unit>
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>SQLite is a popular choice as an embedded database for local storage in web browsers.</source>
            <target state="new">SQLite is a popular choice as an embedded database for local storage in web browsers.</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>SQLite was originally designed in 2000 for the U.S. Navy, to support serverless transactions.</source>
            <target state="new">SQLite was originally designed in 2000 for the U.S. Navy, to support serverless transactions.</target>
          </trans-unit>
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>It is a self-contained database engine that has no management system and hence requires no configuration or administration.</source>
            <target state="new">It is a self-contained database engine that has no management system and hence requires no configuration or administration.</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>SQLite implements most SQL standards.</source>
            <target state="new">SQLite implements most SQL standards.</target>
          </trans-unit>
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>However, be aware of the following restrictions when creating SQL statements:</source>
            <target state="new">However, be aware of the following restrictions when creating SQL statements:</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>SQLite uses dynamic typing for values, rather than assigning a type to a column as in most relational database systems.</source>
            <target state="new">SQLite uses dynamic typing for values, rather than assigning a type to a column as in most relational database systems.</target>
          </trans-unit>
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>It is weakly typed, and allows implicit type conversion.</source>
            <target state="new">It is weakly typed, and allows implicit type conversion.</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>LEFT OUTER JOIN is implemented, but not RIGHT OUTER JOIN or FULL OUTER JOIN.</source>
            <target state="new">LEFT OUTER JOIN is implemented, but not RIGHT OUTER JOIN or FULL OUTER JOIN.</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>SQL as Understood by SQLite<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://www.sqlite.org/lang.html&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>SQL as Understood by SQLite<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://www.sqlite.org/lang.html&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>Expected Inputs</source>
            <target state="new">Expected Inputs</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>Table1</source>
            <target state="new">Table1</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>Input dataset1</source>
            <target state="new">Input dataset1</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>Table2</source>
            <target state="new">Table2</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>Input dataset2</source>
            <target state="new">Input dataset2</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>Table3</source>
            <target state="new">Table3</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>Input dataset3</source>
            <target state="new">Input dataset3</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>Module Parameter</source>
            <target state="new">Module Parameter</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>Range</source>
            <target state="new">Range</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>Default</source>
            <target state="new">Default</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>SQL Query Script</source>
            <target state="new">SQL Query Script</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>any</source>
            <target state="new">any</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>StreamReader</source>
            <target state="new">StreamReader</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>SQL query statement</source>
            <target state="new">SQL query statement</target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>Output</source>
            <target state="new">Output</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>Results dataset</source>
            <target state="new">Results dataset</target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>Output dataset</source>
            <target state="new">Output dataset</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>Exceptions</source>
            <target state="new">Exceptions</target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>For a list of all exceptions, see <ph id="1">&lt;link xlink:href="60822377-da7a-40b8-aec7-d185d1509344" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Module Error Codes&lt;/link&gt;</ph>.</source>
            <target state="new">For a list of all exceptions, see <ph id="1">&lt;link xlink:href="60822377-da7a-40b8-aec7-d185d1509344" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Module Error Codes&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>Exception</source>
            <target state="new">Exception</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="94">
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>An exception occurs if one or more specified columns of the dataset couldn't be found.</source>
            <target state="new">An exception occurs if one or more specified columns of the dataset couldn't be found.</target>
          </trans-unit>
        </group>
        <group id="95">
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>An exception occurs if one or more of the input datasets is null or empty.</source>
            <target state="new">An exception occurs if one or more of the input datasets is null or empty.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>