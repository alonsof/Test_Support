<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="pt-BR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAAVzUEKwyAQQNGreAAHHB2N02VXXZdeYMYoBNKkJBZy/Nr94//WQlXyBWolAsLmQF1WKA4lMTcUYWs8Zi1eEGriCBS1As8iwMqYNHglGgonP3EYrSxBh3IecpICJTMHnCOplKGs+XS4P6251qW1evXbse99TP4Fax7ft2yvQ7Zzlb7s2w8lGGwqogAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>About Storage Analytics Logging</source>
            <target state="new">About Storage Analytics Logging</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Storage Analytics logs detailed information about successful and failed requests to a storage service.</source>
            <target state="new">Storage Analytics logs detailed information about successful and failed requests to a storage service.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>This information can be used to monitor individual requests and to diagnose issues with a storage service.</source>
            <target state="new">This information can be used to monitor individual requests and to diagnose issues with a storage service.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Requests are logged on a best-effort basis.</source>
            <target state="new">Requests are logged on a best-effort basis.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>To use Storage Analytics, you must enable it individually for each service you want to monitor.</source>
            <target state="new">To use Storage Analytics, you must enable it individually for each service you want to monitor.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>You can enable it from the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Azure Management Portal<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://manage.windowsazure.com/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>; for details, see <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>How To Monitor a Storage Account<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://www.windowsazure.com/manage/services/storage/how-to-monitor-a-storage-account/&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">You can enable it from the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Azure Management Portal<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://manage.windowsazure.com/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>; for details, see <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>How To Monitor a Storage Account<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://www.windowsazure.com/manage/services/storage/how-to-monitor-a-storage-account/&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>You can also enable Storage Analytics programmatically via the REST API or the client library.</source>
            <target state="new">You can also enable Storage Analytics programmatically via the REST API or the client library.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Use the <ph id="1">&lt;link xlink:href="96701530-7f68-4933-864a-3c019b00288f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Blob Service Properties (REST API)&lt;/link&gt;</ph>, <ph id="2">&lt;link xlink:href="9e42d151-d7eb-40fb-b3ef-ee1b57f83f0f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Queue Service Properties (REST API)&lt;/link&gt;</ph>, and <ph id="3">&lt;link xlink:href="99806684-7d33-4a59-acc2-23aaf460eb31" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Table Service Properties (REST API)&lt;/link&gt;</ph> operations to enable Storage Analytics for each service.</source>
            <target state="new">Use the <ph id="1">&lt;link xlink:href="96701530-7f68-4933-864a-3c019b00288f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Blob Service Properties (REST API)&lt;/link&gt;</ph>, <ph id="2">&lt;link xlink:href="9e42d151-d7eb-40fb-b3ef-ee1b57f83f0f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Queue Service Properties (REST API)&lt;/link&gt;</ph>, and <ph id="3">&lt;link xlink:href="99806684-7d33-4a59-acc2-23aaf460eb31" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Table Service Properties (REST API)&lt;/link&gt;</ph> operations to enable Storage Analytics for each service.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Log entries are created only if there is storage service activity.</source>
            <target state="new">Log entries are created only if there is storage service activity.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>For example, if a storage account has activity in its Blob service but not in its Table or Queue services, only logs pertaining to the Blob service will be created.</source>
            <target state="new">For example, if a storage account has activity in its Blob service but not in its Table or Queue services, only logs pertaining to the Blob service will be created.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Logging Authenticated Requests</source>
            <target state="new">Logging Authenticated Requests</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The following types of authenticated requests are logged:</source>
            <target state="new">The following types of authenticated requests are logged:</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Successful requests</source>
            <target state="new">Successful requests</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Failed requests, including timeout, throttling, network, authorization, and other errors</source>
            <target state="new">Failed requests, including timeout, throttling, network, authorization, and other errors</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Requests using a Shared Access Signature (SAS), including failed and successful requests</source>
            <target state="new">Requests using a Shared Access Signature (SAS), including failed and successful requests</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Requests to analytics data</source>
            <target state="new">Requests to analytics data</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Requests made by Storage Analytics itself, such as log creation or deletion, are not logged.</source>
            <target state="new">Requests made by Storage Analytics itself, such as log creation or deletion, are not logged.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>A full list of the logged data is documented in the <ph id="1">&lt;link xlink:href="e96d4080-b09f-435c-834d-7a3ac170b602" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Storage Analytics Logged Operations and Status Messages&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="f2bc5951-c6f4-4496-9b8e-be95a328eb36" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Storage Analytics Log File Format&lt;/link&gt;</ph> topics.</source>
            <target state="new">A full list of the logged data is documented in the <ph id="1">&lt;link xlink:href="e96d4080-b09f-435c-834d-7a3ac170b602" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Storage Analytics Logged Operations and Status Messages&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="f2bc5951-c6f4-4496-9b8e-be95a328eb36" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Storage Analytics Log File Format&lt;/link&gt;</ph> topics.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Logging Anonymous Requests</source>
            <target state="new">Logging Anonymous Requests</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>The following types of anonymous requests are logged:</source>
            <target state="new">The following types of anonymous requests are logged:</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Successful requests</source>
            <target state="new">Successful requests</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Server errors</source>
            <target state="new">Server errors</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Timeout errors for both client and server</source>
            <target state="new">Timeout errors for both client and server</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Failed GET requests with error code 304 (Not Modified)</source>
            <target state="new">Failed GET requests with error code 304 (Not Modified)</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>All other failed anonymous requests are not logged.</source>
            <target state="new">All other failed anonymous requests are not logged.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>A full list of the logged data is documented in the <ph id="1">&lt;link xlink:href="e96d4080-b09f-435c-834d-7a3ac170b602" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Storage Analytics Logged Operations and Status Messages&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="f2bc5951-c6f4-4496-9b8e-be95a328eb36" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Storage Analytics Log File Format&lt;/link&gt;</ph> topics.</source>
            <target state="new">A full list of the logged data is documented in the <ph id="1">&lt;link xlink:href="e96d4080-b09f-435c-834d-7a3ac170b602" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Storage Analytics Logged Operations and Status Messages&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="f2bc5951-c6f4-4496-9b8e-be95a328eb36" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Storage Analytics Log File Format&lt;/link&gt;</ph> topics.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>How Logs are Stored</source>
            <target state="new">How Logs are Stored</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>All logs are stored in block blobs in a container named <ph id="1">&lt;codeInline&gt;$logs&lt;/codeInline&gt;</ph>, which is automatically created when Storage Analytics is enabled for a storage account.</source>
            <target state="new">All logs are stored in block blobs in a container named <ph id="1">&lt;codeInline&gt;$logs&lt;/codeInline&gt;</ph>, which is automatically created when Storage Analytics is enabled for a storage account.</target>
          </trans-unit>
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;$logs&lt;/codeInline&gt;</ph> container is located in the blob namespace of the storage account, for example: <ph id="2">&lt;codeInline&gt;http://%%amp;lt;accountname%%amp;gt;.blob.core.windows.net/$logs&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;$logs&lt;/codeInline&gt;</ph> container is located in the blob namespace of the storage account, for example: <ph id="2">&lt;codeInline&gt;http://%%amp;lt;accountname%%amp;gt;.blob.core.windows.net/$logs&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>This container cannot be deleted once Storage Analytics has been enabled, though its contents can be deleted.</source>
            <target state="new">This container cannot be deleted once Storage Analytics has been enabled, though its contents can be deleted.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;$logs&lt;/codeInline&gt;</ph> container is not displayed when a container listing operation is performed, such as the <ph id="2">&lt;codeEntityReference&gt;M:Microsoft.WindowsAzure.StorageClient.CloudBlobClient.ListContainers&lt;/codeEntityReference&gt;</ph> method.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;$logs&lt;/codeInline&gt;</ph> container is not displayed when a container listing operation is performed, such as the <ph id="2">&lt;codeEntityReference&gt;M:Microsoft.WindowsAzure.StorageClient.CloudBlobClient.ListContainers&lt;/codeEntityReference&gt;</ph> method.</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>It must be accessed directly.</source>
            <target state="new">It must be accessed directly.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>For example, you can use the <ph id="1">&lt;codeEntityReference&gt;M:Microsoft.WindowsAzure.StorageClient.CloudBlobContainer.ListBlobs&lt;/codeEntityReference&gt;</ph> method to access the blobs in the <ph id="2">&lt;codeInline&gt;$logs&lt;/codeInline&gt;</ph> container.</source>
            <target state="new">For example, you can use the <ph id="1">&lt;codeEntityReference&gt;M:Microsoft.WindowsAzure.StorageClient.CloudBlobContainer.ListBlobs&lt;/codeEntityReference&gt;</ph> method to access the blobs in the <ph id="2">&lt;codeInline&gt;$logs&lt;/codeInline&gt;</ph> container.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>As requests are logged, Storage Analytics will upload intermediate results as blocks.</source>
            <target state="new">As requests are logged, Storage Analytics will upload intermediate results as blocks.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Periodically, Storage Analytics will commit these blocks and make them available as a blob.</source>
            <target state="new">Periodically, Storage Analytics will commit these blocks and make them available as a blob.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Duplicate records may exist for logs created in the same hour.</source>
            <target state="new">Duplicate records may exist for logs created in the same hour.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>You can determine if a record is a duplicate by checking the <ph id="1">&lt;system&gt;RequestId&lt;/system&gt;</ph> and <ph id="2">&lt;system&gt;Operation&lt;/system&gt;</ph> number.</source>
            <target state="new">You can determine if a record is a duplicate by checking the <ph id="1">&lt;system&gt;RequestId&lt;/system&gt;</ph> and <ph id="2">&lt;system&gt;Operation&lt;/system&gt;</ph> number.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Log Naming Conventions</source>
            <target state="new">Log Naming Conventions</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Each log will be written in the following format:</source>
            <target state="new">Each log will be written in the following format:</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>The following table describes each attribute in the log name:</source>
            <target state="new">The following table describes each attribute in the log name:</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Attribute</source>
            <target state="new">Attribute</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>The name of the storage service.</source>
            <target state="new">The name of the storage service.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>For example: <ph id="1">&lt;codeInline&gt;blob&lt;/codeInline&gt;</ph>, <ph id="2">&lt;codeInline&gt;table&lt;/codeInline&gt;</ph>, or <ph id="3">&lt;codeInline&gt;queue&lt;/codeInline&gt;</ph></source>
            <target state="new">For example: <ph id="1">&lt;codeInline&gt;blob&lt;/codeInline&gt;</ph>, <ph id="2">&lt;codeInline&gt;table&lt;/codeInline&gt;</ph>, or <ph id="3">&lt;codeInline&gt;queue&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>The four digit year for the log.</source>
            <target state="new">The four digit year for the log.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>For example: <ph id="1">&lt;codeInline&gt;2011&lt;/codeInline&gt;</ph></source>
            <target state="new">For example: <ph id="1">&lt;codeInline&gt;2011&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>The two digit month for the log.</source>
            <target state="new">The two digit month for the log.</target>
          </trans-unit>
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>For example: <ph id="1">&lt;codeInline&gt;07&lt;/codeInline&gt;</ph></source>
            <target state="new">For example: <ph id="1">&lt;codeInline&gt;07&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>The two digit day for the log.</source>
            <target state="new">The two digit day for the log.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>For example: <ph id="1">&lt;codeInline&gt;31&lt;/codeInline&gt;</ph></source>
            <target state="new">For example: <ph id="1">&lt;codeInline&gt;31&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>The two digit hour that indicates the starting hour for the logs, in 24 hour UTC format.</source>
            <target state="new">The two digit hour that indicates the starting hour for the logs, in 24 hour UTC format.</target>
          </trans-unit>
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>For example: <ph id="1">&lt;codeInline&gt;18&lt;/codeInline&gt;</ph></source>
            <target state="new">For example: <ph id="1">&lt;codeInline&gt;18&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>The two digit number that indicates the starting minute for the logs.</source>
            <target state="new">The two digit number that indicates the starting minute for the logs.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>This value is unsupported in the current version of Storage Analytics, and its value will always be <ph id="1">&lt;codeInline&gt;00&lt;/codeInline&gt;</ph>.</source>
            <target state="new">This value is unsupported in the current version of Storage Analytics, and its value will always be <ph id="1">&lt;codeInline&gt;00&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>A zero-based counter with six digits that indicates the number of log blobs generated for the storage service in an hour time period.</source>
            <target state="new">A zero-based counter with six digits that indicates the number of log blobs generated for the storage service in an hour time period.</target>
          </trans-unit>
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>This counter starts at <ph id="1">&lt;codeInline&gt;000000&lt;/codeInline&gt;</ph>.</source>
            <target state="new">This counter starts at <ph id="1">&lt;codeInline&gt;000000&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>For example: <ph id="1">&lt;codeInline&gt;000001&lt;/codeInline&gt;</ph></source>
            <target state="new">For example: <ph id="1">&lt;codeInline&gt;000001&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>The following is a complete sample log name that combines the above examples:</source>
            <target state="new">The following is a complete sample log name that combines the above examples:</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>The following is a sample URI that can be used to access the above log:</source>
            <target state="new">The following is a sample URI that can be used to access the above log:</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>When a storage request is logged, the resulting log name correlates to the hour when the requested operation completed.</source>
            <target state="new">When a storage request is logged, the resulting log name correlates to the hour when the requested operation completed.</target>
          </trans-unit>
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>For example, if a GetBlob request was completed at 6:30PM on 7/31/2011, the log would be written with the following prefix: <ph id="1">&lt;codeInline&gt;blob/2011/07/31/1800/&lt;/codeInline&gt;</ph></source>
            <target state="new">For example, if a GetBlob request was completed at 6:30PM on 7/31/2011, the log would be written with the following prefix: <ph id="1">&lt;codeInline&gt;blob/2011/07/31/1800/&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>Log Metadata</source>
            <target state="new">Log Metadata</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>All log blobs are stored with metadata that can be used to identify what logging data the blob contains.</source>
            <target state="new">All log blobs are stored with metadata that can be used to identify what logging data the blob contains.</target>
          </trans-unit>
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>The following table describes each metadata attribute:</source>
            <target state="new">The following table describes each metadata attribute:</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>Attribute</source>
            <target state="new">Attribute</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>Describes whether the log contains information pertaining to read, write, or delete operations.</source>
            <target state="new">Describes whether the log contains information pertaining to read, write, or delete operations.</target>
          </trans-unit>
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>This value can include one type or a combination of all three, separated by commas.</source>
            <target state="new">This value can include one type or a combination of all three, separated by commas.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>Example 1: <ph id="1">&lt;codeInline&gt;write&lt;/codeInline&gt;</ph></source>
            <target state="new">Example 1: <ph id="1">&lt;codeInline&gt;write&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>Example 2: <ph id="1">&lt;codeInline&gt;read,write&lt;/codeInline&gt;</ph></source>
            <target state="new">Example 2: <ph id="1">&lt;codeInline&gt;read,write&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>Example 3: <ph id="1">&lt;codeInline&gt;read,write,delete&lt;/codeInline&gt;</ph></source>
            <target state="new">Example 3: <ph id="1">&lt;codeInline&gt;read,write,delete&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>The earliest time of an entry in the log, in the form of <ph id="1">&lt;codeInline&gt;YYYY-MM-DDThh:mm:ssZ&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The earliest time of an entry in the log, in the form of <ph id="1">&lt;codeInline&gt;YYYY-MM-DDThh:mm:ssZ&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>For example: <ph id="1">&lt;codeInline&gt;2011-07-31T18:21:46Z&lt;/codeInline&gt;</ph></source>
            <target state="new">For example: <ph id="1">&lt;codeInline&gt;2011-07-31T18:21:46Z&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>The latest time of an entry in the log, in the form of <ph id="1">&lt;codeInline&gt;YYYY-MM-DDThh:mm:ssZ&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The latest time of an entry in the log, in the form of <ph id="1">&lt;codeInline&gt;YYYY-MM-DDThh:mm:ssZ&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>For example: <ph id="1">&lt;codeInline&gt;2011-07-31T18:22:09Z&lt;/codeInline&gt;</ph></source>
            <target state="new">For example: <ph id="1">&lt;codeInline&gt;2011-07-31T18:22:09Z&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>The version of the log format.</source>
            <target state="new">The version of the log format.</target>
          </trans-unit>
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>Currently the only supported value is: <ph id="1">&lt;codeInline&gt;1.0&lt;/codeInline&gt;</ph></source>
            <target state="new">Currently the only supported value is: <ph id="1">&lt;codeInline&gt;1.0&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>The following list displays complete sample metadata using the above examples:</source>
            <target state="new">The following list displays complete sample metadata using the above examples:</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>Accessing Logging Data</source>
            <target state="new">Accessing Logging Data</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>All data in the <ph id="1">&lt;codeInline&gt;$logs&lt;/codeInline&gt;</ph> container can be accessed by using the Blob service APIs, including the .NET APIs provided by the Azure managed library.</source>
            <target state="new">All data in the <ph id="1">&lt;codeInline&gt;$logs&lt;/codeInline&gt;</ph> container can be accessed by using the Blob service APIs, including the .NET APIs provided by the Azure managed library.</target>
          </trans-unit>
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>The storage account administrator can read and delete logs, but cannot create or update them.</source>
            <target state="new">The storage account administrator can read and delete logs, but cannot create or update them.</target>
          </trans-unit>
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>Both the log’s metadata and log name can be used when querying for a log.</source>
            <target state="new">Both the log’s metadata and log name can be used when querying for a log.</target>
          </trans-unit>
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>It is possible for a given hour’s logs to appear out of order, but the metadata always specifies the timespan of log entries in a log.</source>
            <target state="new">It is possible for a given hour’s logs to appear out of order, but the metadata always specifies the timespan of log entries in a log.</target>
          </trans-unit>
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>Therefore, you can use a combination of log names and metadata when searching for a particular log.</source>
            <target state="new">Therefore, you can use a combination of log names and metadata when searching for a particular log.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>