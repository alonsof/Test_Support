<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="de-DE" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANzNsJwzAMQNFVNIAFtqxYVr9b6ABdQH5BIE2gTSHj19+Xe8aIvTBV7J0ZOQyPxeeC1QdLqiOYqQPWxWpuhJIlITcTLCnOSSiTVG7SvYPUmSa1oFL0yJqmJTTQkmiOHFRqchActI73h4NrW8fo13n7HMfpgGbLDp6/t+2vj+3fzc712P+eGlMjogAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Flat-file Support In One-Way Bridge</source>
            <target state="new">Flat-file Support In One-Way Bridge</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Flat file message transfer is a key requirement in <ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> scenarios.</source>
            <target state="new">Flat file message transfer is a key requirement in <ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> scenarios.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Many enterprise applications receive flat file messages from client applications, such as SAP IDOCs.</source>
            <target state="new">Many enterprise applications receive flat file messages from client applications, such as SAP IDOCs.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>To enable flat-file processing over the cloud, you can use <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>s available as part of <ph id="2">&lt;token&gt;af_integration&lt;/token&gt;</ph> .</source>
            <target state="new">To enable flat-file processing over the cloud, you can use <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>s available as part of <ph id="2">&lt;token&gt;af_integration&lt;/token&gt;</ph> .</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Flat File Support: What’s In and What’s Not?</source>
            <target state="new">Flat File Support: What’s In and What’s Not?</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The following table lists the flat-file processing features available with <ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph>:</source>
            <target state="new">The following table lists the flat-file processing features available with <ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph>:</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>What’s In</source>
            <target state="new">What’s In</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>What’s Not</source>
            <target state="new">What’s Not</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Receive flat-file messages<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Receive flat-file messages<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>You can configure a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> to receive flat-file messages either over HTTP or FTP.</source>
            <target state="new">You can configure a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> to receive flat-file messages either over HTTP or FTP.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Support for <ph id="2">&lt;token&gt;request_response&lt;/token&gt;</ph><ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Support for <ph id="2">&lt;token&gt;request_response&lt;/token&gt;</ph><ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>You cannot configure an <ph id="1">&lt;token&gt;request_response&lt;/token&gt;</ph> to process flat file messages.</source>
            <target state="new">You cannot configure an <ph id="1">&lt;token&gt;request_response&lt;/token&gt;</ph> to process flat file messages.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>You cannot have an <ph id="1">&lt;token&gt;request_response&lt;/token&gt;</ph> sending flat file messages to the message receiving entity or back to the client that sent the original flat file message.</source>
            <target state="new">You cannot have an <ph id="1">&lt;token&gt;request_response&lt;/token&gt;</ph> sending flat file messages to the message receiving entity or back to the client that sent the original flat file message.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Sending out flat-file messages<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Sending out flat-file messages<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>You can configure a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> to send out flat-file messages, which makes the following scenarios possible:</source>
            <target state="new">You can configure a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> to send out flat-file messages, which makes the following scenarios possible:</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Flat file in, Flat file out</source>
            <target state="new">Flat file in, Flat file out</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Flat file in, XML out</source>
            <target state="new">Flat file in, XML out</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>XML in, Flat file out</source>
            <target state="new">XML in, Flat file out</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>XML in, XML out</source>
            <target state="new">XML in, XML out</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Support for <ph id="2">&lt;token&gt;one-way&lt;/token&gt;</ph><ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Support for <ph id="2">&lt;token&gt;one-way&lt;/token&gt;</ph><ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>You can configure a <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> to receive and send flat-file messages.</source>
            <target state="new">You can configure a <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> to receive and send flat-file messages.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Support for receiving messages of different flat-file schemas using the same bridge<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Support for receiving messages of different flat-file schemas using the same bridge<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>You can configure a <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> bridge to receive flat-file messages of more than one schema.</source>
            <target state="new">You can configure a <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> bridge to receive flat-file messages of more than one schema.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Support for receiving flat-file and XML messages using the same bridge<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Support for receiving flat-file and XML messages using the same bridge<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>You can configure the same <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> to receive both flat-file messages as well as XML messages.</source>
            <target state="new">You can configure the same <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> to receive both flat-file messages as well as XML messages.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>How Does an <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> Handle Flat File Messages?</source>
            <target state="new">How Does an <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> Handle Flat File Messages?</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>With the flat-file support, an <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> can process both flat-file and XML messages at the same endpoint.</source>
            <target state="new">With the flat-file support, an <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> can process both flat-file and XML messages at the same endpoint.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>So, you don’t need to configure and deploy two separate <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>s on the <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> to process different message types; a single <ph id="3">&lt;token&gt;bridge&lt;/token&gt;</ph> does both for you.</source>
            <target state="new">So, you don’t need to configure and deploy two separate <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>s on the <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> to process different message types; a single <ph id="3">&lt;token&gt;bridge&lt;/token&gt;</ph> does both for you.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Receiving Flat-file Messages</source>
            <target state="new">Receiving Flat-file Messages</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>While receiving a message, the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> detects the message format (flat file or XML) based on the <bpt id="2">&lt;embeddedLabel&gt;</bpt><bpt id="3">&lt;legacyItalic&gt;</bpt>content-type<ept id="3">&lt;/legacyItalic&gt;</ept><ept id="2">&lt;/embeddedLabel&gt;</ept> HTTP header.</source>
            <target state="new">While receiving a message, the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> detects the message format (flat file or XML) based on the <bpt id="2">&lt;embeddedLabel&gt;</bpt><bpt id="3">&lt;legacyItalic&gt;</bpt>content-type<ept id="3">&lt;/legacyItalic&gt;</ept><ept id="2">&lt;/embeddedLabel&gt;</ept> HTTP header.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>This header is mandatory for all incoming messages to be processed by the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>.</source>
            <target state="new">This header is mandatory for all incoming messages to be processed by the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>If the header is not present, it results in a runtime error.</source>
            <target state="new">If the header is not present, it results in a runtime error.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>If the message is coming over HTTP, the content-type is set by default.</source>
            <target state="new">If the message is coming over HTTP, the content-type is set by default.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>If the message is coming over FTP, this header is set by the FTP source entity that posts data to the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> endpoint.</source>
            <target state="new">If the message is coming over FTP, this header is set by the FTP source entity that posts data to the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> endpoint.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>You can configure an FTP source entity on the <ph id="1">&lt;token&gt;msgflow&lt;/token&gt;</ph> surface that defines the FTP location from where the message is picked.</source>
            <target state="new">You can configure an FTP source entity on the <ph id="1">&lt;token&gt;msgflow&lt;/token&gt;</ph> surface that defines the FTP location from where the message is picked.</target>
          </trans-unit>
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="8d63ef53-1ef7-4110-8f65-f5c24cb8b886" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Configure Message Sources&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="8d63ef53-1ef7-4110-8f65-f5c24cb8b886" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Configure Message Sources&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Bridges support the following message types:</source>
            <target state="new">Bridges support the following message types:</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Application/xml</source>
            <target state="new">Application/xml</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Application/soap+xml</source>
            <target state="new">Application/soap+xml</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Text/xml</source>
            <target state="new">Text/xml</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Text/plain</source>
            <target state="new">Text/plain</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Of these, the content-type “text/plain” maps to flat file messages.</source>
            <target state="new">Of these, the content-type “text/plain” maps to flat file messages.</target>
          </trans-unit>
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>To process text/plain messages, a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> includes a ‘Decode’ stage that is the first stage in the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> before the Validate, Enrich, Transform, and Enrich (post-Transform) stages.</source>
            <target state="new">To process text/plain messages, a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> includes a ‘Decode’ stage that is the first stage in the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> before the Validate, Enrich, Transform, and Enrich (post-Transform) stages.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>If a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> receives a message of ‘text/plain’ content type, the decode stage decodes the message and converts it to an XML message.</source>
            <target state="new">If a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> receives a message of ‘text/plain’ content type, the decode stage decodes the message and converts it to an XML message.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Rest of the processing at each stage within the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> happens on the XML message and not the flat file message.</source>
            <target state="new">Rest of the processing at each stage within the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> happens on the XML message and not the flat file message.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>If a message with the any of the other content types is received by the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>, the decode stage is not activated and no flat-file decoding happens.</source>
            <target state="new">If a message with the any of the other content types is received by the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>, the decode stage is not activated and no flat-file decoding happens.</target>
          </trans-unit>
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>The incoming message is then passed over to the other stages, where it is processed based on the stage configuration.</source>
            <target state="new">The incoming message is then passed over to the other stages, where it is processed based on the stage configuration.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Sending Out Flat-file Messages</source>
            <target state="new">Sending Out Flat-file Messages</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>While sending out messages from a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>, you can configure a <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> to send out flat-file messages using the <bpt id="3">&lt;embeddedLabel&gt;</bpt>Flat File Encode<ept id="3">&lt;/embeddedLabel&gt;</ept> activity within the <bpt id="4">&lt;embeddedLabel&gt;</bpt>Encode<ept id="4">&lt;/embeddedLabel&gt;</ept> stage.</source>
            <target state="new">While sending out messages from a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>, you can configure a <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> to send out flat-file messages using the <bpt id="3">&lt;embeddedLabel&gt;</bpt>Flat File Encode<ept id="3">&lt;/embeddedLabel&gt;</ept> activity within the <bpt id="4">&lt;embeddedLabel&gt;</bpt>Encode<ept id="4">&lt;/embeddedLabel&gt;</ept> stage.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>If you enable the stage, the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> can send out flat-file messages and XML messages.</source>
            <target state="new">If you enable the stage, the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> can send out flat-file messages and XML messages.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>If you disable the stage, the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> only sends out XML messages.</source>
            <target state="new">If you disable the stage, the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> only sends out XML messages.</target>
          </trans-unit>
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>As mentioned earlier, even if a flat-file message is received by the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>, it gets converted to XML message at the decode stage and is then processed as an XML message by the other stages of a <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph>.</source>
            <target state="new">As mentioned earlier, even if a flat-file message is received by the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>, it gets converted to XML message at the decode stage and is then processed as an XML message by the other stages of a <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>Once the XML message reaches the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Encode<ept id="1">&lt;/embeddedLabel&gt;</ept> stage, the message type of the XML message is matched with the schema specified as part of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Flat File Encode<ept id="2">&lt;/embeddedLabel&gt;</ept> activity.</source>
            <target state="new">Once the XML message reaches the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Encode<ept id="1">&lt;/embeddedLabel&gt;</ept> stage, the message type of the XML message is matched with the schema specified as part of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Flat File Encode<ept id="2">&lt;/embeddedLabel&gt;</ept> activity.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>If a match occurs, the schema is used to convert the XML message to a flat-file message.</source>
            <target state="new">If a match occurs, the schema is used to convert the XML message to a flat-file message.</target>
          </trans-unit>
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>The content-type for such messages is set to “text/plain”.</source>
            <target state="new">The content-type for such messages is set to “text/plain”.</target>
          </trans-unit>
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>If no match is found, the XML message is sent out of the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> as-is.</source>
            <target state="new">If no match is found, the XML message is sent out of the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> as-is.</target>
          </trans-unit>
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_OneWay_Encode" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_OneWay_Encode" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>Processing Multiple Flat Files Using a Single <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph></source>
            <target state="new">Processing Multiple Flat Files Using a Single <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>For XML messages, <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>s support processing messages of more than one message type using the same <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> endpoint.</source>
            <target state="new">For XML messages, <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>s support processing messages of more than one message type using the same <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> endpoint.</target>
          </trans-unit>
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>They do so by identifying a message using the message type, which is a combination of the target namespace and the schema root node name, for example <ph id="1">&lt;codeInline&gt;http://IntegrationServices.Schema#RootNode&lt;/codeInline&gt;</ph>.</source>
            <target state="new">They do so by identifying a message using the message type, which is a combination of the target namespace and the schema root node name, for example <ph id="1">&lt;codeInline&gt;http://IntegrationServices.Schema#RootNode&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>The same cannot be true for flat file messages because there is no target namespace.</source>
            <target state="new">The same cannot be true for flat file messages because there is no target namespace.</target>
          </trans-unit>
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>So, to provide the ability to process flat-file messages of more than one type at the same <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> endpoint, <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph>s use the concept of ‘tags’.</source>
            <target state="new">So, to provide the ability to process flat-file messages of more than one type at the same <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> endpoint, <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph>s use the concept of ‘tags’.</target>
          </trans-unit>
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>Following are some considerations with respect to tags:</source>
            <target state="new">Following are some considerations with respect to tags:</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>All flat-file schemas should have tags defined as part of schema definition.</source>
            <target state="new">All flat-file schemas should have tags defined as part of schema definition.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>At most, there can be only one flat-file schema that does not have an associated tag with it.</source>
            <target state="new">At most, there can be only one flat-file schema that does not have an associated tag with it.</target>
          </trans-unit>
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>If you add more than one untagged schema, it results in a build error.</source>
            <target state="new">If you add more than one untagged schema, it results in a build error.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>When a flat-file message is received by the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>, it matches the tag in the incoming message with the tags in all the flat-file schemas, in the order in which they were added to the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration.</source>
            <target state="new">When a flat-file message is received by the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>, it matches the tag in the incoming message with the tags in all the flat-file schemas, in the order in which they were added to the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration.</target>
          </trans-unit>
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>If a match happens, that schema is used to validate the incoming message.</source>
            <target state="new">If a match happens, that schema is used to validate the incoming message.</target>
          </trans-unit>
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>The only exception to this rule is that if there is one schema without a tag, it is evaluated at the end.</source>
            <target state="new">The only exception to this rule is that if there is one schema without a tag, it is evaluated at the end.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>You can have schemas that have tags defined both at the root level as well as the child record level.</source>
            <target state="new">You can have schemas that have tags defined both at the root level as well as the child record level.</target>
          </trans-unit>
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>For schema validation, only the tags at the root level are considered.</source>
            <target state="new">For schema validation, only the tags at the root level are considered.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>More Information about Flat File Messages</source>
            <target state="new">More Information about Flat File Messages</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>For more information on flat-file messages, refer to <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Structure of a Flat File Message<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=245793&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">For more information on flat-file messages, refer to <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Structure of a Flat File Message<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=245793&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>In This Section</source>
            <target state="new">In This Section</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>