<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="de-DE" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANzFEKgzAMANCr5AAJpDXadt8b7AC7QNI2IDgFp+Dx5//juQ/dJFbqXYQkOJNxNqocdCrFg2pByFbVWJSSpFvpmCjHMpKlwMKWJVpE4DTl2DpTtOokMjRStUK1umT21MQaQkBonZ4vhGuZ3ft1PPZtOxDuYUJ4n19dP7uuv0WPeVv/Rlecz6EAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Best Practices for Insulating Service Bus Applications Against Service Bus Outages and Disasters</source>
            <target state="new">Best Practices for Insulating Service Bus Applications Against Service Bus Outages and Disasters</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Mission-critical applications must operate continuously, even in the presence of unplanned outages or disasters.</source>
            <target state="new">Mission-critical applications must operate continuously, even in the presence of unplanned outages or disasters.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>This topic describes techniques you can use to protect applications against a potential <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> outage or disaster.</source>
            <target state="new">This topic describes techniques you can use to protect applications against a potential <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> outage or disaster.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>An outage is defined as the temporary unavailability of <ph id="1">&lt;token&gt;sb1&lt;/token&gt;</ph>.</source>
            <target state="new">An outage is defined as the temporary unavailability of <ph id="1">&lt;token&gt;sb1&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The outage can affect some components of <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, such as a messaging store, or even the entire datacenter.</source>
            <target state="new">The outage can affect some components of <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, such as a messaging store, or even the entire datacenter.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>After the problem has been fixed, <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> becomes available again.</source>
            <target state="new">After the problem has been fixed, <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> becomes available again.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Typically, an outage does not cause loss of messages or other data.</source>
            <target state="new">Typically, an outage does not cause loss of messages or other data.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>An example of a component failure is the unavailability of a particular messaging store.</source>
            <target state="new">An example of a component failure is the unavailability of a particular messaging store.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>An example of a datacenter-wide outage is a power failure of the datacenter, or a faulty datacenter network switch.</source>
            <target state="new">An example of a datacenter-wide outage is a power failure of the datacenter, or a faulty datacenter network switch.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>An outage can last from a few minutes to a few days.</source>
            <target state="new">An outage can last from a few minutes to a few days.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>A disaster is defined as the permanent loss of a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> scale unit or datacenter.</source>
            <target state="new">A disaster is defined as the permanent loss of a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> scale unit or datacenter.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The datacenter may or may not become available again.</source>
            <target state="new">The datacenter may or may not become available again.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Typically a disaster causes loss of some or all messages or other data.</source>
            <target state="new">Typically a disaster causes loss of some or all messages or other data.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Examples of disasters are fire, flooding, or earthquakes.</source>
            <target state="new">Examples of disasters are fire, flooding, or earthquakes.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Current architecture</source>
            <target state="new">Current architecture</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> uses multiple messaging stores to store messages that are sent to queues or topics.</source>
            <target state="new"><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> uses multiple messaging stores to store messages that are sent to queues or topics.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>A non-partitioned queue or topic is assigned to one messaging store.</source>
            <target state="new">A non-partitioned queue or topic is assigned to one messaging store.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>If this messaging store is unavailable, all operations on that queue or topic will fail.</source>
            <target state="new">If this messaging store is unavailable, all operations on that queue or topic will fail.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>All <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> messaging entities (queues, topics, relays) reside in a <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph>, which is affiliated with a datacenter.</source>
            <target state="new">All <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> messaging entities (queues, topics, relays) reside in a <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph>, which is affiliated with a datacenter.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> does not enable automatic geo-replication of data, nor does it allow a <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph> to span multiple datacenters.</source>
            <target state="new"><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> does not enable automatic geo-replication of data, nor does it allow a <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph> to span multiple datacenters.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Protecting against ACS outages</source>
            <target state="new">Protecting against ACS outages</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>If you are using ACS credentials, and ACS becomes unavailable, clients can no longer obtain tokens.</source>
            <target state="new">If you are using ACS credentials, and ACS becomes unavailable, clients can no longer obtain tokens.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Clients that have a token at the time ACS goes down can continue to use <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> until the tokens expire.</source>
            <target state="new">Clients that have a token at the time ACS goes down can continue to use <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> until the tokens expire.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>The default token lifetime is 3 hours.</source>
            <target state="new">The default token lifetime is 3 hours.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>To protect against ACS outages, use Shared Access Signature (SAS) tokens.</source>
            <target state="new">To protect against ACS outages, use Shared Access Signature (SAS) tokens.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>In this case, the client authenticates directly with <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> by signing a self-minted token with a secret key.</source>
            <target state="new">In this case, the client authenticates directly with <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> by signing a self-minted token with a secret key.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Calls to ACS are no longer required.</source>
            <target state="new">Calls to ACS are no longer required.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> SAS tokens, see <ph id="2">&lt;link xlink:href="50b1618e-6013-466d-8f9f-ee2c1371bb13" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Service Bus Authentication&lt;/link&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> SAS tokens, see <ph id="2">&lt;link xlink:href="50b1618e-6013-466d-8f9f-ee2c1371bb13" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Service Bus Authentication&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Protecting queues and topics against messaging store failures</source>
            <target state="new">Protecting queues and topics against messaging store failures</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>A non-partitioned queue or topic is assigned to one messaging store.</source>
            <target state="new">A non-partitioned queue or topic is assigned to one messaging store.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>If this messaging store is unavailable, all operations on that queue or topic will fail.</source>
            <target state="new">If this messaging store is unavailable, all operations on that queue or topic will fail.</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>A partitioned queue, on the other hand, consists of multiple fragments.</source>
            <target state="new">A partitioned queue, on the other hand, consists of multiple fragments.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Each fragment is stored in a different messaging store.</source>
            <target state="new">Each fragment is stored in a different messaging store.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>When a message is sent to a partitioned queue or topic, <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> assigns the message to one of the fragments.</source>
            <target state="new">When a message is sent to a partitioned queue or topic, <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> assigns the message to one of the fragments.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>If the corresponding messaging store is unavailable, <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> writes the message to a different fragment, if possible.</source>
            <target state="new">If the corresponding messaging store is unavailable, <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> writes the message to a different fragment, if possible.</target>
          </trans-unit>
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> partitioned entities, see <ph id="2">&lt;link xlink:href="cfbb5d64-b54e-4420-9971-436d8d820583" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Partitioning Messaging Entities&lt;/link&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> partitioned entities, see <ph id="2">&lt;link xlink:href="cfbb5d64-b54e-4420-9971-436d8d820583" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Partitioning Messaging Entities&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Protecting against datacenter outages or disasters</source>
            <target state="new">Protecting against datacenter outages or disasters</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>To allow for a failover between two datacenters, you can create a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph> in each datacenter.</source>
            <target state="new">To allow for a failover between two datacenters, you can create a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph> in each datacenter.</target>
          </trans-unit>
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>For example, the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph> <bpt id="3">&lt;embeddedLabel&gt;</bpt>contosoPrimary.servicebus.windows.net<ept id="3">&lt;/embeddedLabel&gt;</ept> might be located in the United States (North/Central) region, and <bpt id="4">&lt;embeddedLabel&gt;</bpt>contosoSecondary.servicebus.windows.net<ept id="4">&lt;/embeddedLabel&gt;</ept> might be located in the United States (South/Central) region.</source>
            <target state="new">For example, the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph> <bpt id="3">&lt;embeddedLabel&gt;</bpt>contosoPrimary.servicebus.windows.net<ept id="3">&lt;/embeddedLabel&gt;</ept> might be located in the United States (North/Central) region, and <bpt id="4">&lt;embeddedLabel&gt;</bpt>contosoSecondary.servicebus.windows.net<ept id="4">&lt;/embeddedLabel&gt;</ept> might be located in the United States (South/Central) region.</target>
          </trans-unit>
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>If a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> messaging entity must remain accessible in the presence of a datacenter outage, you can create that entity in both <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph>s.</source>
            <target state="new">If a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> messaging entity must remain accessible in the presence of a datacenter outage, you can create that entity in both <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph>s.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> the “Failure of Service Bus within an Azure datacenter” section in <ph id="2">&lt;link xlink:href="cda0f486-509f-46af-bb3a-6a3c48c8b040" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Asynchronous Messaging Patterns and High Availability&lt;/link&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> the “Failure of Service Bus within an Azure datacenter” section in <ph id="2">&lt;link xlink:href="cda0f486-509f-46af-bb3a-6a3c48c8b040" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Asynchronous Messaging Patterns and High Availability&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Protecting relay endpoints against datacenter outages or disasters</source>
            <target state="new">Protecting relay endpoints against datacenter outages or disasters</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Geo-replication of relay endpoints allows a service that exposes a relay endpoint to be reachable in the presence of <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> outages.</source>
            <target state="new">Geo-replication of relay endpoints allows a service that exposes a relay endpoint to be reachable in the presence of <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> outages.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>To achieve geo-replication, the service must create two relay endpoints in different namespaces.</source>
            <target state="new">To achieve geo-replication, the service must create two relay endpoints in different namespaces.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>The namespaces must reside in different datacenters and the two endpoints must have different names.</source>
            <target state="new">The namespaces must reside in different datacenters and the two endpoints must have different names.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>For example, a primary endpoint can be reached under <bpt id="1">&lt;embeddedLabel&gt;</bpt>contosoPrimary.servicebus.windows.net/myPrimaryService<ept id="1">&lt;/embeddedLabel&gt;</ept>, while its secondary counterpart can be reached under <bpt id="2">&lt;embeddedLabel&gt;</bpt>contosoSecondary.servicebus.windows.net/mySecondaryService<ept id="2">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">For example, a primary endpoint can be reached under <bpt id="1">&lt;embeddedLabel&gt;</bpt>contosoPrimary.servicebus.windows.net/myPrimaryService<ept id="1">&lt;/embeddedLabel&gt;</ept>, while its secondary counterpart can be reached under <bpt id="2">&lt;embeddedLabel&gt;</bpt>contosoSecondary.servicebus.windows.net/mySecondaryService<ept id="2">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>The service then listens on both endpoints, and a client can invoke the service via either endpoint.</source>
            <target state="new">The service then listens on both endpoints, and a client can invoke the service via either endpoint.</target>
          </trans-unit>
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>A client application randomly picks one of the relays as the primary endpoint, and sends its request to the active endpoint.</source>
            <target state="new">A client application randomly picks one of the relays as the primary endpoint, and sends its request to the active endpoint.</target>
          </trans-unit>
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>If the operation fails with an error code, this failure indicates that the relay endpoint is not available.</source>
            <target state="new">If the operation fails with an error code, this failure indicates that the relay endpoint is not available.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>The application opens a channel to the backup endpoint and reissues the request.</source>
            <target state="new">The application opens a channel to the backup endpoint and reissues the request.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>At that point the active and the backup endpoints switch roles: the client application considers the old active endpoint to be the new backup endpoint, and the old backup endpoint to be the new active endpoint.</source>
            <target state="new">At that point the active and the backup endpoints switch roles: the client application considers the old active endpoint to be the new backup endpoint, and the old backup endpoint to be the new active endpoint.</target>
          </trans-unit>
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>If both send operations fail, the roles of the two entities remain unchanged and an error is returned.</source>
            <target state="new">If both send operations fail, the roles of the two entities remain unchanged and an error is returned.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Geo-replication with Service Bus Relayed Messages<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://code.msdn.microsoft.com/Geo-replication-with-16dbfecd&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample demonstrates how to replicate relays.</source>
            <target state="new">The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Geo-replication with Service Bus Relayed Messages<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://code.msdn.microsoft.com/Geo-replication-with-16dbfecd&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample demonstrates how to replicate relays.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>Protecting queues and topics against datacenter outages or disasters</source>
            <target state="new">Protecting queues and topics against datacenter outages or disasters</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>To achieve resilience against datacenter outages when using brokered messaging, <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> supports two approaches: active and passive replication.</source>
            <target state="new">To achieve resilience against datacenter outages when using brokered messaging, <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> supports two approaches: active and passive replication.</target>
          </trans-unit>
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>For each approach, if a given queue or topic must remain accessible in the presence of a datacenter outage, you can create it in both namespaces.</source>
            <target state="new">For each approach, if a given queue or topic must remain accessible in the presence of a datacenter outage, you can create it in both namespaces.</target>
          </trans-unit>
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>Both entities can have the same name.</source>
            <target state="new">Both entities can have the same name.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>For example, a primary queue can be reached under <bpt id="1">&lt;embeddedLabel&gt;</bpt>contosoPrimary.servicebus.windows.net/myQueue<ept id="1">&lt;/embeddedLabel&gt;</ept>, while its secondary counterpart can be reached under <bpt id="2">&lt;embeddedLabel&gt;</bpt>contosoSecondary.servicebus.windows.net/myQueue<ept id="2">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">For example, a primary queue can be reached under <bpt id="1">&lt;embeddedLabel&gt;</bpt>contosoPrimary.servicebus.windows.net/myQueue<ept id="1">&lt;/embeddedLabel&gt;</ept>, while its secondary counterpart can be reached under <bpt id="2">&lt;embeddedLabel&gt;</bpt>contosoSecondary.servicebus.windows.net/myQueue<ept id="2">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>If the application does not require permanent sender-to-receiver communication, the application can implement a durable client-side queue to prevent message loss and to shield the sender from any transient <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> errors.</source>
            <target state="new">If the application does not require permanent sender-to-receiver communication, the application can implement a durable client-side queue to prevent message loss and to shield the sender from any transient <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> errors.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>Active replication</source>
            <target state="new">Active replication</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>Active replication uses entities in both <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph>s for every operation.</source>
            <target state="new">Active replication uses entities in both <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph>s for every operation.</target>
          </trans-unit>
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>Any client that sends a message sends two copies of the same message.</source>
            <target state="new">Any client that sends a message sends two copies of the same message.</target>
          </trans-unit>
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>The first copy is sent to the primary entity (for example, <bpt id="1">&lt;embeddedLabel&gt;</bpt>contosoPrimary.servicebus.windows.net/sales<ept id="1">&lt;/embeddedLabel&gt;</ept>), and the second copy of the message is sent to the secondary entity (for example, <bpt id="2">&lt;embeddedLabel&gt;</bpt>contosoSecondary.servicebus.windows.net/sales<ept id="2">&lt;/embeddedLabel&gt;</ept>).</source>
            <target state="new">The first copy is sent to the primary entity (for example, <bpt id="1">&lt;embeddedLabel&gt;</bpt>contosoPrimary.servicebus.windows.net/sales<ept id="1">&lt;/embeddedLabel&gt;</ept>), and the second copy of the message is sent to the secondary entity (for example, <bpt id="2">&lt;embeddedLabel&gt;</bpt>contosoSecondary.servicebus.windows.net/sales<ept id="2">&lt;/embeddedLabel&gt;</ept>).</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>A client receives messages from both queues.</source>
            <target state="new">A client receives messages from both queues.</target>
          </trans-unit>
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>The receiver processes the first copy of a message, and the second copy is suppressed.</source>
            <target state="new">The receiver processes the first copy of a message, and the second copy is suppressed.</target>
          </trans-unit>
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>To suppress duplicate messages, the sender must tag each message with a unique identifier.</source>
            <target state="new">To suppress duplicate messages, the sender must tag each message with a unique identifier.</target>
          </trans-unit>
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>Both copies of the message must be tagged with the same identifier.</source>
            <target state="new">Both copies of the message must be tagged with the same identifier.</target>
          </trans-unit>
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>You can use the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;P:Microsoft.ServiceBus.Messaging.BrokeredMessage.MessageId&lt;/codeEntityReference&gt;</ph> or <ph id="2">&lt;codeEntityReference qualifyHint="true"&gt;P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Label&lt;/codeEntityReference&gt;</ph> properties, or a custom property to tag the message.</source>
            <target state="new">You can use the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;P:Microsoft.ServiceBus.Messaging.BrokeredMessage.MessageId&lt;/codeEntityReference&gt;</ph> or <ph id="2">&lt;codeEntityReference qualifyHint="true"&gt;P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Label&lt;/codeEntityReference&gt;</ph> properties, or a custom property to tag the message.</target>
          </trans-unit>
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>The receiver must maintain a list of messages that it has already received.</source>
            <target state="new">The receiver must maintain a list of messages that it has already received.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Geo-replication with Service Bus Brokered Messages<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://code.msdn.microsoft.com/Geo-replication-with-f5688664&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample demonstrates active replication of messaging entities.</source>
            <target state="new">The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Geo-replication with Service Bus Brokered Messages<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://code.msdn.microsoft.com/Geo-replication-with-f5688664&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample demonstrates active replication of messaging entities.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>The active replication approach doubles the number of operations, therefore this approach can lead to higher cost.</source>
            <target state="new">The active replication approach doubles the number of operations, therefore this approach can lead to higher cost.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>Passive replication</source>
            <target state="new">Passive replication</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>In the fault-free case, passive replication uses only one of the two messaging entities.</source>
            <target state="new">In the fault-free case, passive replication uses only one of the two messaging entities.</target>
          </trans-unit>
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>A client sends the message to the active entity.</source>
            <target state="new">A client sends the message to the active entity.</target>
          </trans-unit>
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>If the operation on the active entity fails with an error code that indicates the datacenter that hosts the active entity might be unavailable, the client sends a copy of the message to the backup entity.</source>
            <target state="new">If the operation on the active entity fails with an error code that indicates the datacenter that hosts the active entity might be unavailable, the client sends a copy of the message to the backup entity.</target>
          </trans-unit>
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>At that point the active and the backup entities switch roles: the sending client considers the old active entity to be the new backup entity, and the old backup entity is the new active entity.</source>
            <target state="new">At that point the active and the backup entities switch roles: the sending client considers the old active entity to be the new backup entity, and the old backup entity is the new active entity.</target>
          </trans-unit>
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>If both send operations fail, the roles of the two entities remain unchanged and an error is returned.</source>
            <target state="new">If both send operations fail, the roles of the two entities remain unchanged and an error is returned.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>A client receives messages from both queues.</source>
            <target state="new">A client receives messages from both queues.</target>
          </trans-unit>
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>Because there is a chance that the receiver receives two copies of the same message, the receiver must suppress duplicate messages.</source>
            <target state="new">Because there is a chance that the receiver receives two copies of the same message, the receiver must suppress duplicate messages.</target>
          </trans-unit>
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>You can suppress duplicates in the same way as described for active replication.</source>
            <target state="new">You can suppress duplicates in the same way as described for active replication.</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>In general, passive replication is more economical than active replication because in most cases only one operation is performed.</source>
            <target state="new">In general, passive replication is more economical than active replication because in most cases only one operation is performed.</target>
          </trans-unit>
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>Latency, throughput, and monetary cost are identical to the non-replicated scenario.</source>
            <target state="new">Latency, throughput, and monetary cost are identical to the non-replicated scenario.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>When using passive replication, in the following scenarios messages can be lost or received twice:</source>
            <target state="new">When using passive replication, in the following scenarios messages can be lost or received twice:</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Message delay or loss<ept id="1">&lt;/embeddedLabel&gt;</ept>: Assume that the sender successfully sent a message <bpt id="2">&lt;legacyItalic&gt;</bpt>m1<ept id="2">&lt;/legacyItalic&gt;</ept> to the primary queue, and then the queue becomes unavailable before the receiver receives <bpt id="3">&lt;legacyItalic&gt;</bpt>m1<ept id="3">&lt;/legacyItalic&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Message delay or loss<ept id="1">&lt;/embeddedLabel&gt;</ept>: Assume that the sender successfully sent a message <bpt id="2">&lt;legacyItalic&gt;</bpt>m1<ept id="2">&lt;/legacyItalic&gt;</ept> to the primary queue, and then the queue becomes unavailable before the receiver receives <bpt id="3">&lt;legacyItalic&gt;</bpt>m1<ept id="3">&lt;/legacyItalic&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>The sender sends a subsequent message <bpt id="1">&lt;legacyItalic&gt;</bpt>m2<ept id="1">&lt;/legacyItalic&gt;</ept> to the secondary queue.</source>
            <target state="new">The sender sends a subsequent message <bpt id="1">&lt;legacyItalic&gt;</bpt>m2<ept id="1">&lt;/legacyItalic&gt;</ept> to the secondary queue.</target>
          </trans-unit>
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>If the primary queue is temporarily unavailable, the receiver receives <bpt id="1">&lt;legacyItalic&gt;</bpt>m1<ept id="1">&lt;/legacyItalic&gt;</ept> after the queue becomes available again.</source>
            <target state="new">If the primary queue is temporarily unavailable, the receiver receives <bpt id="1">&lt;legacyItalic&gt;</bpt>m1<ept id="1">&lt;/legacyItalic&gt;</ept> after the queue becomes available again.</target>
          </trans-unit>
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>In case of a disaster, the receiver may never receive <bpt id="1">&lt;legacyItalic&gt;</bpt>m1<ept id="1">&lt;/legacyItalic&gt;</ept>.</source>
            <target state="new">In case of a disaster, the receiver may never receive <bpt id="1">&lt;legacyItalic&gt;</bpt>m1<ept id="1">&lt;/legacyItalic&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Duplicate reception<ept id="1">&lt;/embeddedLabel&gt;</ept>: Assume that the sender sends a message <bpt id="2">&lt;legacyItalic&gt;</bpt>m<ept id="2">&lt;/legacyItalic&gt;</ept> to the primary queue.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Duplicate reception<ept id="1">&lt;/embeddedLabel&gt;</ept>: Assume that the sender sends a message <bpt id="2">&lt;legacyItalic&gt;</bpt>m<ept id="2">&lt;/legacyItalic&gt;</ept> to the primary queue.</target>
          </trans-unit>
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> successfully processes <bpt id="2">&lt;legacyItalic&gt;</bpt>m<ept id="2">&lt;/legacyItalic&gt;</ept> but fails to send a response.</source>
            <target state="new"><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> successfully processes <bpt id="2">&lt;legacyItalic&gt;</bpt>m<ept id="2">&lt;/legacyItalic&gt;</ept> but fails to send a response.</target>
          </trans-unit>
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>After the send operation times out, the sender sends an identical copy of <bpt id="1">&lt;legacyItalic&gt;</bpt>m<ept id="1">&lt;/legacyItalic&gt;</ept> to the secondary queue.</source>
            <target state="new">After the send operation times out, the sender sends an identical copy of <bpt id="1">&lt;legacyItalic&gt;</bpt>m<ept id="1">&lt;/legacyItalic&gt;</ept> to the secondary queue.</target>
          </trans-unit>
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>If the receiver is able to receive the first copy of <bpt id="1">&lt;legacyItalic&gt;</bpt>m<ept id="1">&lt;/legacyItalic&gt;</ept> before the primary queue becomes unavailable, the receiver receives both copies of <bpt id="2">&lt;legacyItalic&gt;</bpt>m<ept id="2">&lt;/legacyItalic&gt;</ept> at approximately the same time.</source>
            <target state="new">If the receiver is able to receive the first copy of <bpt id="1">&lt;legacyItalic&gt;</bpt>m<ept id="1">&lt;/legacyItalic&gt;</ept> before the primary queue becomes unavailable, the receiver receives both copies of <bpt id="2">&lt;legacyItalic&gt;</bpt>m<ept id="2">&lt;/legacyItalic&gt;</ept> at approximately the same time.</target>
          </trans-unit>
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>If the receiver is not able to receive the first copy of <bpt id="1">&lt;legacyItalic&gt;</bpt>m<ept id="1">&lt;/legacyItalic&gt;</ept> before the primary queue becomes unavailable, the receiver initially receives only the second copy of <bpt id="2">&lt;legacyItalic&gt;</bpt>m<ept id="2">&lt;/legacyItalic&gt;</ept>, but then receives a second copy of <bpt id="3">&lt;legacyItalic&gt;</bpt>m<ept id="3">&lt;/legacyItalic&gt;</ept> when the primary queue becomes available.</source>
            <target state="new">If the receiver is not able to receive the first copy of <bpt id="1">&lt;legacyItalic&gt;</bpt>m<ept id="1">&lt;/legacyItalic&gt;</ept> before the primary queue becomes unavailable, the receiver initially receives only the second copy of <bpt id="2">&lt;legacyItalic&gt;</bpt>m<ept id="2">&lt;/legacyItalic&gt;</ept>, but then receives a second copy of <bpt id="3">&lt;legacyItalic&gt;</bpt>m<ept id="3">&lt;/legacyItalic&gt;</ept> when the primary queue becomes available.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Geo-replication with Service Bus Brokered Messages<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://code.msdn.microsoft.com/Geo-replication-with-f5688664&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample demonstrates passive replication of messaging entities.</source>
            <target state="new">The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Geo-replication with Service Bus Brokered Messages<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://code.msdn.microsoft.com/Geo-replication-with-f5688664&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample demonstrates passive replication of messaging entities.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>Durable client-side queue</source>
            <target state="new">Durable client-side queue</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>If the application can tolerate a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> entity being unavailable, but must not lose messages, the sender can employ a durable client-side queue that locally stores all messages that cannot be sent to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">If the application can tolerate a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> entity being unavailable, but must not lose messages, the sender can employ a durable client-side queue that locally stores all messages that cannot be sent to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>Once the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> entity becomes available again, all buffered messages are sent to that entity.</source>
            <target state="new">Once the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> entity becomes available again, all buffered messages are sent to that entity.</target>
          </trans-unit>
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Durable Message Sender<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://code.msdn.microsoft.com/windowsazure/Service-Bus-Durable-Sender-0763230d&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample implements such a queue with the help of MSMQ.</source>
            <target state="new">The <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Durable Message Sender<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://code.msdn.microsoft.com/windowsazure/Service-Bus-Durable-Sender-0763230d&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> sample implements such a queue with the help of MSMQ.</target>
          </trans-unit>
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>Alternatively, the messages can be written to the local disk.</source>
            <target state="new">Alternatively, the messages can be written to the local disk.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>A durable client-side queue preserves message order and shields the client application from exceptions in case the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> entity is unavailable.</source>
            <target state="new">A durable client-side queue preserves message order and shields the client application from exceptions in case the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> entity is unavailable.</target>
          </trans-unit>
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>It can be used with simple and distributed transactions.</source>
            <target state="new">It can be used with simple and distributed transactions.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>Azure SQL Database Business Continuity</source>
            <target state="new">Azure SQL Database Business Continuity</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>Azure Business Continuity Technical Guidance</source>
            <target state="new">Azure Business Continuity Technical Guidance</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>