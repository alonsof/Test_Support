<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="de-DE" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANzcEJwzAMQNFVPIAFkq3Ycc8tdIAuIKsSBNIEUhcyfnP5l3f47tk6JwUzZmByhI5zB0WS0pqTSIshTYm5owIlKcCpMDSUDKbNUYtMdbYYJurJcqnAtV7JRNAaztAlM5taRdIYKIa3wf0Rw7ku7naO27Hv45pchjE8fx/ZXods31XGsm9/dt1YyaIAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Step 2: Create a Console Client</source>
            <target state="new">Step 2: Create a Console Client</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>This is the second of nine tasks required to create a basic REST-style queue and publication/subscription application that uses <ph id="1">&lt;token&gt;sb1&lt;/token&gt;</ph>.</source>
            <target state="new">This is the second of nine tasks required to create a basic REST-style queue and publication/subscription application that uses <ph id="1">&lt;token&gt;sb1&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> queues enable you to store messages in a first-in, first-out queue.</source>
            <target state="new"><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> queues enable you to store messages in a first-in, first-out queue.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Topics and subscriptions implement a publish/subscribe pattern; you create a topic and then create one or more subscriptions associated with that topic.</source>
            <target state="new">Topics and subscriptions implement a publish/subscribe pattern; you create a topic and then create one or more subscriptions associated with that topic.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>When messages are sent to the topic, they are immediately sent to the subscribers of that topic.</source>
            <target state="new">When messages are sent to the topic, they are immediately sent to the subscribers of that topic.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The code in this tutorial:</source>
            <target state="new">The code in this tutorial:</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Uses your <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph> and <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>Shared Access Signature<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;https://msdn.microsoft.com/library/dn170477.aspx&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept> (SAS) key to to gain access to your <ph id="5">&lt;token&gt;sb2&lt;/token&gt;</ph> <ph id="6">&lt;token&gt;servicensd&lt;/token&gt;</ph> resources.</source>
            <target state="new">Uses your <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph> and <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>Shared Access Signature<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;https://msdn.microsoft.com/library/dn170477.aspx&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept> (SAS) key to to gain access to your <ph id="5">&lt;token&gt;sb2&lt;/token&gt;</ph> <ph id="6">&lt;token&gt;servicensd&lt;/token&gt;</ph> resources.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Creates a queue, sends a message to the queue, and reads the message from the queue.</source>
            <target state="new">Creates a queue, sends a message to the queue, and reads the message from the queue.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Creates a topic, a subscription to that topic, and sends and reads the message from the subscription.</source>
            <target state="new">Creates a topic, a subscription to that topic, and sends and reads the message from the subscription.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Retreives all the queue, topic, and subscription information – including subscription rules -- from <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> for your <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph>.</source>
            <target state="new">Retreives all the queue, topic, and subscription information – including subscription rules -- from <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> for your <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>It then deletes the queue, topic, and subscription resources.</source>
            <target state="new">It then deletes the queue, topic, and subscription resources.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Because the service is a REST-style Web service, there are no special types involved, as the entire exchange involves strings.</source>
            <target state="new">Because the service is a REST-style Web service, there are no special types involved, as the entire exchange involves strings.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>This means that the <ph id="1">&lt;token&gt;vsprvs&lt;/token&gt;</ph> project must make no references to any <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph><ph id="3">&lt;token &gt;&lt;/token&gt;</ph> specific libraries.</source>
            <target state="new">This means that the <ph id="1">&lt;token&gt;vsprvs&lt;/token&gt;</ph> project must make no references to any <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph><ph id="3">&lt;token &gt;&lt;/token&gt;</ph> specific libraries.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>After obtaining the <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph> and credentials in step 1, the next step is to create a basic <ph id="2">&lt;token&gt;vsprvs&lt;/token&gt;</ph> console application.</source>
            <target state="new">After obtaining the <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph> and credentials in step 1, the next step is to create a basic <ph id="2">&lt;token&gt;vsprvs&lt;/token&gt;</ph> console application.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>To create a console application</source>
            <target state="new">To create a console application</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Open <ph id="1">&lt;token&gt;vs_current_short&lt;/token&gt;</ph> as an administrator by right-clicking the program in the <bpt id="2">&lt;ui&gt;</bpt>Start<ept id="2">&lt;/ui&gt;</ept> menu and clicking <bpt id="3">&lt;ui&gt;</bpt>Run as administrator<ept id="3">&lt;/ui&gt;</ept>.</source>
            <target state="new">Open <ph id="1">&lt;token&gt;vs_current_short&lt;/token&gt;</ph> as an administrator by right-clicking the program in the <bpt id="2">&lt;ui&gt;</bpt>Start<ept id="2">&lt;/ui&gt;</ept> menu and clicking <bpt id="3">&lt;ui&gt;</bpt>Run as administrator<ept id="3">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Create a new console application project.</source>
            <target state="new">Create a new console application project.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Click the <bpt id="1">&lt;ui&gt;</bpt>File<ept id="1">&lt;/ui&gt;</ept> menu and click <bpt id="2">&lt;ui&gt;</bpt>New<ept id="2">&lt;/ui&gt;</ept>, then click <bpt id="3">&lt;ui&gt;</bpt>Project<ept id="3">&lt;/ui&gt;</ept>.</source>
            <target state="new">Click the <bpt id="1">&lt;ui&gt;</bpt>File<ept id="1">&lt;/ui&gt;</ept> menu and click <bpt id="2">&lt;ui&gt;</bpt>New<ept id="2">&lt;/ui&gt;</ept>, then click <bpt id="3">&lt;ui&gt;</bpt>Project<ept id="3">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>New Project<ept id="1">&lt;/ui&gt;</ept> dialog, select <bpt id="2">&lt;ui&gt;</bpt>Visual C#<ept id="2">&lt;/ui&gt;</ept> (if <bpt id="3">&lt;ui&gt;</bpt>Visual C#<ept id="3">&lt;/ui&gt;</ept> does not appear, look under <bpt id="4">&lt;ui&gt;</bpt>Other Languages<ept id="4">&lt;/ui&gt;</ept>), select the <bpt id="5">&lt;ui&gt;</bpt>Console Application<ept id="5">&lt;/ui&gt;</ept> template, and name it <bpt id="6">&lt;ui&gt;</bpt>Microsoft.ServiceBus.Samples<ept id="6">&lt;/ui&gt;</ept>.</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>New Project<ept id="1">&lt;/ui&gt;</ept> dialog, select <bpt id="2">&lt;ui&gt;</bpt>Visual C#<ept id="2">&lt;/ui&gt;</ept> (if <bpt id="3">&lt;ui&gt;</bpt>Visual C#<ept id="3">&lt;/ui&gt;</ept> does not appear, look under <bpt id="4">&lt;ui&gt;</bpt>Other Languages<ept id="4">&lt;/ui&gt;</ept>), select the <bpt id="5">&lt;ui&gt;</bpt>Console Application<ept id="5">&lt;/ui&gt;</ept> template, and name it <bpt id="6">&lt;ui&gt;</bpt>Microsoft.ServiceBus.Samples<ept id="6">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Use the default <bpt id="1">&lt;ui&gt;</bpt>Location<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Use the default <bpt id="1">&lt;ui&gt;</bpt>Location<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Click <bpt id="1">&lt;ui&gt;</bpt>OK<ept id="1">&lt;/ui&gt;</ept> to create the project.</source>
            <target state="new">Click <bpt id="1">&lt;ui&gt;</bpt>OK<ept id="1">&lt;/ui&gt;</ept> to create the project.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>For a C# project, <ph id="1">&lt;token&gt;vsprvs&lt;/token&gt;</ph> creates a file named <ph id="2">&lt;codeInline&gt;Program.cs&lt;/codeInline&gt;</ph>.</source>
            <target state="new">For a C# project, <ph id="1">&lt;token&gt;vsprvs&lt;/token&gt;</ph> creates a file named <ph id="2">&lt;codeInline&gt;Program.cs&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>This class contains an empty <ph id="1">&lt;codeInline&gt;Main()&lt;/codeInline&gt;</ph> method, which is required for a console application project to build correctly.</source>
            <target state="new">This class contains an empty <ph id="1">&lt;codeInline&gt;Main()&lt;/codeInline&gt;</ph> method, which is required for a console application project to build correctly.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Therefore, you can safely leave it in the project.</source>
            <target state="new">Therefore, you can safely leave it in the project.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Make sure your <ph id="1">&lt;codeInline&gt;using&lt;/codeInline&gt;</ph> statements appear as follows:</source>
            <target state="new">Make sure your <ph id="1">&lt;codeInline&gt;using&lt;/codeInline&gt;</ph> statements appear as follows:</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>If necessary, rename the <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph> for the program from the <ph id="2">&lt;token&gt;vsprvs&lt;/token&gt;</ph> default to <ph id="3">&lt;codeInline&gt;Microsoft.ServiceBus.Samples&lt;/codeInline&gt;</ph>.</source>
            <target state="new">If necessary, rename the <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph> for the program from the <ph id="2">&lt;token&gt;vsprvs&lt;/token&gt;</ph> default to <ph id="3">&lt;codeInline&gt;Microsoft.ServiceBus.Samples&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Inside the <ph id="1">&lt;codeInline&gt;Program&lt;/codeInline&gt;</ph> class, add the following global variables:</source>
            <target state="new">Inside the <ph id="1">&lt;codeInline&gt;Program&lt;/codeInline&gt;</ph> class, add the following global variables:</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Inside the <ph id="1">&lt;codeInline&gt;Main()&lt;/codeInline&gt;</ph> method, paste the following code:</source>
            <target state="new">Inside the <ph id="1">&lt;codeInline&gt;Main()&lt;/codeInline&gt;</ph> method, paste the following code:</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>