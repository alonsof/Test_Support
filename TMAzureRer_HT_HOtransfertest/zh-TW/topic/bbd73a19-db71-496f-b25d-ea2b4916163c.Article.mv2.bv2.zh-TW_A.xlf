<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-TW" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAAdx1EKwjAMgOGr9AANNG1MrSfwAAOfk7bBwdxgVhie3iH8D99vlrpSrNA7ERBaAA1XhRpQuBRDkeIdaVSkmiBwjkCaGhROp0ITy7lp5uidastJsMD5CFTYQOOlQZeoVJCRU/UOvfs+YXp4dyyzWT/Gbd+24V38d/+8ZJ12Wd+LjHlbfxXGmEihAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>query_params Class</source>
            <target state="new">query_params Class</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>The query_params class represents the various options passed to the select() function on the mobile table class.</source>
            <target state="new">The query_params class represents the various options passed to the select() function on the mobile table class.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Rather than asking the application to format the query, this class allows the implementation to do all the formatting while also checking for valid input.</source>
            <target state="new">Rather than asking the application to format the query, this class allows the implementation to do all the formatting while also checking for valid input.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>The Mobile Services client library for C++ has been removed from Visual Studio 2015 and is only available in Visual Studio 2013.</source>
            <target state="new">The Mobile Services client library for C++ has been removed from Visual Studio 2015 and is only available in Visual Studio 2013.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The library is not compatible with Azure Mobile Apps.</source>
            <target state="new">The library is not compatible with Azure Mobile Apps.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Members</source>
            <target state="new">Members</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Public Constructors</source>
            <target state="new">Public Constructors</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Overloaded.</source>
            <target state="new">Overloaded.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Default constructor</source>
            <target state="new">Default constructor</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Public Methods</source>
            <target state="new">Public Methods</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Ensure the query will get the total count for all the records that would have been returned ignoring any take paging/limit clause specified by client or server.</source>
            <target state="new">Ensure the query will get the total count for all the records that would have been returned ignoring any take paging/limit clause specified by client or server.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Order the results by a given property (column).</source>
            <target state="new">Order the results by a given property (column).</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Overloaded.</source>
            <target state="new">Overloaded.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Select a subset of properties to return in the result.</source>
            <target state="new">Select a subset of properties to return in the result.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Skip the first given number of records.</source>
            <target state="new">Skip the first given number of records.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Return only a given number of records.</source>
            <target state="new">Return only a given number of records.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Add a filter expression to the query.</source>
            <target state="new">Add a filter expression to the query.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Header: <ept id="1">&lt;/embeddedLabel&gt;</ept>azuremobile.h</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Header: <ept id="1">&lt;/embeddedLabel&gt;</ept>azuremobile.h</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Namespace: <ept id="1">&lt;/embeddedLabel&gt;</ept>azure::mobile</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Namespace: <ept id="1">&lt;/embeddedLabel&gt;</ept>azure::mobile</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>