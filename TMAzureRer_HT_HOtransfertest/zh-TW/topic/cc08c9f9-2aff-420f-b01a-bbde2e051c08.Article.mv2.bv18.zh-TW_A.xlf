<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-TW" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANzFEKwyAMgOGreAAD0aZTd4IdoLDnRBNW6FroHJSdfj5/P7/ZpEKxgioRUDAEwSxQMfCtFAvMxbsmaU6MCHmqApR0VNEYUpPWiDOVot7VirkWKxDZDCiijVdgEGkaFecw3Lvg3e8Fy9O7a1vN9Or38zi6d3HY8Mf3zfty8v7ZuK/H/gdoZNBWogAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Supported data types</source>
            <target state="new">Supported data types</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Supported data types (Azure Search)</source>
            <target state="new">Supported data types (Azure Search)</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Document fields and values in expressions (for example, in filters) are typed according to the Entity Data Model, or EDM (see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Entity Data Model (MSDN)<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://msdn.microsoft.com/library/vstudio/ee382825(v=vs.100).aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> for details).</source>
            <target state="new">Document fields and values in expressions (for example, in filters) are typed according to the Entity Data Model, or EDM (see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Entity Data Model (MSDN)<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://msdn.microsoft.com/library/vstudio/ee382825(v=vs.100).aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> for details).</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Azure Search uses the following data types.</source>
            <target state="new">Azure Search uses the following data types.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>If you're using indexers to pull data into Azure Search, indexers have different data type mappings for JSON and SQL Server data sources.</source>
            <target state="new">If you're using indexers to pull data into Azure Search, indexers have different data type mappings for JSON and SQL Server data sources.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>See <ph id="1">&lt;link xlink:href="4350e176-696f-4a89-b4bb-794ace3c251e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Data type map for indexers in Azure Search&lt;/link&gt;</ph> for details.</source>
            <target state="new">See <ph id="1">&lt;link xlink:href="4350e176-696f-4a89-b4bb-794ace3c251e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Data type map for indexers in Azure Search&lt;/link&gt;</ph> for details.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>EDM data types used in Azure Search indexes and documents</source>
            <target state="new">EDM data types used in Azure Search indexes and documents</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Edm.String</source>
            <target state="new">Edm.String</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Text that can optionally be tokenized for full-text search (word-breaking, stemming, etc.)</source>
            <target state="new">Text that can optionally be tokenized for full-text search (word-breaking, stemming, etc.)</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Collection(Edm.String) </source>
            <target state="new">Collection(Edm.String) </target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>A list of strings that can optionally be tokenized for full-text search.</source>
            <target state="new">A list of strings that can optionally be tokenized for full-text search.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Edm.Boolean</source>
            <target state="new">Edm.Boolean</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Contains true/false values.</source>
            <target state="new">Contains true/false values.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Edm.Int32</source>
            <target state="new">Edm.Int32</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>32-bit integer values.</source>
            <target state="new">32-bit integer values.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Edm.Int64</source>
            <target state="new">Edm.Int64</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>64-bit integer values.</source>
            <target state="new">64-bit integer values.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Edm.Double</source>
            <target state="new">Edm.Double</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Double-precision numeric data</source>
            <target state="new">Double-precision numeric data</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Edm.DateTimeOffset</source>
            <target state="new">Edm.DateTimeOffset</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Date time values represented in the OData V4 format: <ph id="1">&lt;codeInline&gt;yyyy-MM-ddTHH:mm:ss.fffZ&lt;/codeInline&gt;</ph> or <ph id="2">&lt;codeInline&gt;yyyy-MM-ddTHH:mm:ss.fff[+|-]HH:mm&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Date time values represented in the OData V4 format: <ph id="1">&lt;codeInline&gt;yyyy-MM-ddTHH:mm:ss.fffZ&lt;/codeInline&gt;</ph> or <ph id="2">&lt;codeInline&gt;yyyy-MM-ddTHH:mm:ss.fff[+|-]HH:mm&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Precision of DateTime fields is limited to milliseconds.</source>
            <target state="new">Precision of DateTime fields is limited to milliseconds.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>If you upload datetime values with sub-millisecond precision, the value returned will be rounded up to milliseconds (for example, 2015-04-15T10:30:09.7552052Z will be returned as 2015-04-15T10:30:09.7550000Z).</source>
            <target state="new">If you upload datetime values with sub-millisecond precision, the value returned will be rounded up to milliseconds (for example, 2015-04-15T10:30:09.7552052Z will be returned as 2015-04-15T10:30:09.7550000Z).</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Edm.GeographyPoint</source>
            <target state="new">Edm.GeographyPoint</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>A point representing a geographic location on the globe.</source>
            <target state="new">A point representing a geographic location on the globe.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>For request and response bodies the representation of values of this type follows the GeoJSON "Point" type format.</source>
            <target state="new">For request and response bodies the representation of values of this type follows the GeoJSON "Point" type format.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>For URLs OData uses a literal form based on the WKT standard.</source>
            <target state="new">For URLs OData uses a literal form based on the WKT standard.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>A point literal is constructed as geography'POINT(lon lat)'.</source>
            <target state="new">A point literal is constructed as geography'POINT(lon lat)'.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>All of the above types are nullable, except for Collection(Edm.String).</source>
            <target state="new">All of the above types are nullable, except for Collection(Edm.String).</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Nullable fields can be explicitly set to null.</source>
            <target state="new">Nullable fields can be explicitly set to null.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>They are automatically set to null when omitted from a document that is uploaded t an Azure Search index.</source>
            <target state="new">They are automatically set to null when omitted from a document that is uploaded t an Azure Search index.</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Collection(Edm.String) fields are automatically set to empty ('[]' in JSON) when they are omitted from a document.</source>
            <target state="new">Collection(Edm.String) fields are automatically set to empty ('[]' in JSON) when they are omitted from a document.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Other EDM structures used in Azure Search</source>
            <target state="new">Other EDM structures used in Azure Search</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Edm.GeographyPolygon<ept id="1">&lt;/embeddedLabel&gt;</ept> is a polygon representing a geographic region on the globe.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Edm.GeographyPolygon<ept id="1">&lt;/embeddedLabel&gt;</ept> is a polygon representing a geographic region on the globe.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>While this type cannot be used in document fields, it can be used as an argument to the <ph id="1">&lt;codeInline&gt;geo.intersects&lt;/codeInline&gt;</ph> function.</source>
            <target state="new">While this type cannot be used in document fields, it can be used as an argument to the <ph id="1">&lt;codeInline&gt;geo.intersects&lt;/codeInline&gt;</ph> function.</target>
          </trans-unit>
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>The literal form for URLs in OData is based on the WKT standard.</source>
            <target state="new">The literal form for URLs in OData is based on the WKT standard.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>A polygon literal is constructed as geography'POLYGON((lon lat, lon lat, ...))'.</source>
            <target state="new">A polygon literal is constructed as geography'POLYGON((lon lat, lon lat, ...))'.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>See <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Create a geospatial search app using Azure Search<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/search-create-geospatial/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> for a walkthrough on how to use geospatial data in Azure Search.</source>
            <target state="new">See <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Create a geospatial search app using Azure Search<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/search-create-geospatial/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> for a walkthrough on how to use geospatial data in Azure Search.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Points in a polygon must be in counterclockwise order.</source>
            <target state="new">Points in a polygon must be in counterclockwise order.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Azure Search .NET SDK</source>
            <target state="new">Azure Search .NET SDK</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>