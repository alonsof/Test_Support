<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-TW" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANzNsJwzAMAMBVPIAEli07VifoAIF+yw/RQJpAmkLo9O0NcGZxVA4Nx2BGJvNYfanYPGkWMVIVcBQkNesec0iGPAVBKZ1RC5H2mppoBJdDnFgko5XSkZMqVlNGmsySRqs5jP8F7vvE+QHuWhezcZ23Y99PcAEcJ3D3z0u3+dDtveq57NsPT/D6S6IAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Step 2: Define a WCF Service Contract</source>
            <target state="new">Step 2: Define a WCF Service Contract</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Step 2: Define a WCF Service Contract to use with Service Bus</source>
            <target state="new">Step 2: Define a WCF Service Contract to use with Service Bus</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>This is the second of seven tasks required to create a basic <ph id="1">&lt;token&gt;indigo1&lt;/token&gt;</ph> service and a client that can call the service that uses <ph id="2">&lt;token&gt;sb1&lt;/token&gt;</ph>.</source>
            <target state="new">This is the second of seven tasks required to create a basic <ph id="1">&lt;token&gt;indigo1&lt;/token&gt;</ph> service and a client that can call the service that uses <ph id="2">&lt;token&gt;sb1&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>For an overview of all seven tasks, see the <ph id="1">&lt;link xlink:href="24332c3c-277f-46f2-949a-d4381b8bfb0b" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;AppFabric Service Bus Tutorial&lt;/link&gt;</ph>.</source>
            <target state="new">For an overview of all seven tasks, see the <ph id="1">&lt;link xlink:href="24332c3c-277f-46f2-949a-d4381b8bfb0b" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;AppFabric Service Bus Tutorial&lt;/link&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The previous step is <ph id="1">&lt;link xlink:href="cfec1c00-0a8b-453e-b474-35d02e7e6ba3" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 1: Sign up for an AppFabric Account&lt;/link&gt;</ph>; the subsequent step is <ph id="2">&lt;link xlink:href="dab45dab-2e04-491a-9dd2-0691608c0cf7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 3: Implement the WCF Contract&lt;/link&gt;</ph>.</source>
            <target state="new">The previous step is <ph id="1">&lt;link xlink:href="cfec1c00-0a8b-453e-b474-35d02e7e6ba3" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 1: Sign up for an AppFabric Account&lt;/link&gt;</ph>; the subsequent step is <ph id="2">&lt;link xlink:href="dab45dab-2e04-491a-9dd2-0691608c0cf7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 3: Implement the WCF Contract&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>When creating a basic <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> service (whether for <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> or not), you must define the service contract, which specifies what operations (the Web service terminology for <bpt id="3">&lt;newTerm&gt;</bpt>methods<ept id="3">&lt;/newTerm&gt;</ept> or <bpt id="4">&lt;newTerm&gt;</bpt>functions<ept id="4">&lt;/newTerm&gt;</ept>) the service supports.</source>
            <target state="new">When creating a basic <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> service (whether for <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> or not), you must define the service contract, which specifies what operations (the Web service terminology for <bpt id="3">&lt;newTerm&gt;</bpt>methods<ept id="3">&lt;/newTerm&gt;</ept> or <bpt id="4">&lt;newTerm&gt;</bpt>functions<ept id="4">&lt;/newTerm&gt;</ept>) the service supports.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Contracts are created by defining a C++, C#, or <ph id="1">&lt;token&gt;vbprvb&lt;/token&gt;</ph> interface.</source>
            <target state="new">Contracts are created by defining a C++, C#, or <ph id="1">&lt;token&gt;vbprvb&lt;/token&gt;</ph> interface.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>This tutorial demonstrates how to create such a contract using C#.</source>
            <target state="new">This tutorial demonstrates how to create such a contract using C#.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Each method in the interface corresponds to a specific service operation.</source>
            <target state="new">Each method in the interface corresponds to a specific service operation.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Each interface must have the <ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.ServiceContractAttribute&lt;/codeEntityReference&gt;</ph> attribute applied to it, and each operation must have the <ph id="2">&lt;codeEntityReference&gt;T:System.ServiceModel.OperationContractAttribute&lt;/codeEntityReference&gt;</ph> applied to it.</source>
            <target state="new">Each interface must have the <ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.ServiceContractAttribute&lt;/codeEntityReference&gt;</ph> attribute applied to it, and each operation must have the <ph id="2">&lt;codeEntityReference&gt;T:System.ServiceModel.OperationContractAttribute&lt;/codeEntityReference&gt;</ph> applied to it.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>If a method in an interface that has the <ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.ServiceContractAttribute&lt;/codeEntityReference&gt;</ph> attribute does not have the <ph id="2">&lt;codeEntityReference&gt;T:System.ServiceModel.OperationContractAttribute&lt;/codeEntityReference&gt;</ph> attribute, that method is not exposed.</source>
            <target state="new">If a method in an interface that has the <ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.ServiceContractAttribute&lt;/codeEntityReference&gt;</ph> attribute does not have the <ph id="2">&lt;codeEntityReference&gt;T:System.ServiceModel.OperationContractAttribute&lt;/codeEntityReference&gt;</ph> attribute, that method is not exposed.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The code for these tasks is provided in the example following the procedure.</source>
            <target state="new">The code for these tasks is provided in the example following the procedure.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> how to define a contract, see <ph id="2">&lt;link xlink:href="dfaace1b-c418-4e06-83cf-0261144ebd7a" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Designing an AppFabric Service Bus Contract&lt;/link&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> how to define a contract, see <ph id="2">&lt;link xlink:href="dfaace1b-c418-4e06-83cf-0261144ebd7a" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Designing an AppFabric Service Bus Contract&lt;/link&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>For a larger discussion of contracts and services, see <ph id="1">&lt;link xlink:href="036fae20-7c55-4002-b71d-ac4466e167a3" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Designing and Implementing Services&lt;/link&gt;</ph> in the <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> documentation.</source>
            <target state="new">For a larger discussion of contracts and services, see <ph id="1">&lt;link xlink:href="036fae20-7c55-4002-b71d-ac4466e167a3" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Designing and Implementing Services&lt;/link&gt;</ph> in the <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> documentation.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Expected time to completion: 10 minutes.</source>
            <target state="new">Expected time to completion: 10 minutes.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>To create a Service Bus contract with an interface</source>
            <target state="new">To create a Service Bus contract with an interface</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Open <ph id="1">&lt;token&gt;vs_current_long&lt;/token&gt;</ph> as an administrator by right-clicking the program in the <bpt id="2">&lt;ui&gt;</bpt>Start<ept id="2">&lt;/ui&gt;</ept> menu and selecting <bpt id="3">&lt;ui&gt;</bpt>Run as administrator<ept id="3">&lt;/ui&gt;</ept>.</source>
            <target state="new">Open <ph id="1">&lt;token&gt;vs_current_long&lt;/token&gt;</ph> as an administrator by right-clicking the program in the <bpt id="2">&lt;ui&gt;</bpt>Start<ept id="2">&lt;/ui&gt;</ept> menu and selecting <bpt id="3">&lt;ui&gt;</bpt>Run as administrator<ept id="3">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Create a new console application project.</source>
            <target state="new">Create a new console application project.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Click the <bpt id="1">&lt;ui&gt;</bpt>File<ept id="1">&lt;/ui&gt;</ept> menu and select <bpt id="2">&lt;ui&gt;</bpt>New<ept id="2">&lt;/ui&gt;</ept>, then click <bpt id="3">&lt;ui&gt;</bpt>Project<ept id="3">&lt;/ui&gt;</ept>.</source>
            <target state="new">Click the <bpt id="1">&lt;ui&gt;</bpt>File<ept id="1">&lt;/ui&gt;</ept> menu and select <bpt id="2">&lt;ui&gt;</bpt>New<ept id="2">&lt;/ui&gt;</ept>, then click <bpt id="3">&lt;ui&gt;</bpt>Project<ept id="3">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>New Project<ept id="1">&lt;/ui&gt;</ept> dialog, click <bpt id="2">&lt;ui&gt;</bpt>Visual C#<ept id="2">&lt;/ui&gt;</ept> (if <bpt id="3">&lt;ui&gt;</bpt>Visual C#<ept id="3">&lt;/ui&gt;</ept> does not appear, look under <bpt id="4">&lt;ui&gt;</bpt>Other Languages<ept id="4">&lt;/ui&gt;</ept>), click the <bpt id="5">&lt;ui&gt;</bpt>Console Application<ept id="5">&lt;/ui&gt;</ept> template, and name it <bpt id="6">&lt;userInput&gt;</bpt>EchoService<ept id="6">&lt;/userInput&gt;</ept>.</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>New Project<ept id="1">&lt;/ui&gt;</ept> dialog, click <bpt id="2">&lt;ui&gt;</bpt>Visual C#<ept id="2">&lt;/ui&gt;</ept> (if <bpt id="3">&lt;ui&gt;</bpt>Visual C#<ept id="3">&lt;/ui&gt;</ept> does not appear, look under <bpt id="4">&lt;ui&gt;</bpt>Other Languages<ept id="4">&lt;/ui&gt;</ept>), click the <bpt id="5">&lt;ui&gt;</bpt>Console Application<ept id="5">&lt;/ui&gt;</ept> template, and name it <bpt id="6">&lt;userInput&gt;</bpt>EchoService<ept id="6">&lt;/userInput&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Use the default <bpt id="1">&lt;ui&gt;</bpt>Location<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Use the default <bpt id="1">&lt;ui&gt;</bpt>Location<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Click <bpt id="1">&lt;ui&gt;</bpt>OK<ept id="1">&lt;/ui&gt;</ept> to create the project.</source>
            <target state="new">Click <bpt id="1">&lt;ui&gt;</bpt>OK<ept id="1">&lt;/ui&gt;</ept> to create the project.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Note that the following two steps (4 and 5) are not necessary if you are running <ph id="1">&lt;token&gt;vs2008&lt;/token&gt;</ph> or later.</source>
            <target state="new">Note that the following two steps (4 and 5) are not necessary if you are running <ph id="1">&lt;token&gt;vs2008&lt;/token&gt;</ph> or later.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>In <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, right-click the name of your project (in this example, <bpt id="2">&lt;ui&gt;</bpt>EchoService<ept id="2">&lt;/ui&gt;</ept>), and click <bpt id="3">&lt;ui&gt;</bpt>Properties<ept id="3">&lt;/ui&gt;</ept>.</source>
            <target state="new">In <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, right-click the name of your project (in this example, <bpt id="2">&lt;ui&gt;</bpt>EchoService<ept id="2">&lt;/ui&gt;</ept>), and click <bpt id="3">&lt;ui&gt;</bpt>Properties<ept id="3">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Click the <bpt id="1">&lt;ui&gt;</bpt>Application<ept id="1">&lt;/ui&gt;</ept> tab on the left, then select <bpt id="2">&lt;ui&gt;</bpt>.NET Framework 4<ept id="2">&lt;/ui&gt;</ept> from the <bpt id="3">&lt;ui&gt;</bpt>Target framework:<ept id="3">&lt;/ui&gt;</ept> dropdown.</source>
            <target state="new">Click the <bpt id="1">&lt;ui&gt;</bpt>Application<ept id="1">&lt;/ui&gt;</ept> tab on the left, then select <bpt id="2">&lt;ui&gt;</bpt>.NET Framework 4<ept id="2">&lt;/ui&gt;</ept> from the <bpt id="3">&lt;ui&gt;</bpt>Target framework:<ept id="3">&lt;/ui&gt;</ept> dropdown.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Click <bpt id="1">&lt;ui&gt;</bpt>Yes<ept id="1">&lt;/ui&gt;</ept> when prompted to reload the project.</source>
            <target state="new">Click <bpt id="1">&lt;ui&gt;</bpt>Yes<ept id="1">&lt;/ui&gt;</ept> when prompted to reload the project.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>For a C# project, <ph id="1">&lt;token&gt;vs_current_short&lt;/token&gt;</ph> creates a file that is named Program.cs.</source>
            <target state="new">For a C# project, <ph id="1">&lt;token&gt;vs_current_short&lt;/token&gt;</ph> creates a file that is named Program.cs.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>This class will contain an empty method called <ph id="1">&lt;codeInline&gt;Main()&lt;/codeInline&gt;</ph>.</source>
            <target state="new">This class will contain an empty method called <ph id="1">&lt;codeInline&gt;Main()&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>This method is required for a console application project to build correctly.</source>
            <target state="new">This method is required for a console application project to build correctly.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Therefore, you can safely leave it in the project.</source>
            <target state="new">Therefore, you can safely leave it in the project.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Add a reference to System.ServiceModel.dll to the project:</source>
            <target state="new">Add a reference to System.ServiceModel.dll to the project:</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, right-click the <bpt id="2">&lt;ui&gt;</bpt>References<ept id="2">&lt;/ui&gt;</ept> folder under the project folder and then click <bpt id="3">&lt;ui&gt;</bpt>Add Reference…<ept id="3">&lt;/ui&gt;</ept>.</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, right-click the <bpt id="2">&lt;ui&gt;</bpt>References<ept id="2">&lt;/ui&gt;</ept> folder under the project folder and then click <bpt id="3">&lt;ui&gt;</bpt>Add Reference…<ept id="3">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Select the <bpt id="1">&lt;ui&gt;</bpt>.NET<ept id="1">&lt;/ui&gt;</ept> tab in the <bpt id="2">&lt;ui&gt;</bpt>Add Reference<ept id="2">&lt;/ui&gt;</ept> dialog and scroll down until you see <bpt id="3">&lt;ui&gt;</bpt>System.ServiceModel<ept id="3">&lt;/ui&gt;</ept>, select it, and then click <bpt id="4">&lt;ui&gt;</bpt>OK<ept id="4">&lt;/ui&gt;</ept>.</source>
            <target state="new">Select the <bpt id="1">&lt;ui&gt;</bpt>.NET<ept id="1">&lt;/ui&gt;</ept> tab in the <bpt id="2">&lt;ui&gt;</bpt>Add Reference<ept id="2">&lt;/ui&gt;</ept> dialog and scroll down until you see <bpt id="3">&lt;ui&gt;</bpt>System.ServiceModel<ept id="3">&lt;/ui&gt;</ept>, select it, and then click <bpt id="4">&lt;ui&gt;</bpt>OK<ept id="4">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, double-click the Program.cs file to open it in the editor.</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, double-click the Program.cs file to open it in the editor.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Add a <ph id="1">&lt;codeInline&gt;using&lt;/codeInline&gt;</ph> statement for the <ph id="2">&lt;codeInline&gt;System.ServiceModel&lt;/codeInline&gt;</ph> namespace.</source>
            <target state="new">Add a <ph id="1">&lt;codeInline&gt;using&lt;/codeInline&gt;</ph> statement for the <ph id="2">&lt;codeInline&gt;System.ServiceModel&lt;/codeInline&gt;</ph> namespace.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeEntityReference&gt;N:System.ServiceModel&lt;/codeEntityReference&gt;</ph> is the namespace that lets you programmatically access the basic features of <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;codeEntityReference&gt;N:System.ServiceModel&lt;/codeEntityReference&gt;</ph> is the namespace that lets you programmatically access the basic features of <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> uses many of the objects and attributes of <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> to define service contracts.</source>
            <target state="new"><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> uses many of the objects and attributes of <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> to define service contracts.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>You will most likely use this namespace in most of your <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> applications.</source>
            <target state="new">You will most likely use this namespace in most of your <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> applications.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Change the namespace name from its default name of <ph id="1">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph> to <ph id="2">&lt;codeInline&gt;Microsoft.ServiceBus.Samples&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Change the namespace name from its default name of <ph id="1">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph> to <ph id="2">&lt;codeInline&gt;Microsoft.ServiceBus.Samples&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>This tutorial uses the C# namespace <ph id="1">&lt;languageKeyword&gt;Microsoft.ServiceBus.Samples&lt;/languageKeyword&gt;</ph>, which is the namespace of the contract managed type that is used in the configuration file in <ph id="2">&lt;link xlink:href="adc7ac40-5322-4a16-927f-d3b489fc4ac7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 6: Configure the WCF Client&lt;/link&gt;</ph>.</source>
            <target state="new">This tutorial uses the C# namespace <ph id="1">&lt;languageKeyword&gt;Microsoft.ServiceBus.Samples&lt;/languageKeyword&gt;</ph>, which is the namespace of the contract managed type that is used in the configuration file in <ph id="2">&lt;link xlink:href="adc7ac40-5322-4a16-927f-d3b489fc4ac7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 6: Configure the WCF Client&lt;/link&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>You can specify any namespace you want when you build this sample; however, the tutorial will not work unless you then modify the namespaces of the contract and service accordingly, in the application configuration file.</source>
            <target state="new">You can specify any namespace you want when you build this sample; however, the tutorial will not work unless you then modify the namespaces of the contract and service accordingly, in the application configuration file.</target>
          </trans-unit>
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>The namespace specified in the App.config file must be the same as the namespace specified in your C# files.</source>
            <target state="new">The namespace specified in the App.config file must be the same as the namespace specified in your C# files.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Directly after the <ph id="1">&lt;codeInline&gt;Microsoft.ServiceBus.Samples&lt;/codeInline&gt;</ph> namespace declaration, but within the namespace, define a new interface named <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> and apply the <ph id="3">&lt;codeInline&gt;ServiceContractAttribute&lt;/codeInline&gt;</ph> attribute to the interface with a namespace value of <bpt id="4">&lt;ui&gt;</bpt>http://samples.microsoft.com/ServiceModel/Relay/<ept id="4">&lt;/ui&gt;</ept>.</source>
            <target state="new">Directly after the <ph id="1">&lt;codeInline&gt;Microsoft.ServiceBus.Samples&lt;/codeInline&gt;</ph> namespace declaration, but within the namespace, define a new interface named <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> and apply the <ph id="3">&lt;codeInline&gt;ServiceContractAttribute&lt;/codeInline&gt;</ph> attribute to the interface with a namespace value of <bpt id="4">&lt;ui&gt;</bpt>http://samples.microsoft.com/ServiceModel/Relay/<ept id="4">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>The namespace value differs from the namespace that you use throughout the scope of your code.</source>
            <target state="new">The namespace value differs from the namespace that you use throughout the scope of your code.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Instead, the namespace value is used as a unique identifier for this contract.</source>
            <target state="new">Instead, the namespace value is used as a unique identifier for this contract.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Specifying the namespace explicitly prevents the default namespace value from being added to the contract name.</source>
            <target state="new">Specifying the namespace explicitly prevents the default namespace value from being added to the contract name.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Typically, the service contract namespace contains a naming scheme that includes version information.</source>
            <target state="new">Typically, the service contract namespace contains a naming scheme that includes version information.</target>
          </trans-unit>
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Including version information in the service contract namespace enables services to isolate major changes by defining a new service contract with a new namespace and exposing it on a new endpoint.</source>
            <target state="new">Including version information in the service contract namespace enables services to isolate major changes by defining a new service contract with a new namespace and exposing it on a new endpoint.</target>
          </trans-unit>
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>In in this manner, clients can continue to use the old service contract without having to be updated.</source>
            <target state="new">In in this manner, clients can continue to use the old service contract without having to be updated.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>Version information can consist of a date or a build number.</source>
            <target state="new">Version information can consist of a date or a build number.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>Service Versioning<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkID=180498&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept>.</source>
            <target state="new"><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>Service Versioning<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkID=180498&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>For the purposes of this tutorial, the naming scheme of the service contract namespace does not contain version information.</source>
            <target state="new">For the purposes of this tutorial, the naming scheme of the service contract namespace does not contain version information.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>Within the <ph id="1">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> interface, declare a method for the single operation the <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> contract exposes in the interface and apply the <ph id="3">&lt;codeInline&gt;OperationContractAttribute&lt;/codeInline&gt;</ph> attribute to the method that you want to expose as part of the public <ph id="4">&lt;token&gt;sb2&lt;/token&gt;</ph> contract.</source>
            <target state="new">Within the <ph id="1">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> interface, declare a method for the single operation the <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> contract exposes in the interface and apply the <ph id="3">&lt;codeInline&gt;OperationContractAttribute&lt;/codeInline&gt;</ph> attribute to the method that you want to expose as part of the public <ph id="4">&lt;token&gt;sb2&lt;/token&gt;</ph> contract.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>Outside the contract, declare a channel that inherits from both <ph id="1">&lt;codeInline&gt;IEchoChannel&lt;/codeInline&gt;</ph> and also to the <ph id="2">&lt;codeInline&gt;IClientChannel&lt;/codeInline&gt;</ph> interface, as shown here:</source>
            <target state="new">Outside the contract, declare a channel that inherits from both <ph id="1">&lt;codeInline&gt;IEchoChannel&lt;/codeInline&gt;</ph> and also to the <ph id="2">&lt;codeInline&gt;IClientChannel&lt;/codeInline&gt;</ph> interface, as shown here:</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>A channel is the <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> object through which the host and client pass information to each other.</source>
            <target state="new">A channel is the <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> object through which the host and client pass information to each other.</target>
          </trans-unit>
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>Later, you will write code against the channel to echo information between the two applications.</source>
            <target state="new">Later, you will write code against the channel to echo information between the two applications.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>From the <bpt id="1">&lt;ui&gt;</bpt>Build<ept id="1">&lt;/ui&gt;</ept> menu, click <bpt id="2">&lt;ui&gt;</bpt>Build Solution<ept id="2">&lt;/ui&gt;</ept> or press <bpt id="3">&lt;ui&gt;</bpt>F6<ept id="3">&lt;/ui&gt;</ept> to confirm the accuracy of your work.</source>
            <target state="new">From the <bpt id="1">&lt;ui&gt;</bpt>Build<ept id="1">&lt;/ui&gt;</ept> menu, click <bpt id="2">&lt;ui&gt;</bpt>Build Solution<ept id="2">&lt;/ui&gt;</ept> or press <bpt id="3">&lt;ui&gt;</bpt>F6<ept id="3">&lt;/ui&gt;</ept> to confirm the accuracy of your work.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>The following code example shows a basic interface that defines a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> contract.</source>
            <target state="new">The following code example shows a basic interface that defines a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> contract.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>Now that the interface is created, you can implement the interface, as described in <ph id="1">&lt;link xlink:href="dab45dab-2e04-491a-9dd2-0691608c0cf7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 3: Implement an AppFabric Service Bus Contract&lt;/link&gt;</ph>.</source>
            <target state="new">Now that the interface is created, you can implement the interface, as described in <ph id="1">&lt;link xlink:href="dab45dab-2e04-491a-9dd2-0691608c0cf7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 3: Implement an AppFabric Service Bus Contract&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>