<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-TW" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANzVEKgzAMgOGr9AANNDZrm51gBxD2nMSGCU7BOZCdfj7/H/zuuSsNBr0TAaEn0NQULKEUZkcRjqH55JlbA2fKQDcsoHki6E5czZqaaQxSragVAi/WgahdqlQEJjKqKJVzigFj+L1gfMZwLrN7P4/7vm1HDMPVrtfj+5Z13GX9LHLM2/oHbPiZA6IAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>How to: Configure a Service Programmatically</source>
            <target state="new">How to: Configure a Service Programmatically</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>How to: Configure a Service Bus Service Programmatically</source>
            <target state="new">How to: Configure a Service Bus Service Programmatically</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Once you have defined and implemented the interface for the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> service in your code, you can start configuring your application.</source>
            <target state="new">Once you have defined and implemented the interface for the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> service in your code, you can start configuring your application.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Note that configuring a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> application is very similar to configuring a <ph id="2">&lt;token&gt;indigo1&lt;/token&gt;</ph> application, as described in <ph id="3">&lt;link xlink:href="beac771e-f28e-4f84-9ff1-ad9251c726d3" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Configuring Services&lt;/link&gt;</ph> in the <ph id="4">&lt;token&gt;indigo2&lt;/token&gt;</ph> documentation.</source>
            <target state="new">Note that configuring a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> application is very similar to configuring a <ph id="2">&lt;token&gt;indigo1&lt;/token&gt;</ph> application, as described in <ph id="3">&lt;link xlink:href="beac771e-f28e-4f84-9ff1-ad9251c726d3" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Configuring Services&lt;/link&gt;</ph> in the <ph id="4">&lt;token&gt;indigo2&lt;/token&gt;</ph> documentation.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Therefore, this topic contains a simplified procedure for configuring a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> application, and also a discussion of the setting specific to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">Therefore, this topic contains a simplified procedure for configuring a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> application, and also a discussion of the setting specific to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>In addition to the issues discussed in <ph id="1">&lt;link xlink:href="c3c38827-e436-4e31-8ea6-3d90e6d169d4" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Configuring an AppFabric Service Bus Application&lt;/link&gt;</ph>, a <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> service must determine what kind of authentication and transport security, if any, is required.</source>
            <target state="new">In addition to the issues discussed in <ph id="1">&lt;link xlink:href="c3c38827-e436-4e31-8ea6-3d90e6d169d4" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Configuring an AppFabric Service Bus Application&lt;/link&gt;</ph>, a <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> service must determine what kind of authentication and transport security, if any, is required.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Authentication security is the type of security necessary for the service to connect to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">Authentication security is the type of security necessary for the service to connect to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>A service is always required to present authentication credentials to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, usually in the form of a <bpt id="2">&lt;newTerm&gt;</bpt>Shared Access Signature<ept id="2">&lt;/newTerm&gt;</ept> (SAS) key.</source>
            <target state="new">A service is always required to present authentication credentials to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, usually in the form of a <bpt id="2">&lt;newTerm&gt;</bpt>Shared Access Signature<ept id="2">&lt;/newTerm&gt;</ept> (SAS) key.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>However, the service also determines what type of authentication credentials the client applications must use in order to connect to the service.</source>
            <target state="new">However, the service also determines what type of authentication credentials the client applications must use in order to connect to the service.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>By default, client authentication is set to <ph id="1">&lt;languageKeyword&gt;RelayClientAuthenticationType.RelayAccessToken&lt;/languageKeyword&gt;</ph>, which means that the client must present some form of authentication to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">By default, client authentication is set to <ph id="1">&lt;languageKeyword&gt;RelayClientAuthenticationType.RelayAccessToken&lt;/languageKeyword&gt;</ph>, which means that the client must present some form of authentication to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>In the current version of <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, this is always another SAS token.</source>
            <target state="new">In the current version of <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, this is always another SAS token.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>In contrast, transport security determines whether it must connect with some form of secure line.</source>
            <target state="new">In contrast, transport security determines whether it must connect with some form of secure line.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>This is referred to as “end-to-end” security because it covers the entire connection between the service, <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, and the client.</source>
            <target state="new">This is referred to as “end-to-end” security because it covers the entire connection between the service, <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, and the client.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>In contrast, client authentication covers only the required relationship to connect from the service to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">In contrast, client authentication covers only the required relationship to connect from the service to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>By default, the transport security is set to <ph id="1">&lt;languageKeyword&gt;EndToEndSecurityMode.Transport&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">By default, the transport security is set to <ph id="1">&lt;languageKeyword&gt;EndToEndSecurityMode.Transport&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>This means that security is provided using some form of secure transport, such as HTTPS.</source>
            <target state="new">This means that security is provided using some form of secure transport, such as HTTPS.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>It is recommended that you keep the end-to-end security mode set to <ph id="1">&lt;languageKeyword&gt;Transport&lt;/languageKeyword&gt;</ph> unless you have a compelling reason to change it, as doing so might reduce the security of your application.</source>
            <target state="new">It is recommended that you keep the end-to-end security mode set to <ph id="1">&lt;languageKeyword&gt;Transport&lt;/languageKeyword&gt;</ph> unless you have a compelling reason to change it, as doing so might reduce the security of your application.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> security settings, see <ph id="2">&lt;link xlink:href="defd9147-3244-49e5-8304-09dc8ad9bac5" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Securing and Authenticating an AppFabric Service Bus Connection&lt;/link&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> security settings, see <ph id="2">&lt;link xlink:href="defd9147-3244-49e5-8304-09dc8ad9bac5" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Securing and Authenticating an AppFabric Service Bus Connection&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>The following procedure describes how to configure a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> service programmatically.</source>
            <target state="new">The following procedure describes how to configure a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> service programmatically.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>To programmatically configure a Service Bus Service</source>
            <target state="new">To programmatically configure a Service Bus Service</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Create the URI of the endpoint that includes your <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph> name and schema type.</source>
            <target state="new">Create the URI of the endpoint that includes your <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph> name and schema type.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>The prefix “sb” indicates that this URI uses the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> schema.</source>
            <target state="new">The prefix “sb” indicates that this URI uses the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> schema.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Other schemas include HTTP or HTTPS.</source>
            <target state="new">Other schemas include HTTP or HTTPS.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Instantiate the host with the contract and URI.</source>
            <target state="new">Instantiate the host with the contract and URI.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Declare and implement the type of authentication credentials to use.</source>
            <target state="new">Declare and implement the type of authentication credentials to use.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>All services are required to use authentication credentials to connect to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">All services are required to use authentication credentials to connect to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Note that hard-coding the policy name and SAS key into your code is not a secure practice.</source>
            <target state="new">Note that hard-coding the policy name and SAS key into your code is not a secure practice.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>For example, many of the <ph id="1">&lt;link xlink:href="326d2e16-d70a-4d93-ab24-a84a3ac44305" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Service Bus Samples&lt;/link&gt;</ph> prompt the user for this information.</source>
            <target state="new">For example, many of the <ph id="1">&lt;link xlink:href="326d2e16-d70a-4d93-ab24-a84a3ac44305" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Service Bus Samples&lt;/link&gt;</ph> prompt the user for this information.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Declare the type and instance of the contract.</source>
            <target state="new">Declare the type and instance of the contract.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Add the contract description to the service endpoint.</source>
            <target state="new">Add the contract description to the service endpoint.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Add the URI to the service endpoint.</source>
            <target state="new">Add the URI to the service endpoint.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Declare the type of binding to use for the endpoint.</source>
            <target state="new">Declare the type of binding to use for the endpoint.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>At this point you can declare the <ph id="1">&lt;languageKeyword&gt;Authentication&lt;/languageKeyword&gt;</ph> and <ph id="2">&lt;languageKeyword&gt;EndToEndSecurity&lt;/languageKeyword&gt;</ph> mode.</source>
            <target state="new">At this point you can declare the <ph id="1">&lt;languageKeyword&gt;Authentication&lt;/languageKeyword&gt;</ph> and <ph id="2">&lt;languageKeyword&gt;EndToEndSecurity&lt;/languageKeyword&gt;</ph> mode.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>This particular example uses the default constructor, which sets the <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.EndToEndSecurityMode&lt;/codeEntityReference&gt;</ph> to <ph id="2">&lt;languageKeyword&gt;Transport&lt;/languageKeyword&gt;</ph> and the <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.RelayClientAuthenticationType&lt;/codeEntityReference&gt;</ph> to <ph id="4">&lt;languageKeyword&gt;RelayAccessToken&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">This particular example uses the default constructor, which sets the <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.EndToEndSecurityMode&lt;/codeEntityReference&gt;</ph> to <ph id="2">&lt;languageKeyword&gt;Transport&lt;/languageKeyword&gt;</ph> and the <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.RelayClientAuthenticationType&lt;/codeEntityReference&gt;</ph> to <ph id="4">&lt;languageKeyword&gt;RelayAccessToken&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Therefore, the following snippet is identical to the default constructor, except that it sets those two parameters explicitly:</source>
            <target state="new">Therefore, the following snippet is identical to the default constructor, except that it sets those two parameters explicitly:</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Add the security credentials to the endpoint.</source>
            <target state="new">Add the security credentials to the endpoint.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>These security credentials are required for all services to authenticate with <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">These security credentials are required for all services to authenticate with <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Because we set the <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.RelayClientAuthenticationType&lt;/codeEntityReference&gt;</ph> to <ph id="2">&lt;languageKeyword&gt;RelayAccessToken&lt;/languageKeyword&gt;</ph> (either by default or explicitly), any client applications are also required to use the same type of authentication credentials.</source>
            <target state="new">Because we set the <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.RelayClientAuthenticationType&lt;/codeEntityReference&gt;</ph> to <ph id="2">&lt;languageKeyword&gt;RelayAccessToken&lt;/languageKeyword&gt;</ph> (either by default or explicitly), any client applications are also required to use the same type of authentication credentials.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Add the endpoint to the host.</source>
            <target state="new">Add the endpoint to the host.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>You have now created the minimum configuration necessary for a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> service application.</source>
            <target state="new">You have now created the minimum configuration necessary for a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> service application.</target>
          </trans-unit>
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>At this point, you can add more service-level or endpoint-level configurations, as you would with any other <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> application.</source>
            <target state="new">At this point, you can add more service-level or endpoint-level configurations, as you would with any other <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> application.</target>
          </trans-unit>
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> configuring a <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> application, see <ph id="3">&lt;link xlink:href="beac771e-f28e-4f84-9ff1-ad9251c726d3" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Configuring Services&lt;/link&gt;</ph> in the <ph id="4">&lt;token&gt;indigo2&lt;/token&gt;</ph> documentation.</source>
            <target state="new"><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> configuring a <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> application, see <ph id="3">&lt;link xlink:href="beac771e-f28e-4f84-9ff1-ad9251c726d3" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Configuring Services&lt;/link&gt;</ph> in the <ph id="4">&lt;token&gt;indigo2&lt;/token&gt;</ph> documentation.</target>
          </trans-unit>
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>When you are finished configuring your application, you can host and run your application.</source>
            <target state="new">When you are finished configuring your application, you can host and run your application.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> <ph id="2">&lt;link xlink:href="5f8947bc-26c6-4b15-a3a4-74bd3a0edb58" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Building a Service for the AppFabric Service Bus&lt;/link&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> <ph id="2">&lt;link xlink:href="5f8947bc-26c6-4b15-a3a4-74bd3a0edb58" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Building a Service for the AppFabric Service Bus&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>The following example shows how to define configuration information programmatically.</source>
            <target state="new">The following example shows how to define configuration information programmatically.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>The main difference is that all the information is set programmatically; in the tutorial, some information not specific to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> is stored in an App.config file.</source>
            <target state="new">The main difference is that all the information is set programmatically; in the tutorial, some information not specific to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> is stored in an App.config file.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>