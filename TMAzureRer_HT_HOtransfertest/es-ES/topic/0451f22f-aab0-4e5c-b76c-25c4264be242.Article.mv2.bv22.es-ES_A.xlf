<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="es-ES" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANjMEJwzAMAFfxABbYqhTX/Rf6bxeQhASBNIEkhYxfP+51x0XcXAkN3ImAahTQclewUmXqPapIz8lZlNkJejEEYleQqB3EuFhrrauOqhDXQAwQ0QLkbKBtMkA2wonUkTCnOnYHPN85Xcsc4df52LftzGk4HLx+X1k/u6zHIue8rX+/qYmOogAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>How to: Design a WCF Service Contract</source>
            <target state="new">How to: Design a WCF Service Contract</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>How to: Design a WCF Service Contract for use with Service Bus</source>
            <target state="new">How to: Design a WCF Service Contract for use with Service Bus</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>After you have created your <ph id="1">&lt;token&gt;sb1&lt;/token&gt;</ph> project, you can start writing code.</source>
            <target state="new">After you have created your <ph id="1">&lt;token&gt;sb1&lt;/token&gt;</ph> project, you can start writing code.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>The first step in writing the code is to define the interface that your service application uses to communicate with the client application.</source>
            <target state="new">The first step in writing the code is to define the interface that your service application uses to communicate with the client application.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>This interface, known as a <bpt id="1">&lt;newTerm&gt;</bpt>service contract<ept id="1">&lt;/newTerm&gt;</ept>, is almost identical to a <ph id="2">&lt;token&gt;indigo1&lt;/token&gt;</ph> contract: it defines the name of the interface, and also to the methods and properties exposed by the interface.</source>
            <target state="new">This interface, known as a <bpt id="1">&lt;newTerm&gt;</bpt>service contract<ept id="1">&lt;/newTerm&gt;</ept>, is almost identical to a <ph id="2">&lt;token&gt;indigo1&lt;/token&gt;</ph> contract: it defines the name of the interface, and also to the methods and properties exposed by the interface.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>You can use <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph>-style attributes to add information to the contract, and you use the same syntax to do this.</source>
            <target state="new">You can use <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph>-style attributes to add information to the contract, and you use the same syntax to do this.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The main difference is that the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> relay is an extension of <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph>.</source>
            <target state="new">The main difference is that the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> relay is an extension of <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Therefore, you must also define a channel to connect to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">Therefore, you must also define a channel to connect to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>However, other extensions of <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> use a similar channel.</source>
            <target state="new">However, other extensions of <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> use a similar channel.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Therefore, the channel itself is not unique to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">Therefore, the channel itself is not unique to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>The following discussion is a brief overview of creating a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> contract.</source>
            <target state="new">The following discussion is a brief overview of creating a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> contract.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>As with <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph>, both the service and client applications are required to have a copy of the contract in their code.</source>
            <target state="new">As with <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph>, both the service and client applications are required to have a copy of the contract in their code.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>There are four ways this can occur:</source>
            <target state="new">There are four ways this can occur:</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Manually define the contract<ept id="1">&lt;/embeddedLabel&gt;</ept> – this is the default, and is used most often when you are developing the interface.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Manually define the contract<ept id="1">&lt;/embeddedLabel&gt;</ept> – this is the default, and is used most often when you are developing the interface.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>A simplified process for doing this is shown later in this section.</source>
            <target state="new">A simplified process for doing this is shown later in this section.</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>For a complete discussion, see <ph id="1">&lt;link xlink:href="8e89cbb9-ac84-4f0d-85ef-0eb6be0022fd" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Designing Service Contracts&lt;/link&gt;</ph> in the <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> documentation.</source>
            <target state="new">For a complete discussion, see <ph id="1">&lt;link xlink:href="8e89cbb9-ac84-4f0d-85ef-0eb6be0022fd" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Designing Service Contracts&lt;/link&gt;</ph> in the <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> documentation.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Copy the contract from the service code<ept id="1">&lt;/embeddedLabel&gt;</ept> – this involves copying and pasting the contract from the service code, or sharing the project.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Copy the contract from the service code<ept id="1">&lt;/embeddedLabel&gt;</ept> – this involves copying and pasting the contract from the service code, or sharing the project.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>This is accomplished when you have quick access to the code, for example, when you are also the developer writing the client.</source>
            <target state="new">This is accomplished when you have quick access to the code, for example, when you are also the developer writing the client.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Many of the sample applications in the Azure SDK share the same interface definition, because both the client and service are in the same project.</source>
            <target state="new">Many of the sample applications in the Azure SDK share the same interface definition, because both the client and service are in the same project.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Use the ServiceModel Metadata Utility Tool (Scvutil.exe)<ept id="1">&lt;/embeddedLabel&gt;</ept> – this is an application that you point to an exposed metadata endpoint on a running service application.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Use the ServiceModel Metadata Utility Tool (Scvutil.exe)<ept id="1">&lt;/embeddedLabel&gt;</ept> – this is an application that you point to an exposed metadata endpoint on a running service application.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>It returns a file that contains the associated service contract.</source>
            <target state="new">It returns a file that contains the associated service contract.</target>
          </trans-unit>
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>A simplified procedure for doing this is described later in this section.</source>
            <target state="new">A simplified procedure for doing this is described later in this section.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>For a complete discussion, see <ph id="1">&lt;link xlink:href="d780af9f-73c5-42db-9e52-077a5e4de7fe" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Accessing Services Using a WCF Client&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="1abf3d9f-b420-46f1-b628-df238751f308" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;ServiceModel Metadata Utility Tool (Svcutil.exe)&lt;/link&gt;</ph> in the <ph id="3">&lt;token&gt;indigo2&lt;/token&gt;</ph> documentation.</source>
            <target state="new">For a complete discussion, see <ph id="1">&lt;link xlink:href="d780af9f-73c5-42db-9e52-077a5e4de7fe" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Accessing Services Using a WCF Client&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="1abf3d9f-b420-46f1-b628-df238751f308" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;ServiceModel Metadata Utility Tool (Svcutil.exe)&lt;/link&gt;</ph> in the <ph id="3">&lt;token&gt;indigo2&lt;/token&gt;</ph> documentation.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>The main difference in using Svcutil.exe on a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> application is that the URI passed to the tool is for <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>, instead of the local host.</source>
            <target state="new">The main difference in using Svcutil.exe on a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> application is that the URI passed to the tool is for <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>, instead of the local host.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Note that Svcutil.exe requires the target service to have the appropriate metadata exposed.</source>
            <target state="new">Note that Svcutil.exe requires the target service to have the appropriate metadata exposed.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> <ph id="2">&lt;link xlink:href="85b0dfcc-73f1-4ae6-8756-0b282d0ac566" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;How to: Expose a Metadata Endpoint&lt;/link&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> <ph id="2">&lt;link xlink:href="85b0dfcc-73f1-4ae6-8756-0b282d0ac566" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;How to: Expose a Metadata Endpoint&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Add a service reference through Visual Studio<ept id="1">&lt;/embeddedLabel&gt;</ept> – this is the UI version of Svcutil.exe, and can be accessed through the <ph id="2">&lt;token&gt;vs_current_short&lt;/token&gt;</ph> environment.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Add a service reference through Visual Studio<ept id="1">&lt;/embeddedLabel&gt;</ept> – this is the UI version of Svcutil.exe, and can be accessed through the <ph id="2">&lt;token&gt;vs_current_short&lt;/token&gt;</ph> environment.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>A simplified procedure for accessing the <bpt id="1">&lt;ui&gt;</bpt>Add Service Reference<ept id="1">&lt;/ui&gt;</ept> dialog box is shown later in this section.</source>
            <target state="new">A simplified procedure for accessing the <bpt id="1">&lt;ui&gt;</bpt>Add Service Reference<ept id="1">&lt;/ui&gt;</ept> dialog box is shown later in this section.</target>
          </trans-unit>
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>How to: Add, Update, or Remove a Service Reference<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://msdn.microsoft.com/library/bb628652.aspx&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept> in the <ph id="5">&lt;token&gt;vs_current_short&lt;/token&gt;</ph> documentation.</source>
            <target state="new"><ph id="1">&lt;token&gt;crdefault&lt;/token&gt;</ph> <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>How to: Add, Update, or Remove a Service Reference<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://msdn.microsoft.com/library/bb628652.aspx&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept> in the <ph id="5">&lt;token&gt;vs_current_short&lt;/token&gt;</ph> documentation.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>As stated previously, adding a service reference requires that the target service expose the necessary information through a metadata endpoint.</source>
            <target state="new">As stated previously, adding a service reference requires that the target service expose the necessary information through a metadata endpoint.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>To manually create a Service Bus contract</source>
            <target state="new">To manually create a Service Bus contract</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Create the service contract by applying the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;T:System.ServiceModel.ServiceContractAttribute&lt;/codeEntityReference&gt;</ph> attribute to the interface that defines the methods the service is to implement.</source>
            <target state="new">Create the service contract by applying the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;T:System.ServiceModel.ServiceContractAttribute&lt;/codeEntityReference&gt;</ph> attribute to the interface that defines the methods the service is to implement.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Indicate which methods in the interface a client can invoke by applying the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;T:System.ServiceModel.OperationContractAttribute&lt;/codeEntityReference&gt;</ph> attribute to them.</source>
            <target state="new">Indicate which methods in the interface a client can invoke by applying the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;T:System.ServiceModel.OperationContractAttribute&lt;/codeEntityReference&gt;</ph> attribute to them.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>It best to explicitly define the name of your contract, and also to the namespace of your application, when declaring the contract.</source>
            <target state="new">It best to explicitly define the name of your contract, and also to the namespace of your application, when declaring the contract.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Doing so prevents the infrastructure from using the default name and namespace values.</source>
            <target state="new">Doing so prevents the infrastructure from using the default name and namespace values.</target>
          </trans-unit>
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Note that this is not the <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph>: in this case, it represents a unique identifier for your contract, and should contain some kind of versioning information.</source>
            <target state="new">Note that this is not the <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph>: in this case, it represents a unique identifier for your contract, and should contain some kind of versioning information.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Declare a channel that inherits from your interface and also from the <ph id="1">&lt;codeInline&gt;IClientChannel&lt;/codeInline&gt;</ph> interface.</source>
            <target state="new">Declare a channel that inherits from your interface and also from the <ph id="1">&lt;codeInline&gt;IClientChannel&lt;/codeInline&gt;</ph> interface.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>If you are creating a service application, implement the interface elsewhere in your code.</source>
            <target state="new">If you are creating a service application, implement the interface elsewhere in your code.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>To use Svcutil.exe to create a service contract from a service application</source>
            <target state="new">To use Svcutil.exe to create a service contract from a service application</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Ensure that the service is running before you try to retrieve the metadata.</source>
            <target state="new">Ensure that the service is running before you try to retrieve the metadata.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Use the command line to move to the location of the Svcutil.exe took in the Windows SDK.</source>
            <target state="new">Use the command line to move to the location of the Svcutil.exe took in the Windows SDK.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>The default installation path is C:\Program Files\Microsoft SDKs\Windows\&lt;version&gt;\Bin.</source>
            <target state="new">The default installation path is C:\Program Files\Microsoft SDKs\Windows\&lt;version&gt;\Bin.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>From the command line, run the following command:</source>
            <target state="new">From the command line, run the following command:</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>If the target address has the appropriate metadata exposed, you will retrieve a file that contains <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> client code that the client application can use to start the service application.</source>
            <target state="new">If the target address has the appropriate metadata exposed, you will retrieve a file that contains <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> client code that the client application can use to start the service application.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>To add a service reference through Visual Studio</source>
            <target state="new">To add a service reference through Visual Studio</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>In <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, right-click the name of the project to which you want to add the service.</source>
            <target state="new">In <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, right-click the name of the project to which you want to add the service.</target>
          </trans-unit>
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Then click <bpt id="1">&lt;ui&gt;</bpt>Add Service Reference<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Then click <bpt id="1">&lt;ui&gt;</bpt>Add Service Reference<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;ui&gt;</bpt>Add Service Reference<ept id="1">&lt;/ui&gt;</ept> dialog box appears.</source>
            <target state="new">The <bpt id="1">&lt;ui&gt;</bpt>Add Service Reference<ept id="1">&lt;/ui&gt;</ept> dialog box appears.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>Address<ept id="1">&lt;/ui&gt;</ept> box, enter the URL for the service.</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>Address<ept id="1">&lt;/ui&gt;</ept> box, enter the URL for the service.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>Then click <bpt id="1">&lt;ui&gt;</bpt>Go<ept id="1">&lt;/ui&gt;</ept> to search for the service.</source>
            <target state="new">Then click <bpt id="1">&lt;ui&gt;</bpt>Go<ept id="1">&lt;/ui&gt;</ept> to search for the service.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>If the service implements username/password security, you may be prompted for a username and password.</source>
            <target state="new">If the service implements username/password security, you may be prompted for a username and password.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>Service<ept id="1">&lt;/ui&gt;</ept> list, expand the node for the service that you want to use, and then select a service contract.</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>Service<ept id="1">&lt;/ui&gt;</ept> list, expand the node for the service that you want to use, and then select a service contract.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>Namespace<ept id="1">&lt;/ui&gt;</ept> box, enter the namespace that you want to use for the reference.</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>Namespace<ept id="1">&lt;/ui&gt;</ept> box, enter the namespace that you want to use for the reference.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>Click <bpt id="1">&lt;ui&gt;</bpt>OK<ept id="1">&lt;/ui&gt;</ept> to add the reference to the project.</source>
            <target state="new">Click <bpt id="1">&lt;ui&gt;</bpt>OK<ept id="1">&lt;/ui&gt;</ept> to add the reference to the project.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>A service client (proxy) is generated, and metadata describing the service is added to the App.config file.</source>
            <target state="new">A service client (proxy) is generated, and metadata describing the service is added to the App.config file.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>