<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="es-ES" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANzFEKwyAMgOGreAADGqOpex/sfbtAtAkUuhbaDnr8+fx//GZJG2EHVSKgaAFamBr0EKXUalGkepcDMRZjqNSH4jmClJ6hoKHMzBgn8y4SIdYgMFkXGNMClYdnTa2R5pyIhvJOT3i+vbvXxUzv63Hs++Udjpa8e/2+sn0O2c5VrmXf/gy+Ci2iAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Step 3: Add Artifacts to the Project</source>
            <target state="new">Step 3: Add Artifacts to the Project</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>As per the business scenario, Northwind Traders receive the insurance quotes in more than one XML format.</source>
            <target state="new">As per the business scenario, Northwind Traders receive the insurance quotes in more than one XML format.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>So, the tutorial assumes that there are two schemas in which Northwind receives insurance quotes.</source>
            <target state="new">So, the tutorial assumes that there are two schemas in which Northwind receives insurance quotes.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Both schemas are compliant with the ACORD standards.</source>
            <target state="new">Both schemas are compliant with the ACORD standards.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Assume the schema names to be <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRq1.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept> and <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRq2.xsd<ept id="2">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">Assume the schema names to be <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRq1.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept> and <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRq2.xsd<ept id="2">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>There must be two response schemas as well that are compliant with ACORD standards, one each for each request schema.</source>
            <target state="new">There must be two response schemas as well that are compliant with ACORD standards, one each for each request schema.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The response schemas are called <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRs1.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept> and <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRs2.xsd<ept id="2">&lt;/embeddedLabel&gt;</ept>, respectively.</source>
            <target state="new">The response schemas are called <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRs1.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept> and <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRs2.xsd<ept id="2">&lt;/embeddedLabel&gt;</ept>, respectively.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Finally, per the business scenario, Northwind normalizes request messages in both the formats into a schema proprietary to Northwind, called <bpt id="1">&lt;embeddedLabel&gt;</bpt>NorthwindSchema.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">Finally, per the business scenario, Northwind normalizes request messages in both the formats into a schema proprietary to Northwind, called <bpt id="1">&lt;embeddedLabel&gt;</bpt>NorthwindSchema.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>This tutorial assumes that the schemas are in the following format:</source>
            <target state="new">This tutorial assumes that the schemas are in the following format:</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>The tutorial does not get into the details of creating these schemas.</source>
            <target state="new">The tutorial does not get into the details of creating these schemas.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>After the schemas, the second set of artifacts required in the tutorial are <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s.</source>
            <target state="new">After the schemas, the second set of artifacts required in the tutorial are <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s map the request messages from the ACORD schema to the request message schema that is proprietary to Northwind.</source>
            <target state="new">The <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s map the request messages from the ACORD schema to the request message schema that is proprietary to Northwind.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>To start with the tutorial requires two <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s, one to map ACORDRq1.xsd to NorthwindSchema.xsd (let’s call this <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRq1_To_Northwind.trfm<ept id="2">&lt;/embeddedLabel&gt;</ept>) and one to map ACORDRq2.xsd to NorthwindSchema.xsd (let’s call this <bpt id="3">&lt;embeddedLabel&gt;</bpt>ACORDRq2_To_Northwind.trfm<ept id="3">&lt;/embeddedLabel&gt;</ept>).</source>
            <target state="new">To start with the tutorial requires two <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s, one to map ACORDRq1.xsd to NorthwindSchema.xsd (let’s call this <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRq1_To_Northwind.trfm<ept id="2">&lt;/embeddedLabel&gt;</ept>) and one to map ACORDRq2.xsd to NorthwindSchema.xsd (let’s call this <bpt id="3">&lt;embeddedLabel&gt;</bpt>ACORDRq2_To_Northwind.trfm<ept id="3">&lt;/embeddedLabel&gt;</ept>).</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Similarly two <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s are required to map the response from Northwind into the response messages compliant with ACORD schema.</source>
            <target state="new">Similarly two <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s are required to map the response from Northwind into the response messages compliant with ACORD schema.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>One <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> maps the response from Northwind to ACORDRs1.xsd (let’s call this <bpt id="2">&lt;embeddedLabel&gt;</bpt>Northwind_To_ACORDRs1.trfm<ept id="2">&lt;/embeddedLabel&gt;</ept>) and the other map the response from Northwind to ACORDRs2.xsd (let’s call this <bpt id="3">&lt;embeddedLabel&gt;</bpt>Northwind_To_ACORDRs2.xsd<ept id="3">&lt;/embeddedLabel&gt;</ept>).</source>
            <target state="new">One <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> maps the response from Northwind to ACORDRs1.xsd (let’s call this <bpt id="2">&lt;embeddedLabel&gt;</bpt>Northwind_To_ACORDRs1.trfm<ept id="2">&lt;/embeddedLabel&gt;</ept>) and the other map the response from Northwind to ACORDRs2.xsd (let’s call this <bpt id="3">&lt;embeddedLabel&gt;</bpt>Northwind_To_ACORDRs2.xsd<ept id="3">&lt;/embeddedLabel&gt;</ept>).</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>The following illustration summarizes how <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s map the different schemas.</source>
            <target state="new">The following illustration summarizes how <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s map the different schemas.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>This topic demonstrates how to create these <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s for mapping the different source and destination schemas.</source>
            <target state="new">This topic demonstrates how to create these <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s for mapping the different source and destination schemas.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The two request schemas are the same, except for the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Comments<ept id="1">&lt;/embeddedLabel&gt;</ept> node in the <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRq2.xsd<ept id="2">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">The two request schemas are the same, except for the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Comments<ept id="1">&lt;/embeddedLabel&gt;</ept> node in the <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRq2.xsd<ept id="2">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>So, for creating <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s for request schemas, the following procedure only demonstrates creating one <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> (from ACORDRq1.xsd to NorthwindSchema.xsd).</source>
            <target state="new">So, for creating <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s for request schemas, the following procedure only demonstrates creating one <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> (from ACORDRq1.xsd to NorthwindSchema.xsd).</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>You can follow the same steps to create the other <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> as well (from ACORDRs2.xsd to NorthwindSchemas.xsd).</source>
            <target state="new">You can follow the same steps to create the other <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> as well (from ACORDRs2.xsd to NorthwindSchemas.xsd).</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Moreover, because the <bpt id="1">&lt;embeddedLabel&gt;</bpt>NorthwindSchema.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept> does not have a <bpt id="2">&lt;embeddedLabel&gt;</bpt>Comments<ept id="2">&lt;/embeddedLabel&gt;</ept> node, the node in the <bpt id="3">&lt;embeddedLabel&gt;</bpt>ACORDRq2.xsd<ept id="3">&lt;/embeddedLabel&gt;</ept> does not have a matching node in the destination schema and hence doesn’t require mapping.</source>
            <target state="new">Moreover, because the <bpt id="1">&lt;embeddedLabel&gt;</bpt>NorthwindSchema.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept> does not have a <bpt id="2">&lt;embeddedLabel&gt;</bpt>Comments<ept id="2">&lt;/embeddedLabel&gt;</ept> node, the node in the <bpt id="3">&lt;embeddedLabel&gt;</bpt>ACORDRq2.xsd<ept id="3">&lt;/embeddedLabel&gt;</ept> does not have a matching node in the destination schema and hence doesn’t require mapping.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>All the artifacts (the five schemas and the four <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s) used in this solution are also packaged with the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Bridges_RelayServices<ept id="2">&lt;/embeddedLabel&gt;</ept> sample.</source>
            <target state="new">All the artifacts (the five schemas and the four <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s) used in this solution are also packaged with the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Bridges_RelayServices<ept id="2">&lt;/embeddedLabel&gt;</ept> sample.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>You can download the sample from the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>MSDN Code Gallery<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=252395&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">You can download the sample from the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>MSDN Code Gallery<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkId=252395&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>You can look at those artifacts as well for a better understanding.</source>
            <target state="new">You can look at those artifacts as well for a better understanding.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>You can also add the schemas bundled with the sample to your <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph>.</source>
            <target state="new">You can also add the schemas bundled with the sample to your <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>To map ACORDRq1.xsd and ACORDRq2.xsd to NorthwindSchema.xsd</source>
            <target state="new">To map ACORDRq1.xsd and ACORDRq2.xsd to NorthwindSchema.xsd</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Bridges_RelayServices<ept id="1">&lt;/embeddedLabel&gt;</ept> solution, right-click the project, point to <bpt id="2">&lt;embeddedLabel&gt;</bpt>Add<ept id="2">&lt;/embeddedLabel&gt;</ept>, and select <bpt id="3">&lt;embeddedLabel&gt;</bpt>New Item<ept id="3">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">In the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Bridges_RelayServices<ept id="1">&lt;/embeddedLabel&gt;</ept> solution, right-click the project, point to <bpt id="2">&lt;embeddedLabel&gt;</bpt>Add<ept id="2">&lt;/embeddedLabel&gt;</ept>, and select <bpt id="3">&lt;embeddedLabel&gt;</bpt>New Item<ept id="3">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>From <bpt id="1">&lt;embeddedLabel&gt;</bpt>Add New Item<ept id="1">&lt;/embeddedLabel&gt;</ept>, select <bpt id="2">&lt;embeddedLabel&gt;</bpt>Map<ept id="2">&lt;/embeddedLabel&gt;</ept>, enter <bpt id="3">&lt;userInput&gt;</bpt>ACORDRq1_To_Northwind.trfm<ept id="3">&lt;/userInput&gt;</ept> for the name, and then select <bpt id="4">&lt;embeddedLabel&gt;</bpt>Add<ept id="4">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">From <bpt id="1">&lt;embeddedLabel&gt;</bpt>Add New Item<ept id="1">&lt;/embeddedLabel&gt;</ept>, select <bpt id="2">&lt;embeddedLabel&gt;</bpt>Map<ept id="2">&lt;/embeddedLabel&gt;</ept>, enter <bpt id="3">&lt;userInput&gt;</bpt>ACORDRq1_To_Northwind.trfm<ept id="3">&lt;/userInput&gt;</ept> for the name, and then select <bpt id="4">&lt;embeddedLabel&gt;</bpt>Add<ept id="4">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>For the source schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRq1.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">For the source schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRq1.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>For the destination schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>NorthwindSchema.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">For the destination schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>NorthwindSchema.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>The elements in the following table are directly mapped to each other, simply by connecting the two nodes, without the use of any <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>.</source>
            <target state="new">The elements in the following table are directly mapped to each other, simply by connecting the two nodes, without the use of any <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Node in the source schema</source>
            <target state="new">Node in the source schema</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Node in the destination schema</source>
            <target state="new">Node in the destination schema</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>ACORDStandardVersionCd</source>
            <target state="new">ACORDStandardVersionCd</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>ACORDStandardVersionCd</source>
            <target state="new">ACORDStandardVersionCd</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>RqUID</source>
            <target state="new">RqUID</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>RqUID</source>
            <target state="new">RqUID</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>TransactionRequestDt</source>
            <target state="new">TransactionRequestDt</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>TransactionRequestDt</source>
            <target state="new">TransactionRequestDt</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>CurCd</source>
            <target state="new">CurCd</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>CurCd</source>
            <target state="new">CurCd</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>InsuredOrPrincipal</source>
            <target state="new">InsuredOrPrincipal</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>InsuredOrPrincipal</source>
            <target state="new">InsuredOrPrincipal</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>QuoteAmount</source>
            <target state="new">QuoteAmount</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>QuoteAmount</source>
            <target state="new">QuoteAmount</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Parent node <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> node and its child node <bpt id="2">&lt;embeddedLabel&gt;</bpt>LOBCd<ept id="2">&lt;/embeddedLabel&gt;</ept> in the source schema map to the same elements in the destination schema.</source>
            <target state="new">Parent node <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> node and its child node <bpt id="2">&lt;embeddedLabel&gt;</bpt>LOBCd<ept id="2">&lt;/embeddedLabel&gt;</ept> in the source schema map to the same elements in the destination schema.</target>
          </trans-unit>
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>However, because <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> is marked as ‘unbounded’ in the schema, it can appear more than once in the XML request message.</source>
            <target state="new">However, because <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> is marked as ‘unbounded’ in the schema, it can appear more than once in the XML request message.</target>
          </trans-unit>
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>So, the <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> must have a way to map each iteration of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="2">&lt;/embeddedLabel&gt;</ept> node and its child node (<bpt id="3">&lt;embeddedLabel&gt;</bpt>LOBCd<ept id="3">&lt;/embeddedLabel&gt;</ept>) to the relevant nodes in the destination schema.</source>
            <target state="new">So, the <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> must have a way to map each iteration of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="2">&lt;/embeddedLabel&gt;</ept> node and its child node (<bpt id="3">&lt;embeddedLabel&gt;</bpt>LOBCd<ept id="3">&lt;/embeddedLabel&gt;</ept>) to the relevant nodes in the destination schema.</target>
          </trans-unit>
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation does just that.</source>
            <target state="new">The <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation does just that.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>When you connect two elements in the source and destination schema by using a <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation, every occurrence of the element in the source schema is mapped to the relevant occurrence of the element in the target schema.</source>
            <target state="new">When you connect two elements in the source and destination schema by using a <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation, every occurrence of the element in the source schema is mapped to the relevant occurrence of the element in the target schema.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>Needless to say that the relevant node in the destination schema must also be marked as ‘unbounded’, as is the case in this tutorial where the node in the destination schema is also marked as unbounded.</source>
            <target state="new">Needless to say that the relevant node in the destination schema must also be marked as ‘unbounded’, as is the case in this tutorial where the node in the destination schema is also marked as unbounded.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Another important thing to understand about <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept>, and other loop operations in general, is the concept of <bpt id="2">&lt;legacyItalic&gt;</bpt>scopes<ept id="2">&lt;/legacyItalic&gt;</ept>.</source>
            <target state="new">Another important thing to understand about <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept>, and other loop operations in general, is the concept of <bpt id="2">&lt;legacyItalic&gt;</bpt>scopes<ept id="2">&lt;/legacyItalic&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>Like programming languages, you can create scopes within <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s as well.</source>
            <target state="new">Like programming languages, you can create scopes within <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s as well.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>All the relationships (simple mappings or ones that involve <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s) defined within a scope are specific to the scope.</source>
            <target state="new">All the relationships (simple mappings or ones that involve <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s) defined within a scope are specific to the scope.</target>
          </trans-unit>
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>But why discuss scopes when all that’s required is a <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation?</source>
            <target state="new">But why discuss scopes when all that’s required is a <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation?</target>
          </trans-unit>
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>That’s because adding a <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation, by default creates a new scope.</source>
            <target state="new">That’s because adding a <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation, by default creates a new scope.</target>
          </trans-unit>
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>So, perform the following series of steps to add the <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> and <bpt id="2">&lt;embeddedLabel&gt;</bpt>LOBCd<ept id="2">&lt;/embeddedLabel&gt;</ept> nodes to the relevant elements in the destination schemas:</source>
            <target state="new">So, perform the following series of steps to add the <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> and <bpt id="2">&lt;embeddedLabel&gt;</bpt>LOBCd<ept id="2">&lt;/embeddedLabel&gt;</ept> nodes to the relevant elements in the destination schemas:</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>Map <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> nodes in the source and destination schema by using a <bpt id="2">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="2">&lt;/embeddedLabel&gt;</ept> <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph>.</source>
            <target state="new">Map <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> nodes in the source and destination schema by using a <bpt id="2">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="2">&lt;/embeddedLabel&gt;</ept> <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>Adding a MapEach Loop also creates a scope.</source>
            <target state="new">Adding a MapEach Loop also creates a scope.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>Within the scope, map the <bpt id="1">&lt;embeddedLabel&gt;</bpt>LOBCd<ept id="1">&lt;/embeddedLabel&gt;</ept> nodes in the source and destination schemas.</source>
            <target state="new">Within the scope, map the <bpt id="1">&lt;embeddedLabel&gt;</bpt>LOBCd<ept id="1">&lt;/embeddedLabel&gt;</ept> nodes in the source and destination schemas.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>Close the scope.</source>
            <target state="new">Close the scope.</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>Drag and drop the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> to the <ph id="3">&lt;token&gt;transform&lt;/token&gt;</ph> design surface.</source>
            <target state="new">Drag and drop the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> to the <ph id="3">&lt;token&gt;transform&lt;/token&gt;</ph> design surface.</target>
          </trans-unit>
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>Notice that the scope is created in the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation box, as this icon denotes (<ph id="2">&lt;mediaLinkInline&gt;&lt;image xlink:href="15daf586-3580-4ac0-8b65-51d1d59e6fe5" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;&lt;/image&gt;&lt;/mediaLinkInline&gt;</ph>).</source>
            <target state="new">Notice that the scope is created in the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation box, as this icon denotes (<ph id="2">&lt;mediaLinkInline&gt;&lt;image xlink:href="15daf586-3580-4ac0-8b65-51d1d59e6fe5" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;&lt;/image&gt;&lt;/mediaLinkInline&gt;</ph>).</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>Connect the <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> node in the source schema to the <bpt id="2">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="2">&lt;/embeddedLabel&gt;</ept> <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph>.</source>
            <target state="new">Connect the <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> node in the source schema to the <bpt id="2">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="2">&lt;/embeddedLabel&gt;</ept> <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>Similarly, connect the <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> node in the destination schema to the same <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph>.</source>
            <target state="new">Similarly, connect the <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersPolicy<ept id="1">&lt;/embeddedLabel&gt;</ept> node in the destination schema to the same <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Map the <bpt id="1">&lt;embeddedLabel&gt;</bpt>LOBCd<ept id="1">&lt;/embeddedLabel&gt;</ept> nodes in the source and destination schema.</source>
            <target state="new">Map the <bpt id="1">&lt;embeddedLabel&gt;</bpt>LOBCd<ept id="1">&lt;/embeddedLabel&gt;</ept> nodes in the source and destination schema.</target>
          </trans-unit>
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>Notice that the link snaps to go ‘through’ the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation, irrespective of how you link it.</source>
            <target state="new">Notice that the link snaps to go ‘through’ the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation, irrespective of how you link it.</target>
          </trans-unit>
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>That’s because the actions are still being performed in the scope that the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation created.</source>
            <target state="new">That’s because the actions are still being performed in the scope that the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MapEach Loop<ept id="1">&lt;/embeddedLabel&gt;</ept> operation created.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>Close the scope by selecting the icon (<ph id="1">&lt;mediaLinkInline&gt;&lt;image xlink:href="15daf586-3580-4ac0-8b65-51d1d59e6fe5" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;&lt;/image&gt;&lt;/mediaLinkInline&gt;</ph>).</source>
            <target state="new">Close the scope by selecting the icon (<ph id="1">&lt;mediaLinkInline&gt;&lt;image xlink:href="15daf586-3580-4ac0-8b65-51d1d59e6fe5" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;&lt;/image&gt;&lt;/mediaLinkInline&gt;</ph>).</target>
          </trans-unit>
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>The icon now changes to the following: <ph id="1">&lt;mediaLinkInline&gt;&lt;image xlink:href="d9a55521-ab22-48df-ad88-97f18b2a2148" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;&lt;/image&gt;&lt;/mediaLinkInline&gt;</ph>.</source>
            <target state="new">The icon now changes to the following: <ph id="1">&lt;mediaLinkInline&gt;&lt;image xlink:href="d9a55521-ab22-48df-ad88-97f18b2a2148" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;&lt;/image&gt;&lt;/mediaLinkInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>Repeat step 4 to map the <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersAutoLoanBusiness<ept id="1">&lt;/embeddedLabel&gt;</ept> node, along with its child node, in the source and destination schemas.</source>
            <target state="new">Repeat step 4 to map the <bpt id="1">&lt;embeddedLabel&gt;</bpt>PersAutoLoanBusiness<ept id="1">&lt;/embeddedLabel&gt;</ept> node, along with its child node, in the source and destination schemas.</target>
          </trans-unit>
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>The final mapping resembles the following:</source>
            <target state="new">The final mapping resembles the following:</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>Save changes to the project.</source>
            <target state="new">Save changes to the project.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>Follow this procedure to create the <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRq2_To_Northwind.trfm<ept id="2">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">Follow this procedure to create the <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRq2_To_Northwind.trfm<ept id="2">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>To map NorthwindSchema.xsd to ACORDRs1.xsd</source>
            <target state="new">To map NorthwindSchema.xsd to ACORDRs1.xsd</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Bridges_Services<ept id="1">&lt;/embeddedLabel&gt;</ept> solution, right-click the project, point to <bpt id="2">&lt;embeddedLabel&gt;</bpt>Add<ept id="2">&lt;/embeddedLabel&gt;</ept>, and select <bpt id="3">&lt;embeddedLabel&gt;</bpt>New Item<ept id="3">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">In the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Bridges_Services<ept id="1">&lt;/embeddedLabel&gt;</ept> solution, right-click the project, point to <bpt id="2">&lt;embeddedLabel&gt;</bpt>Add<ept id="2">&lt;/embeddedLabel&gt;</ept>, and select <bpt id="3">&lt;embeddedLabel&gt;</bpt>New Item<ept id="3">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>From <bpt id="1">&lt;embeddedLabel&gt;</bpt>Add New Item<ept id="1">&lt;/embeddedLabel&gt;</ept>, select <bpt id="2">&lt;embeddedLabel&gt;</bpt>Map<ept id="2">&lt;/embeddedLabel&gt;</ept>, enter <bpt id="3">&lt;userInput&gt;</bpt>Northwind_To_ACORDRs1.trfm<ept id="3">&lt;/userInput&gt;</ept> for the name, and then select <bpt id="4">&lt;embeddedLabel&gt;</bpt>Add<ept id="4">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">From <bpt id="1">&lt;embeddedLabel&gt;</bpt>Add New Item<ept id="1">&lt;/embeddedLabel&gt;</ept>, select <bpt id="2">&lt;embeddedLabel&gt;</bpt>Map<ept id="2">&lt;/embeddedLabel&gt;</ept>, enter <bpt id="3">&lt;userInput&gt;</bpt>Northwind_To_ACORDRs1.trfm<ept id="3">&lt;/userInput&gt;</ept> for the name, and then select <bpt id="4">&lt;embeddedLabel&gt;</bpt>Add<ept id="4">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>For the source schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>NorthwindSchema.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">For the source schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>NorthwindSchema.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>For the destination schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRs1.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">For the destination schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRs1.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>The elements in the following table are directly mapped to each other, simply by connecting the two nodes, without the use of any <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>.</source>
            <target state="new">The elements in the following table are directly mapped to each other, simply by connecting the two nodes, without the use of any <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>Node in the source schema</source>
            <target state="new">Node in the source schema</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>Node in the destination schema</source>
            <target state="new">Node in the destination schema</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>ACORDStandardVersionCd</source>
            <target state="new">ACORDStandardVersionCd</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>ACORDStandardVersionCd</source>
            <target state="new">ACORDStandardVersionCd</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>RqUID</source>
            <target state="new">RqUID</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>RqUID</source>
            <target state="new">RqUID</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>TransactionRequestDt</source>
            <target state="new">TransactionRequestDt</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>TransactionRequestDt</source>
            <target state="new">TransactionRequestDt</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>The destination schema, <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRs1.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept> has a node called <bpt id="2">&lt;embeddedLabel&gt;</bpt>MsgStatusCd<ept id="2">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">The destination schema, <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRs1.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept> has a node called <bpt id="2">&lt;embeddedLabel&gt;</bpt>MsgStatusCd<ept id="2">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;embeddedLabel&gt;</bpt>MsgStatusCd<ept id="1">&lt;/embeddedLabel&gt;</ept> node must contain the value of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="2">&lt;/embeddedLabel&gt;</ept> SOAP header that is set on the response message by the relay services.</source>
            <target state="new">The <bpt id="1">&lt;embeddedLabel&gt;</bpt>MsgStatusCd<ept id="1">&lt;/embeddedLabel&gt;</ept> node must contain the value of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="2">&lt;/embeddedLabel&gt;</ept> SOAP header that is set on the response message by the relay services.</target>
          </trans-unit>
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>The typical way to do add this header with the value would be to:</source>
            <target state="new">The typical way to do add this header with the value would be to:</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>Create a property, for example <bpt id="1">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="1">&lt;/embeddedLabel&gt;</ept>, as part of the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration (<bpt id="3">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="3">&lt;/embeddedLabel&gt;</ept> stage) to extract the value from the response message header.</source>
            <target state="new">Create a property, for example <bpt id="1">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="1">&lt;/embeddedLabel&gt;</ept>, as part of the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration (<bpt id="3">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="3">&lt;/embeddedLabel&gt;</ept> stage) to extract the value from the response message header.</target>
          </trans-unit>
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>The tutorial demonstrates how to create this property in the subsequent steps, as described at <ph id="1">&lt;link xlink:href="9e498d62-bcd2-447d-b209-bfc044b9f5f5#BKMK_ResP_Enrich" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;To extract and promote properties in the pre-transform Enrich stage&lt;/link&gt;</ph>.</source>
            <target state="new">The tutorial demonstrates how to create this property in the subsequent steps, as described at <ph id="1">&lt;link xlink:href="9e498d62-bcd2-447d-b209-bfc044b9f5f5#BKMK_ResP_Enrich" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;To extract and promote properties in the pre-transform Enrich stage&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>Use the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> to pass the value from the <bpt id="3">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="3">&lt;/embeddedLabel&gt;</ept> property to the <bpt id="4">&lt;embeddedLabel&gt;</bpt>MsgStatusCd<ept id="4">&lt;/embeddedLabel&gt;</ept> node in the response schema.</source>
            <target state="new">Use the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> to pass the value from the <bpt id="3">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="3">&lt;/embeddedLabel&gt;</ept> property to the <bpt id="4">&lt;embeddedLabel&gt;</bpt>MsgStatusCd<ept id="4">&lt;/embeddedLabel&gt;</ept> node in the response schema.</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>Even though the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="1">&lt;/embeddedLabel&gt;</ept> property is not yet created as part of the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration, one can still go ahead and use the <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph>.</source>
            <target state="new">Even though the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="1">&lt;/embeddedLabel&gt;</ept> property is not yet created as part of the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration, one can still go ahead and use the <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>The only thing to ensure would be that the same property name is used (in this case <bpt id="1">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="1">&lt;/embeddedLabel&gt;</ept>) while configuring the Enrich stage in the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph>.</source>
            <target state="new">The only thing to ensure would be that the same property name is used (in this case <bpt id="1">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="1">&lt;/embeddedLabel&gt;</ept>) while configuring the Enrich stage in the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>Drag and drop a <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> on the map designer surface.</source>
            <target state="new">Drag and drop a <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> on the map designer surface.</target>
          </trans-unit>
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>Double-click the <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph> and in the dialog box, for the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Property<ept id="2">&lt;/embeddedLabel&gt;</ept> name field, enter <bpt id="3">&lt;userInput&gt;</bpt>MsgStatus<ept id="3">&lt;/userInput&gt;</ept>, and then select <bpt id="4">&lt;embeddedLabel&gt;</bpt>OK<ept id="4">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">Double-click the <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph> and in the dialog box, for the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Property<ept id="2">&lt;/embeddedLabel&gt;</ept> name field, enter <bpt id="3">&lt;userInput&gt;</bpt>MsgStatus<ept id="3">&lt;/userInput&gt;</ept>, and then select <bpt id="4">&lt;embeddedLabel&gt;</bpt>OK<ept id="4">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>Connect the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> to the <bpt id="3">&lt;embeddedLabel&gt;</bpt>MsgStatusCd<ept id="3">&lt;/embeddedLabel&gt;</ept> node in the destination schema.</source>
            <target state="new">Connect the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> to the <bpt id="3">&lt;embeddedLabel&gt;</bpt>MsgStatusCd<ept id="3">&lt;/embeddedLabel&gt;</ept> node in the destination schema.</target>
          </trans-unit>
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>The final map resembles the following:</source>
            <target state="new">The final map resembles the following:</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>Save changes to the project.</source>
            <target state="new">Save changes to the project.</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>To map NorthwindSchema.xsd to ACORDRs2.xsd</source>
            <target state="new">To map NorthwindSchema.xsd to ACORDRs2.xsd</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Bridges_Services<ept id="1">&lt;/embeddedLabel&gt;</ept> solution, right-click the project, point to <bpt id="2">&lt;embeddedLabel&gt;</bpt>Add<ept id="2">&lt;/embeddedLabel&gt;</ept>, and select <bpt id="3">&lt;embeddedLabel&gt;</bpt>New Item<ept id="3">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">In the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Bridges_Services<ept id="1">&lt;/embeddedLabel&gt;</ept> solution, right-click the project, point to <bpt id="2">&lt;embeddedLabel&gt;</bpt>Add<ept id="2">&lt;/embeddedLabel&gt;</ept>, and select <bpt id="3">&lt;embeddedLabel&gt;</bpt>New Item<ept id="3">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>From <bpt id="1">&lt;embeddedLabel&gt;</bpt>Add New Item<ept id="1">&lt;/embeddedLabel&gt;</ept>, select <bpt id="2">&lt;embeddedLabel&gt;</bpt>Map<ept id="2">&lt;/embeddedLabel&gt;</ept>, enter <bpt id="3">&lt;userInput&gt;</bpt>Northwind_To_ACORDRs2.trfm<ept id="3">&lt;/userInput&gt;</ept> for the name, and then select <bpt id="4">&lt;embeddedLabel&gt;</bpt>Add<ept id="4">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">From <bpt id="1">&lt;embeddedLabel&gt;</bpt>Add New Item<ept id="1">&lt;/embeddedLabel&gt;</ept>, select <bpt id="2">&lt;embeddedLabel&gt;</bpt>Map<ept id="2">&lt;/embeddedLabel&gt;</ept>, enter <bpt id="3">&lt;userInput&gt;</bpt>Northwind_To_ACORDRs2.trfm<ept id="3">&lt;/userInput&gt;</ept> for the name, and then select <bpt id="4">&lt;embeddedLabel&gt;</bpt>Add<ept id="4">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>For the source schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>NorthwindSchema.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">For the source schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>NorthwindSchema.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>For the destination schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRs2.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">For the destination schema, select <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRs2.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>The elements in the following table are directly mapped to each other, simply by connecting the two nodes, without the use of any <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>.</source>
            <target state="new">The elements in the following table are directly mapped to each other, simply by connecting the two nodes, without the use of any <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>Node in the source schema</source>
            <target state="new">Node in the source schema</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>Node in the destination schema</source>
            <target state="new">Node in the destination schema</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>ACORDStandardVersionCd</source>
            <target state="new">ACORDStandardVersionCd</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>ACORDStandardVersionCd</source>
            <target state="new">ACORDStandardVersionCd</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>RqUID</source>
            <target state="new">RqUID</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>RqUID</source>
            <target state="new">RqUID</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>TransactionRequestDt</source>
            <target state="new">TransactionRequestDt</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>TransactionRequestDt</source>
            <target state="new">TransactionRequestDt</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>Repeat step 4 in the procedure <ph id="1">&lt;link xlink:href="1442290a-8fca-42c6-97c4-7e3bb4e55344#BKMK_TransformRes1" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;To map NorthwindSchema.xsd to ACORDRs1.xsd&lt;/link&gt;</ph> to map a value to the <bpt id="2">&lt;embeddedLabel&gt;</bpt>MsgStatusCd<ept id="2">&lt;/embeddedLabel&gt;</ept> node in the destination schema.</source>
            <target state="new">Repeat step 4 in the procedure <ph id="1">&lt;link xlink:href="1442290a-8fca-42c6-97c4-7e3bb4e55344#BKMK_TransformRes1" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;To map NorthwindSchema.xsd to ACORDRs1.xsd&lt;/link&gt;</ph> to map a value to the <bpt id="2">&lt;embeddedLabel&gt;</bpt>MsgStatusCd<ept id="2">&lt;/embeddedLabel&gt;</ept> node in the destination schema.</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source>Just like <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRq2.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>, <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRs2.xsd<ept id="2">&lt;/embeddedLabel&gt;</ept> has a node called <bpt id="3">&lt;embeddedLabel&gt;</bpt>Comments<ept id="3">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">Just like <bpt id="1">&lt;embeddedLabel&gt;</bpt>ACORDRq2.xsd<ept id="1">&lt;/embeddedLabel&gt;</ept>, <bpt id="2">&lt;embeddedLabel&gt;</bpt>ACORDRs2.xsd<ept id="2">&lt;/embeddedLabel&gt;</ept> has a node called <bpt id="3">&lt;embeddedLabel&gt;</bpt>Comments<ept id="3">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>How to get the value for this node?</source>
            <target state="new">How to get the value for this node?</target>
          </trans-unit>
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>Unlike <bpt id="1">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="1">&lt;/embeddedLabel&gt;</ept>, it’s not a value that is present in the response message header.</source>
            <target state="new">Unlike <bpt id="1">&lt;embeddedLabel&gt;</bpt>MsgStatus<ept id="1">&lt;/embeddedLabel&gt;</ept>, it’s not a value that is present in the response message header.</target>
          </trans-unit>
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>But it’s a value that is present in the request message and can be extracted from the request message itself.</source>
            <target state="new">But it’s a value that is present in the request message and can be extracted from the request message itself.</target>
          </trans-unit>
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>To set the value for <bpt id="1">&lt;embeddedLabel&gt;</bpt>Comments<ept id="1">&lt;/embeddedLabel&gt;</ept> property in the response message, do the following:</source>
            <target state="new">To set the value for <bpt id="1">&lt;embeddedLabel&gt;</bpt>Comments<ept id="1">&lt;/embeddedLabel&gt;</ept> property in the response message, do the following:</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>Create a property, for example <bpt id="1">&lt;embeddedLabel&gt;</bpt>Comments<ept id="1">&lt;/embeddedLabel&gt;</ept>, as part of the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration (<bpt id="3">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="3">&lt;/embeddedLabel&gt;</ept> stage) to extract the value from <bpt id="4">&lt;embeddedLabel&gt;</bpt>Comments<ept id="4">&lt;/embeddedLabel&gt;</ept> element in the request message.</source>
            <target state="new">Create a property, for example <bpt id="1">&lt;embeddedLabel&gt;</bpt>Comments<ept id="1">&lt;/embeddedLabel&gt;</ept>, as part of the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration (<bpt id="3">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="3">&lt;/embeddedLabel&gt;</ept> stage) to extract the value from <bpt id="4">&lt;embeddedLabel&gt;</bpt>Comments<ept id="4">&lt;/embeddedLabel&gt;</ept> element in the request message.</target>
          </trans-unit>
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source>The tutorial demonstrates how to create this property in the subsequent steps, as described at <ph id="1">&lt;link xlink:href="a4bf9e02-cac7-4bc8-b842-735294a240b8#BKMK_ReqP_Enrich" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;To extract and promote properties in the pre-transform Enrich stage&lt;/link&gt;</ph>.</source>
            <target state="new">The tutorial demonstrates how to create this property in the subsequent steps, as described at <ph id="1">&lt;link xlink:href="a4bf9e02-cac7-4bc8-b842-735294a240b8#BKMK_ReqP_Enrich" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;To extract and promote properties in the pre-transform Enrich stage&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>Use the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> to pass the value from the <bpt id="3">&lt;embeddedLabel&gt;</bpt>Comments<ept id="3">&lt;/embeddedLabel&gt;</ept> property to the <bpt id="4">&lt;embeddedLabel&gt;</bpt>Comments<ept id="4">&lt;/embeddedLabel&gt;</ept> node in the response schema.</source>
            <target state="new">Use the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> to pass the value from the <bpt id="3">&lt;embeddedLabel&gt;</bpt>Comments<ept id="3">&lt;/embeddedLabel&gt;</ept> property to the <bpt id="4">&lt;embeddedLabel&gt;</bpt>Comments<ept id="4">&lt;/embeddedLabel&gt;</ept> node in the response schema.</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source>Even though the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Comments<ept id="1">&lt;/embeddedLabel&gt;</ept> property is not yet created as part of the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration, one can still go ahead and use the <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph>.</source>
            <target state="new">Even though the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Comments<ept id="1">&lt;/embeddedLabel&gt;</ept> property is not yet created as part of the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration, one can still go ahead and use the <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>The only thing to ensure would be that the same property name is used (in this case <bpt id="1">&lt;embeddedLabel&gt;</bpt>Comments<ept id="1">&lt;/embeddedLabel&gt;</ept>) while configuring the Enrich stage in the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph>.</source>
            <target state="new">The only thing to ensure would be that the same property name is used (in this case <bpt id="1">&lt;embeddedLabel&gt;</bpt>Comments<ept id="1">&lt;/embeddedLabel&gt;</ept>) while configuring the Enrich stage in the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source>Drag and drop a <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> on the <ph id="3">&lt;token&gt;transform&lt;/token&gt;</ph> design surface.</source>
            <target state="new">Drag and drop a <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> on the <ph id="3">&lt;token&gt;transform&lt;/token&gt;</ph> design surface.</target>
          </trans-unit>
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>Double-click the <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph> and in the dialog box, for the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Property<ept id="2">&lt;/embeddedLabel&gt;</ept> name field, enter <bpt id="3">&lt;userInput&gt;</bpt>Comments<ept id="3">&lt;/userInput&gt;</ept>, and then select <bpt id="4">&lt;embeddedLabel&gt;</bpt>OK<ept id="4">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">Double-click the <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph> and in the dialog box, for the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Property<ept id="2">&lt;/embeddedLabel&gt;</ept> name field, enter <bpt id="3">&lt;userInput&gt;</bpt>Comments<ept id="3">&lt;/userInput&gt;</ept>, and then select <bpt id="4">&lt;embeddedLabel&gt;</bpt>OK<ept id="4">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source>Connect the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> to the <bpt id="3">&lt;embeddedLabel&gt;</bpt>Comments<ept id="3">&lt;/embeddedLabel&gt;</ept> node in the destination schema.</source>
            <target state="new">Connect the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Get Context Property<ept id="1">&lt;/embeddedLabel&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> to the <bpt id="3">&lt;embeddedLabel&gt;</bpt>Comments<ept id="3">&lt;/embeddedLabel&gt;</ept> node in the destination schema.</target>
          </trans-unit>
          <trans-unit id="130" translate="yes" xml:space="preserve">
            <source>The final <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> resembles the following:</source>
            <target state="new">The final <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> resembles the following:</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="131" translate="yes" xml:space="preserve">
            <source>Save changes to the project.</source>
            <target state="new">Save changes to the project.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>