<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="es-ES" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANi1EKgzAMQK/SAzSQ1lTb/Q/2v10giQkITkEdePwV3t97z30woaxgRgSUHEGwCigmHlvzxNximFmyzVqBVHqFRaAVLKA2TTOhiWqOIctYUhsUODMDcWGoUh00eStWmw+oMaQY7ITnO4Z7Xdztvh7Hvl9973T5+n15+xy8nStfy779AaXRCEWiAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>How to: Host a WCF Service that Uses the Service Bus Service</source>
            <target state="new">How to: Host a WCF Service that Uses the Service Bus Service</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>How to: Host a WCF Service that Uses the Service Bus Service</source>
            <target state="new">How to: Host a WCF Service that Uses the Service Bus Service</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Hosting the service is the final step in creating a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> application.</source>
            <target state="new">Hosting the service is the final step in creating a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> application.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Before reaching this point, you will have defined and implemented the service contract, defined and configured the service endpoint, and created the security credentials.</source>
            <target state="new">Before reaching this point, you will have defined and implemented the service contract, defined and configured the service endpoint, and created the security credentials.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> what to do before hosting the application, see <ph id="2">&lt;link xlink:href="5f8947bc-26c6-4b15-a3a4-74bd3a0edb58" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Hosting an AppFabric Service Bus Application&lt;/link&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> what to do before hosting the application, see <ph id="2">&lt;link xlink:href="5f8947bc-26c6-4b15-a3a4-74bd3a0edb58" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Hosting an AppFabric Service Bus Application&lt;/link&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The next step is to put all the parts together and get them running.</source>
            <target state="new">The next step is to put all the parts together and get them running.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>This process is accomplished through the service host, which takes the URL of your project, together with the contract, and creates a connection to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">This process is accomplished through the service host, which takes the URL of your project, together with the contract, and creates a connection to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>The first procedure describes how to create a service that uses <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, with the configuration settings defined programmatically.</source>
            <target state="new">The first procedure describes how to create a service that uses <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, with the configuration settings defined programmatically.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>The second procedure shows how to create a service when most of the configuration is specified in the App.config file.</source>
            <target state="new">The second procedure shows how to create a service when most of the configuration is specified in the App.config file.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>This procedure follows the <bpt id="1">&lt;embeddedLabel&gt;</bpt>NetOneWay<ept id="1">&lt;/embeddedLabel&gt;</ept> sample in the <ph id="2">&lt;token&gt;azure_1&lt;/token&gt;</ph> SDK.</source>
            <target state="new">This procedure follows the <bpt id="1">&lt;embeddedLabel&gt;</bpt>NetOneWay<ept id="1">&lt;/embeddedLabel&gt;</ept> sample in the <ph id="2">&lt;token&gt;azure_1&lt;/token&gt;</ph> SDK.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>For a hybrid approach that uses both programmatic configuration and also an App.config file, see steps 1 through 4 of the <ph id="1">&lt;link xlink:href="24332c3c-277f-46f2-949a-d4381b8bfb0b" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;AppFabric Service Bus Tutorial&lt;/link&gt;</ph>.</source>
            <target state="new">For a hybrid approach that uses both programmatic configuration and also an App.config file, see steps 1 through 4 of the <ph id="1">&lt;link xlink:href="24332c3c-277f-46f2-949a-d4381b8bfb0b" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;AppFabric Service Bus Tutorial&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>For a complete discussion of hosting an application, see <ph id="1">&lt;link xlink:href="192be927-6be2-4fda-98f0-e513c4881acc" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Hosting Services&lt;/link&gt;</ph> in the <ph id="2">&lt;token&gt;indigo1&lt;/token&gt;</ph> documentation.</source>
            <target state="new">For a complete discussion of hosting an application, see <ph id="1">&lt;link xlink:href="192be927-6be2-4fda-98f0-e513c4881acc" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Hosting Services&lt;/link&gt;</ph> in the <ph id="2">&lt;token&gt;indigo1&lt;/token&gt;</ph> documentation.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>To host a Service Bus service programmatically</source>
            <target state="new">To host a Service Bus service programmatically</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Create an address for your service.</source>
            <target state="new">Create an address for your service.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The address for your <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> project is used in both service and client applications.</source>
            <target state="new">The address for your <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> project is used in both service and client applications.</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>For a service, the URI is used to determine where <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> exposes the service.</source>
            <target state="new">For a service, the URI is used to determine where <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> exposes the service.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>For a client, the URI determines where the client looks for the service:</source>
            <target state="new">For a client, the URI determines where the client looks for the service:</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Create a new instance of <ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.ServiceHost&lt;/codeEntityReference&gt;</ph>.</source>
            <target state="new">Create a new instance of <ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.ServiceHost&lt;/codeEntityReference&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>In this example, the service host takes the supplied address, in addition to the type that the service contract implements.</source>
            <target state="new">In this example, the service host takes the supplied address, in addition to the type that the service contract implements.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>In this example, the class that implements the service contract is named <ph id="1">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph>.</source>
            <target state="new">In this example, the class that implements the service contract is named <ph id="1">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Create a description of the contract with a call to <ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.Description.ContractDescription&lt;/codeEntityReference&gt;</ph>.</source>
            <target state="new">Create a description of the contract with a call to <ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.Description.ContractDescription&lt;/codeEntityReference&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.Description.ContractDescription&lt;/codeEntityReference&gt;</ph> links the contract with the specific implementation you want to use.</source>
            <target state="new"><ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.Description.ContractDescription&lt;/codeEntityReference&gt;</ph> links the contract with the specific implementation you want to use.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>In this example, the contract is defined in <ph id="1">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph>, and the implementation of the contract is <ph id="2">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph>.</source>
            <target state="new">In this example, the contract is defined in <ph id="1">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph>, and the implementation of the contract is <ph id="2">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Define the address and binding for the endpoint:</source>
            <target state="new">Define the address and binding for the endpoint:</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Add any additional behaviors to the endpoint, such as security or publishing behaviors:</source>
            <target state="new">Add any additional behaviors to the endpoint, such as security or publishing behaviors:</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>In this code sample, <ph id="1">&lt;codeInline&gt;sharedAccessSignatureServiceBusCredential&lt;/codeInline&gt;</ph> had previously been created to store the security credentials.</source>
            <target state="new">In this code sample, <ph id="1">&lt;codeInline&gt;sharedAccessSignatureServiceBusCredential&lt;/codeInline&gt;</ph> had previously been created to store the security credentials.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Add the service endpoint to the service host instance.</source>
            <target state="new">Add the service endpoint to the service host instance.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>This step indicates which endpoint you want to instantiate.</source>
            <target state="new">This step indicates which endpoint you want to instantiate.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Open the service by using a call to <ph id="1">&lt;codeInline&gt;ServiceHost.Open&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Open the service by using a call to <ph id="1">&lt;codeInline&gt;ServiceHost.Open&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>If successful, the service will be available for a client application to contact and communicate with through <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> without additional action required.</source>
            <target state="new">If successful, the service will be available for a client application to contact and communicate with through <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> without additional action required.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>However, you may want to perform additional tasks, such as notifying the user that the host has succeeded.</source>
            <target state="new">However, you may want to perform additional tasks, such as notifying the user that the host has succeeded.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>When you are finished, close the host with <ph id="1">&lt;codeInline&gt;ServiceHost.Close&lt;/codeInline&gt;</ph>.</source>
            <target state="new">When you are finished, close the host with <ph id="1">&lt;codeInline&gt;ServiceHost.Close&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>To host a Service Bus service that uses an App.config file</source>
            <target state="new">To host a Service Bus service that uses an App.config file</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>Create the name of the project to expose on the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>:</source>
            <target state="new">Create the name of the project to expose on the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>:</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Create the URI for your service:</source>
            <target state="new">Create the URI for your service:</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Create a new instance of the <ph id="1">&lt;languageKeyword&gt;ServiceHost&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">Create a new instance of the <ph id="1">&lt;languageKeyword&gt;ServiceHost&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Here, the service host takes the supplied address, and also the type that the service contract implements.</source>
            <target state="new">Here, the service host takes the supplied address, and also the type that the service contract implements.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>In this example, the class that implements the service contract is named <ph id="1">&lt;codeInline&gt;LogService&lt;/codeInline&gt;</ph>.</source>
            <target state="new">In this example, the class that implements the service contract is named <ph id="1">&lt;codeInline&gt;LogService&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>If successful, the service will be available for a client application to contact and communicate with through the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> without additional action required.</source>
            <target state="new">If successful, the service will be available for a client application to contact and communicate with through the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> without additional action required.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>When you are finished, close the host with <ph id="1">&lt;codeInline&gt;ServiceHost.Close&lt;/codeInline&gt;</ph>.</source>
            <target state="new">When you are finished, close the host with <ph id="1">&lt;codeInline&gt;ServiceHost.Close&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>In your App.config file, add the credential and binding information for your project.</source>
            <target state="new">In your App.config file, add the credential and binding information for your project.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>An example App.config file that contains this information is located in the code sample at the end of this topic.</source>
            <target state="new">An example App.config file that contains this information is located in the code sample at the end of this topic.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>The following example shows how to programmatically define and create a service application.</source>
            <target state="new">The following example shows how to programmatically define and create a service application.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Hosting a WCF Service in IIS</source>
            <target state="new">Hosting a WCF Service in IIS</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>