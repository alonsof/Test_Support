<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="es-ES" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANzEEKg0AMAMCv5AEJJDHqbu+F3tsP7K4JCFZBLfj8epnjRHReTRu5m5FJMFVOlRpLGXIOKSUjVG3sFkrMo5BpNUodO1V1T6xqmhPC0EdLfcuko9zX1AlVH+OmDTG6lCkFgiD4Qc83wrXMEX6dj33bTgRFMITX71vWz17WYynnvK1/efkB06EAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>External Tables</source>
            <target state="new">External Tables</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>This topic and its sub-topics provides the JSON format that is supported by the older versions of Azure PowerShell.</source>
            <target state="new">This topic and its sub-topics provides the JSON format that is supported by the older versions of Azure PowerShell.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>If you are using the July 2015 Release version of Azure PowerShell or later, see <ph id="1">&lt;link xlink:href="2308b1ce-9735-42c9-97f9-c19825d01f85" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Policy Element&lt;/link&gt;</ph> for the latest JSON format.</source>
            <target state="new">If you are using the July 2015 Release version of Azure PowerShell or later, see <ph id="1">&lt;link xlink:href="2308b1ce-9735-42c9-97f9-c19825d01f85" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Policy Element&lt;/link&gt;</ph> for the latest JSON format.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>You can convert the JSON from old format to new format by using the tool: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>JSON Upgrade Tool<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?linkid=618507&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept></source>
            <target state="new">You can convert the JSON from old format to new format by using the tool: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>JSON Upgrade Tool<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?linkid=618507&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept></target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>External tables refer to tables that are not explicitly produced by the pipelines running in the Azure Data Factory.</source>
            <target state="new">External tables refer to tables that are not explicitly produced by the pipelines running in the Azure Data Factory.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>For example, the input data for a Copy Activity might be produced outside of the Azure Data Factory, and copied to Azure blob storage.</source>
            <target state="new">For example, the input data for a Copy Activity might be produced outside of the Azure Data Factory, and copied to Azure blob storage.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>When defining external tables, you will need to use the <bpt id="1">&lt;embeddedLabel&gt;</bpt>waitOnExternal<ept id="1">&lt;/embeddedLabel&gt;</ept> property in the table JSON definition.</source>
            <target state="new">When defining external tables, you will need to use the <bpt id="1">&lt;embeddedLabel&gt;</bpt>waitOnExternal<ept id="1">&lt;/embeddedLabel&gt;</ept> property in the table JSON definition.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>This enables the data slices to be marked as <bpt id="1">&lt;embeddedLabel&gt;</bpt>Ready<ept id="1">&lt;/embeddedLabel&gt;</ept> once the data is available in the store.</source>
            <target state="new">This enables the data slices to be marked as <bpt id="1">&lt;embeddedLabel&gt;</bpt>Ready<ept id="1">&lt;/embeddedLabel&gt;</ept> once the data is available in the store.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>All the properties in waitOnExternal are optional.</source>
            <target state="new">All the properties in waitOnExternal are optional.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>If you want to mark a table as external, and use the default values, specify <bpt id="1">&lt;embeddedLabel&gt;</bpt>waitOnExternal: { }<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">If you want to mark a table as external, and use the default values, specify <bpt id="1">&lt;embeddedLabel&gt;</bpt>waitOnExternal: { }<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>For an <bpt id="1">&lt;embeddedLabel&gt;</bpt>on-premises SQL Server database<ept id="1">&lt;/embeddedLabel&gt;</ept>, only the <bpt id="2">&lt;embeddedLabel&gt;</bpt>dataDelay<ept id="2">&lt;/embeddedLabel&gt;</ept> property is applicable.</source>
            <target state="new">For an <bpt id="1">&lt;embeddedLabel&gt;</bpt>on-premises SQL Server database<ept id="1">&lt;/embeddedLabel&gt;</ept>, only the <bpt id="2">&lt;embeddedLabel&gt;</bpt>dataDelay<ept id="2">&lt;/embeddedLabel&gt;</ept> property is applicable.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The following example shows the usage of the waitOnExternal property.</source>
            <target state="new">The following example shows the usage of the waitOnExternal property.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Use <bpt id="1">&lt;embeddedLabel&gt;</bpt>“waitOnExternal”: {}<ept id="1">&lt;/embeddedLabel&gt;</ept> to use default values for all the properties in this tag.</source>
            <target state="new">Use <bpt id="1">&lt;embeddedLabel&gt;</bpt>“waitOnExternal”: {}<ept id="1">&lt;/embeddedLabel&gt;</ept> to use default values for all the properties in this tag.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>The following table lists the properties used in the <bpt id="1">&lt;embeddedLabel&gt;</bpt>waitOnExternal<ept id="1">&lt;/embeddedLabel&gt;</ept> section of the JSON script.</source>
            <target state="new">The following table lists the properties used in the <bpt id="1">&lt;embeddedLabel&gt;</bpt>waitOnExternal<ept id="1">&lt;/embeddedLabel&gt;</ept> section of the JSON script.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Default Value</source>
            <target state="new">Default Value</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>dataDelay</source>
            <target state="new">dataDelay</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Time to delay the check on availability of the external data.</source>
            <target state="new">Time to delay the check on availability of the external data.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>For example if the data is supposed to be available hourly, the check to see the external data is actually available and the corresponding slice is Ready can be delayed by DataDelay.</source>
            <target state="new">For example if the data is supposed to be available hourly, the check to see the external data is actually available and the corresponding slice is Ready can be delayed by DataDelay.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Only applies to the present time; for example, if it is 1:00 PM right now and this value is 10 minutes, the validation will start at 1:10 PM.</source>
            <target state="new">Only applies to the present time; for example, if it is 1:00 PM right now and this value is 10 minutes, the validation will start at 1:10 PM.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>This setting does not affect slices in the past (slices with Slice End Time + dataDelay &lt; Now) will be processed without any delay.</source>
            <target state="new">This setting does not affect slices in the past (slices with Slice End Time + dataDelay &lt; Now) will be processed without any delay.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>0</source>
            <target state="new">0</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>retryInterval</source>
            <target state="new">retryInterval</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>The wait time between a failure and the next retry attempt.</source>
            <target state="new">The wait time between a failure and the next retry attempt.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Applies to present time; if the previous try failed, we wait this long after the last try.</source>
            <target state="new">Applies to present time; if the previous try failed, we wait this long after the last try.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>If it is 1:00pm right now, we will begin the first try.</source>
            <target state="new">If it is 1:00pm right now, we will begin the first try.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>If the duration to complete the first validation check is 1 minute and the operation failed, the next retry will be at 1:00 + 1min (duration) + 1min (retry interval) = 1:02pm.</source>
            <target state="new">If the duration to complete the first validation check is 1 minute and the operation failed, the next retry will be at 1:00 + 1min (duration) + 1min (retry interval) = 1:02pm.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>For slices in the past, there will be no delay.</source>
            <target state="new">For slices in the past, there will be no delay.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>The retry will happen immediately.</source>
            <target state="new">The retry will happen immediately.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>00:01:00 (1 minute)</source>
            <target state="new">00:01:00 (1 minute)</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>retryTimeout</source>
            <target state="new">retryTimeout</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The timeout for each retry attempt.</source>
            <target state="new">The timeout for each retry attempt.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>If this is set to 10 minutes, the validation needs to be completed within 10 minutes.</source>
            <target state="new">If this is set to 10 minutes, the validation needs to be completed within 10 minutes.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>If it takes longer than 10 minutes to perform the validation (e.g. there are 1,000,000 rows in azure storage) the retry will time out.</source>
            <target state="new">If it takes longer than 10 minutes to perform the validation (e.g. there are 1,000,000 rows in azure storage) the retry will time out.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>If all attempts for the validation time out, the slice will be marked as TimedOut.</source>
            <target state="new">If all attempts for the validation time out, the slice will be marked as TimedOut.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>00:10:00 (10 minutes)</source>
            <target state="new">00:10:00 (10 minutes)</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>maximumRetry</source>
            <target state="new">maximumRetry</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Number of times to check for the availability of the external data.</source>
            <target state="new">Number of times to check for the availability of the external data.</target>
          </trans-unit>
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>The allowed maximum value is 10.</source>
            <target state="new">The allowed maximum value is 10.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>3</source>
            <target state="new">3</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>