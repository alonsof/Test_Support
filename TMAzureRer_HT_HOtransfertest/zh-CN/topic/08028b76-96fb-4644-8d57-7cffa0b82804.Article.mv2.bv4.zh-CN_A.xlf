<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-CN" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANzDEKwzAMAMCv+AEWyI5jS127dOrUD0i2RQNpAkkKoa9v5oMzG7qmWKH3lCAFQ1AkhYpBMrMFEfaODYWlRQi5ZkhjaUB1IKiZm3YaG4t6h4SRtGTgbAopXyG1sUCpZoJKkTB5F7z7veH+9O6cJ7N+HrdtXQ/voncXP74fWV6bLPssx7Quf/n9Sb+hAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Pig JSON Example (Data Factory)</source>
            <target state="new">Pig JSON Example (Data Factory)</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>This topic and its sub-topics provides the JSON format that is supported by the older versions of Azure PowerShell.</source>
            <target state="new">This topic and its sub-topics provides the JSON format that is supported by the older versions of Azure PowerShell.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>If you are using the July 2015 Release version of Azure PowerShell or later, see <ph id="1">&lt;link xlink:href="dff0bbe9-5bf7-43b3-97e4-4a552b8f365a" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;HDInsight Pig Activity&lt;/link&gt;</ph> for the latest JSON format.</source>
            <target state="new">If you are using the July 2015 Release version of Azure PowerShell or later, see <ph id="1">&lt;link xlink:href="dff0bbe9-5bf7-43b3-97e4-4a552b8f365a" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;HDInsight Pig Activity&lt;/link&gt;</ph> for the latest JSON format.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>You can convert the JSON from old format to new format by using the tool: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>JSON Upgrade Tool<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?linkid=618507&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept></source>
            <target state="new">You can convert the JSON from old format to new format by using the tool: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>JSON Upgrade Tool<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?linkid=618507&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept></target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>This topic provides information about using the Pig Transformation with the HDInsight Activity.</source>
            <target state="new">This topic provides information about using the Pig Transformation with the HDInsight Activity.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The following JSON snippet shows the syntax for using the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Pig<ept id="1">&lt;/embeddedLabel&gt;</ept> transformation with the <bpt id="2">&lt;embeddedLabel&gt;</bpt>HDInsightActivity<ept id="2">&lt;/embeddedLabel&gt;</ept> in a pipeline JSON file.</source>
            <target state="new">The following JSON snippet shows the syntax for using the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Pig<ept id="1">&lt;/embeddedLabel&gt;</ept> transformation with the <bpt id="2">&lt;embeddedLabel&gt;</bpt>HDInsightActivity<ept id="2">&lt;/embeddedLabel&gt;</ept> in a pipeline JSON file.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Example: Using Pig Queries that are stored in Azure Blob storage</source>
            <target state="new">Example: Using Pig Queries that are stored in Azure Blob storage</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>When using a Pig activity, you can reference Hive scripts that are stored in Azure blob storage.</source>
            <target state="new">When using a Pig activity, you can reference Hive scripts that are stored in Azure blob storage.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>The Azure storage account needs to be associated with the HDInsight cluster, in order for the Pig activity to be able to read the files during execution.</source>
            <target state="new">The Azure storage account needs to be associated with the HDInsight cluster, in order for the Pig activity to be able to read the files during execution.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>The following properties need to be defined when referring to the script file.</source>
            <target state="new">The following properties need to be defined when referring to the script file.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>scriptPath<ept id="1">&lt;/embeddedLabel&gt;</ept> – Path to the Pig script file</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>scriptPath<ept id="1">&lt;/embeddedLabel&gt;</ept> – Path to the Pig script file</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>scriptLinkedService<ept id="1">&lt;/embeddedLabel&gt;</ept> – Azure storage account that contains the script file</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>scriptLinkedService<ept id="1">&lt;/embeddedLabel&gt;</ept> – Azure storage account that contains the script file</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Parameterized Pig query</source>
            <target state="new">Parameterized Pig query</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>The Pig and Hive transformations enable you to specify values for parameters used in the Pig and Hive scripts, by using <bpt id="1">&lt;embeddedLabel&gt;</bpt>extendedProperties<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">The Pig and Hive transformations enable you to specify values for parameters used in the Pig and Hive scripts, by using <bpt id="1">&lt;embeddedLabel&gt;</bpt>extendedProperties<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The extendedProperties section consists of the name of the parameter, and value of the parameter.</source>
            <target state="new">The extendedProperties section consists of the name of the parameter, and value of the parameter.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>See the following example for using parameters for a Pig script using extendedProperties.</source>
            <target state="new">See the following example for using parameters for a Pig script using extendedProperties.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>To use parameterized Pig scripts, do the following:</source>
            <target state="new">To use parameterized Pig scripts, do the following:</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Define the parameters in extendedProperties.</source>
            <target state="new">Define the parameters in extendedProperties.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>In the Pig Script, refer to the parameter using $parameterName.</source>
            <target state="new">In the Pig Script, refer to the parameter using $parameterName.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Use Pig and Hive with Azure Data Factory</source>
            <target state="new">Use Pig and Hive with Azure Data Factory</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>