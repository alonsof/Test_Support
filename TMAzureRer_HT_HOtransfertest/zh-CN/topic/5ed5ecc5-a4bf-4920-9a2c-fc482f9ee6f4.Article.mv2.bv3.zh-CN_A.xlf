<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-CN" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANzMsNwjAMANBVMoAt5eOEmCsXTpxYwEltUam0UglSxfT0DfDMkjaKHVWJkIJ5bL427D5IYbYgwuBCzZIKFZy0RCTPAUVSR05a6VLJzAK4rFPW3jMKNUPi6JHlrK1Tjcaqxei8wP1eeHuAO5bZTI9x3bdtgIvgErj79y3rc5f1s8iYt/UPcg4U36EAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Batch Processing</source>
            <target state="new">Batch Processing</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Azure AD Graph API Batch Processing</source>
            <target state="new">Azure AD Graph API Batch Processing</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>With Azure AD Graph API, you can batch operations on entities to reduce roundtrips to the server.</source>
            <target state="new">With Azure AD Graph API, you can batch operations on entities to reduce roundtrips to the server.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Batching your requests reduces network overhead, and your operations will complete more quickly.</source>
            <target state="new">Batching your requests reduces network overhead, and your operations will complete more quickly.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Graph API Support for OData Batch Requests</source>
            <target state="new">Graph API Support for OData Batch Requests</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The semantics for entity batch processing are defined by the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>OData 3.0 Batch Processing Specification<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://www.odata.org/documentation/odata-version-3-0/batch-processing&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">The semantics for entity batch processing are defined by the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>OData 3.0 Batch Processing Specification<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://www.odata.org/documentation/odata-version-3-0/batch-processing&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The OData specification defines the following concepts for batch requests:</source>
            <target state="new">The OData specification defines the following concepts for batch requests:</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>A <bpt id="1">&lt;newTerm&gt;</bpt>query<ept id="1">&lt;/newTerm&gt;</ept> is a single query or function invocation.</source>
            <target state="new">A <bpt id="1">&lt;newTerm&gt;</bpt>query<ept id="1">&lt;/newTerm&gt;</ept> is a single query or function invocation.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>A <bpt id="1">&lt;newTerm&gt;</bpt>change set<ept id="1">&lt;/newTerm&gt;</ept> is a group of one or more insert, update, or delete operations, action invocations, or service invocations.</source>
            <target state="new">A <bpt id="1">&lt;newTerm&gt;</bpt>change set<ept id="1">&lt;/newTerm&gt;</ept> is a group of one or more insert, update, or delete operations, action invocations, or service invocations.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>A <bpt id="1">&lt;newTerm&gt;</bpt>batch<ept id="1">&lt;/newTerm&gt;</ept> is a container of operations, including one or more change sets and query operations.</source>
            <target state="new">A <bpt id="1">&lt;newTerm&gt;</bpt>batch<ept id="1">&lt;/newTerm&gt;</ept> is a container of operations, including one or more change sets and query operations.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>The Graph API supports a subset of the functionality defined by the OData specification:</source>
            <target state="new">The Graph API supports a subset of the functionality defined by the OData specification:</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>A single batch can contain a maximum of five queries and/or change sets combined.</source>
            <target state="new">A single batch can contain a maximum of five queries and/or change sets combined.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>A change set can contain a maximum of one source object modification and up to 20 add-link and delete-link operations combined.</source>
            <target state="new">A change set can contain a maximum of one source object modification and up to 20 add-link and delete-link operations combined.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>All operations in the change set must be on a single source entity.</source>
            <target state="new">All operations in the change set must be on a single source entity.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Graph API Batch Requests</source>
            <target state="new">Graph API Batch Requests</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>The following sections describe how to construct a batch request, how to interpret the batch response, and show samples of each.</source>
            <target state="new">The following sections describe how to construct a batch request, how to interpret the batch response, and show samples of each.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Batch Request Syntax</source>
            <target state="new">Batch Request Syntax</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>To perform a batch request, specify the <ph id="1">&lt;codeInline&gt;$batch &lt;/codeInline&gt;</ph>option on the request URI.</source>
            <target state="new">To perform a batch request, specify the <ph id="1">&lt;codeInline&gt;$batch &lt;/codeInline&gt;</ph>option on the request URI.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>A batch request is sent to the server with a single POST directive.</source>
            <target state="new">A batch request is sent to the server with a single POST directive.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>The payload is a multi-part MIME message containing the batch and its constituent queries and change sets.</source>
            <target state="new">The payload is a multi-part MIME message containing the batch and its constituent queries and change sets.</target>
          </trans-unit>
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>The payload includes two types of MIME boundaries:</source>
            <target state="new">The payload includes two types of MIME boundaries:</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>A batch boundary separates each query and/or change set in the batch.</source>
            <target state="new">A batch boundary separates each query and/or change set in the batch.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>A change set boundary separates individual operations within a change set.</source>
            <target state="new">A change set boundary separates individual operations within a change set.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>An individual request within a change set is identical to a request made when that operation is called by itself.</source>
            <target state="new">An individual request within a change set is identical to a request made when that operation is called by itself.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>To specify the payload format (JSON or ATOM) for each operation in the change set, include the appropriate <ph id="1">&lt;parameterReference&gt;Content-Type&lt;/parameterReference&gt;</ph> and, if needed, <ph id="2">&lt;parameterReference&gt;Accept&lt;/parameterReference&gt;</ph> headers.</source>
            <target state="new">To specify the payload format (JSON or ATOM) for each operation in the change set, include the appropriate <ph id="1">&lt;parameterReference&gt;Content-Type&lt;/parameterReference&gt;</ph> and, if needed, <ph id="2">&lt;parameterReference&gt;Accept&lt;/parameterReference&gt;</ph> headers.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>To suppress the response content echo when creating an entity, specify the <ph id="1">&lt;parameterReference&gt;Prefer&lt;/parameterReference&gt;</ph> header with the <ph id="2">&lt;codeInline&gt;return-no-content&lt;/codeInline&gt;</ph> value for each insert operation in a change set.</source>
            <target state="new">To suppress the response content echo when creating an entity, specify the <ph id="1">&lt;parameterReference&gt;Prefer&lt;/parameterReference&gt;</ph> header with the <ph id="2">&lt;codeInline&gt;return-no-content&lt;/codeInline&gt;</ph> value for each insert operation in a change set.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Sample Request</source>
            <target state="new">Sample Request</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>The following example shows a batch request that contains five items: </source>
            <target state="new">The following example shows a batch request that contains five items: </target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>A change set that creates a user, testuser@contoso.onmicrosoft.com (PATCH).</source>
            <target state="new">A change set that creates a user, testuser@contoso.onmicrosoft.com (PATCH).</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>This operation includes the <ph id="1">&lt;codeInline&gt;Prefer: response-no-content&lt;/codeInline&gt;</ph> header to suppress the newly created user being returned.</source>
            <target state="new">This operation includes the <ph id="1">&lt;codeInline&gt;Prefer: response-no-content&lt;/codeInline&gt;</ph> header to suppress the newly created user being returned.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>A change set that updates the Department and Job Title properties of the new user (PATCH), and sets its manager navigation property (PUT).</source>
            <target state="new">A change set that updates the Department and Job Title properties of the new user (PATCH), and sets its manager navigation property (PUT).</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>A query for the manager of the new user (GET).</source>
            <target state="new">A query for the manager of the new user (GET).</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>A change set that deletes the new user (DELETE).</source>
            <target state="new">A change set that deletes the new user (DELETE).</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>A query for the user (GET).</source>
            <target state="new">A query for the user (GET).</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>This operation will fail because the user was deleted in the previous step.</source>
            <target state="new">This operation will fail because the user was deleted in the previous step.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Batch Response Syntax</source>
            <target state="new">Batch Response Syntax</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>The response returns an overall status code for the batch request, and individual status codes and result fragments for each item in the batch.</source>
            <target state="new">The response returns an overall status code for the batch request, and individual status codes and result fragments for each item in the batch.</target>
          </trans-unit>
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>The response is a multi-part MIME message that includes batch boundaries and change set boundaries.</source>
            <target state="new">The response is a multi-part MIME message that includes batch boundaries and change set boundaries.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Assuming that the batch request has been properly authenticated and has been successfully received by the Graph API, the batch request returns status code <ph id="1">&lt;languageKeyword&gt;202 Accepted&lt;/languageKeyword&gt;</ph>, even if one of the operations in the batch fails.</source>
            <target state="new">Assuming that the batch request has been properly authenticated and has been successfully received by the Graph API, the batch request returns status code <ph id="1">&lt;languageKeyword&gt;202 Accepted&lt;/languageKeyword&gt;</ph>, even if one of the operations in the batch fails.</target>
          </trans-unit>
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>If the batch request itself fails, it fails before any operation in the batch is executed.</source>
            <target state="new">If the batch request itself fails, it fails before any operation in the batch is executed.</target>
          </trans-unit>
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>For example, the batch request may fail due to an authentication error, in which case the status code will indicate that failure.</source>
            <target state="new">For example, the batch request may fail due to an authentication error, in which case the status code will indicate that failure.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>The response fragment for a query item contains a single status code that indicates either the success or failure of the operation as well as any response body appropriate.</source>
            <target state="new">The response fragment for a query item contains a single status code that indicates either the success or failure of the operation as well as any response body appropriate.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>The operations in a change set are processed atomically; that is, either all operations in the change set succeed, or the entire change set fails.</source>
            <target state="new">The operations in a change set are processed atomically; that is, either all operations in the change set succeed, or the entire change set fails.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>The Graph API continues processing operations in the change set until one fails.</source>
            <target state="new">The Graph API continues processing operations in the change set until one fails.</target>
          </trans-unit>
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>If an operation fails, all preceding operations in the change set are rolled back.</source>
            <target state="new">If an operation fails, all preceding operations in the change set are rolled back.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>If all operations in a change set are successfully processed, the status code (and response body) for each operation within the change set appears within the change set response.</source>
            <target state="new">If all operations in a change set are successfully processed, the status code (and response body) for each operation within the change set appears within the change set response.</target>
          </trans-unit>
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>If an operation in a change set fails, then only a single status code is returned for the change set.</source>
            <target state="new">If an operation in a change set fails, then only a single status code is returned for the change set.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>This will be the status code (and response body) returned by the failed operation; for example, <ph id="1">&lt;languageKeyword&gt;400 Bad Request&lt;/languageKeyword&gt;</ph> or <ph id="2">&lt;languageKeyword&gt;404 Not Found&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">This will be the status code (and response body) returned by the failed operation; for example, <ph id="1">&lt;languageKeyword&gt;400 Bad Request&lt;/languageKeyword&gt;</ph> or <ph id="2">&lt;languageKeyword&gt;404 Not Found&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>Sample Response</source>
            <target state="new">Sample Response</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>The following example shows the response for the batch operation sent in the sample request shown above.</source>
            <target state="new">The following example shows the response for the batch operation sent in the sample request shown above.</target>
          </trans-unit>
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>The status for the batch request itself is set to <ph id="1">&lt;languageKeyword&gt;202 Accepted&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">The status for the batch request itself is set to <ph id="1">&lt;languageKeyword&gt;202 Accepted&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>This indicates that there no problems with the batch request itself.</source>
            <target state="new">This indicates that there no problems with the batch request itself.</target>
          </trans-unit>
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>The response to each item in the batch is delimited with the <ph id="1">&lt;parameterReference&gt;batchresponse&lt;/parameterReference&gt;</ph> boundary identifier and each response to an operation within a change set is delimited with a <ph id="2">&lt;parameterReference&gt;changesetresponse&lt;/parameterReference&gt;</ph> boundary identifier.</source>
            <target state="new">The response to each item in the batch is delimited with the <ph id="1">&lt;parameterReference&gt;batchresponse&lt;/parameterReference&gt;</ph> boundary identifier and each response to an operation within a change set is delimited with a <ph id="2">&lt;parameterReference&gt;changesetresponse&lt;/parameterReference&gt;</ph> boundary identifier.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>The following lists the response fragments for each batch item:</source>
            <target state="new">The following lists the response fragments for each batch item:</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>The status for the POST request to create the new user is set to <ph id="1">&lt;languageKeyword&gt;204 No Content&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">The status for the POST request to create the new user is set to <ph id="1">&lt;languageKeyword&gt;204 No Content&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>This is because the <ph id="1">&lt;parameterReference&gt;Prefer&lt;/parameterReference&gt;</ph> header was set to <ph id="2">&lt;codeInline&gt;return-no-content&lt;/codeInline&gt;</ph> in the request.</source>
            <target state="new">This is because the <ph id="1">&lt;parameterReference&gt;Prefer&lt;/parameterReference&gt;</ph> header was set to <ph id="2">&lt;codeInline&gt;return-no-content&lt;/codeInline&gt;</ph> in the request.</target>
          </trans-unit>
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>It indicates that the user was successfully created.</source>
            <target state="new">It indicates that the user was successfully created.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>The response for the second batch item contains two <ph id="1">&lt;languageKeyword&gt;204 No Content&lt;/languageKeyword&gt;</ph> responses, one for the user object update (PATCH) and one for setting the manager link (PUT) in the change set.</source>
            <target state="new">The response for the second batch item contains two <ph id="1">&lt;languageKeyword&gt;204 No Content&lt;/languageKeyword&gt;</ph> responses, one for the user object update (PATCH) and one for setting the manager link (PUT) in the change set.</target>
          </trans-unit>
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>This indicates that both operations were successful.</source>
            <target state="new">This indicates that both operations were successful.</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>The response for the request to read the user’s manager, returns the link to the manager and a status of <ph id="1">&lt;languageKeyword&gt;200 OK&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">The response for the request to read the user’s manager, returns the link to the manager and a status of <ph id="1">&lt;languageKeyword&gt;200 OK&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>The status for the attempt to delete the user, is <ph id="1">&lt;languageKeyword&gt;204 No Content&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">The status for the attempt to delete the user, is <ph id="1">&lt;languageKeyword&gt;204 No Content&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>This indicates that the operation was successful</source>
            <target state="new">This indicates that the operation was successful</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>The status for the attempt to read the deleted user, is <ph id="1">&lt;languageKeyword&gt;404 Not Found&lt;/languageKeyword&gt;</ph> and the response contains a code and message that indicates that the user (resource) was not found.</source>
            <target state="new">The status for the attempt to read the deleted user, is <ph id="1">&lt;languageKeyword&gt;404 Not Found&lt;/languageKeyword&gt;</ph> and the response contains a code and message that indicates that the user (resource) was not found.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Sample Error Response</source>
            <target state="new">Sample Error Response</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>As discussed above, the Graph API returns an error code of <ph id="1">&lt;languageKeyword&gt;202 Accepted&lt;/languageKeyword&gt;</ph> for the entire batch if it can accept the batch; that is, if the batch request is well-formed and there are no errors, such as an authentication error.</source>
            <target state="new">As discussed above, the Graph API returns an error code of <ph id="1">&lt;languageKeyword&gt;202 Accepted&lt;/languageKeyword&gt;</ph> for the entire batch if it can accept the batch; that is, if the batch request is well-formed and there are no errors, such as an authentication error.</target>
          </trans-unit>
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>Otherwise, the Graph API returns the appropriate error and does not process the batch.</source>
            <target state="new">Otherwise, the Graph API returns the appropriate error and does not process the batch.</target>
          </trans-unit>
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>If an individual item within the batch fails then the response fragment for that item will contain a status code and response body that indicates that error.</source>
            <target state="new">If an individual item within the batch fails then the response fragment for that item will contain a status code and response body that indicates that error.</target>
          </trans-unit>
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>When an operation inside a change set fails, a single response fragment will be returned for the entire change set and that fragment will contain the status code and response body associated with the failed operation.</source>
            <target state="new">When an operation inside a change set fails, a single response fragment will be returned for the entire change set and that fragment will contain the status code and response body associated with the failed operation.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>The following example shows a response from batch request that contains a change set in which one of the operations failed.</source>
            <target state="new">The following example shows a response from batch request that contains a change set in which one of the operations failed.</target>
          </trans-unit>
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>Note that the batch response returns status code <ph id="1">&lt;languageKeyword&gt;202 Accepted&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">Note that the batch response returns status code <ph id="1">&lt;languageKeyword&gt;202 Accepted&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>The status code returned for the change set indicates that an operation failed with a status of <ph id="1">&lt;languageKeyword&gt;404 Not Found&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">The status code returned for the change set indicates that an operation failed with a status of <ph id="1">&lt;languageKeyword&gt;404 Not Found&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>Additional error information is included in the response body for the failed operation.</source>
            <target state="new">Additional error information is included in the response body for the failed operation.</target>
          </trans-unit>
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;languageKeyword&gt;code&lt;/languageKeyword&gt;</ph> element specifies the Graph API error code and the <ph id="2">&lt;languageKeyword&gt;message&lt;/languageKeyword&gt;</ph> element contains the error message string.</source>
            <target state="new">The <ph id="1">&lt;languageKeyword&gt;code&lt;/languageKeyword&gt;</ph> element specifies the Graph API error code and the <ph id="2">&lt;languageKeyword&gt;message&lt;/languageKeyword&gt;</ph> element contains the error message string.</target>
          </trans-unit>
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>In this example, the response body has been indented for readability.</source>
            <target state="new">In this example, the response body has been indented for readability.</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>For reference, the following example shows the batch that generated the response above.</source>
            <target state="new">For reference, the following example shows the batch that generated the response above.</target>
          </trans-unit>
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>It contains a single change set that adds three users to a group.</source>
            <target state="new">It contains a single change set that adds three users to a group.</target>
          </trans-unit>
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>The Object IDs for the last two users are fictitious: eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee and ffffffff-ffff-ffff-ffff-ffffffffffff.</source>
            <target state="new">The Object IDs for the last two users are fictitious: eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee and ffffffff-ffff-ffff-ffff-ffffffffffff.</target>
          </trans-unit>
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>The batch URL and associated request headers are omitted for brevity.</source>
            <target state="new">The batch URL and associated request headers are omitted for brevity.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>OData 3.0 Batch Processing Specification</source>
            <target state="new">OData 3.0 Batch Processing Specification</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>OData Specification</source>
            <target state="new">OData Specification</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>