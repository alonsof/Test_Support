<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-CN" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANyjEKwzAMAMCv+AESWI5sy127dOrUD8ixRQNpAkkKoa9v4MYzG3rlMGLvzMhkHquXiqMnTaUYqRZwSVobpAUc1MK1WsESfUUvuZMxpZgYnGezqEWwJxqRUxRUbRmbUpSaS8xdwBG43xvvT3DnPJn187ht63qAC5cE7vH96PLadNlnPaZ1+QPfuvOkogAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Step 4: Host the REST-based WCF Service</source>
            <target state="new">Step 4: Host the REST-based WCF Service</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Step 4: Host the REST-based WCF Service to use the Service Bus</source>
            <target state="new">Step 4: Host the REST-based WCF Service to use the Service Bus</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>This tutorial is moving to a new location, and this version will soon be retired.</source>
            <target state="new">This tutorial is moving to a new location, and this version will soon be retired.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>You can view the most recent version here: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>http://azure.microsoft.com/en-us/documentation/articles/service-bus-relay-rest-tutorial/<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/en-us/documentation/articles/service-bus-relay-rest-tutorial/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">You can view the most recent version here: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>http://azure.microsoft.com/en-us/documentation/articles/service-bus-relay-rest-tutorial/<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/en-us/documentation/articles/service-bus-relay-rest-tutorial/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>This is the fourth of four tasks required to create a basic REST-based <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> service.</source>
            <target state="new">This is the fourth of four tasks required to create a basic REST-based <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> service.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>For an overview of all four tasks, see <ph id="1">&lt;link xlink:href="286326f9-883b-4191-a7df-f107f3cbc26a" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;REST Tutorial for AppFabric Service Bus&lt;/link&gt;</ph>.</source>
            <target state="new">For an overview of all four tasks, see <ph id="1">&lt;link xlink:href="286326f9-883b-4191-a7df-f107f3cbc26a" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;REST Tutorial for AppFabric Service Bus&lt;/link&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>This topic describes how to run a web service using a console application on <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">This topic describes how to run a web service using a console application on <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>A complete listing of the code written in this task is provided in the example following the procedure.</source>
            <target state="new">A complete listing of the code written in this task is provided in the example following the procedure.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Estimated time to completion: 10 minutes</source>
            <target state="new">Estimated time to completion: 10 minutes</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>To create a base address for the service</source>
            <target state="new">To create a base address for the service</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>In the <ph id="1">&lt;codeInline&gt;Main()&lt;/codeInline&gt;</ph> function declaration, create a variable to store the <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph> of your <ph id="3">&lt;token&gt;sb2&lt;/token&gt;</ph> project.</source>
            <target state="new">In the <ph id="1">&lt;codeInline&gt;Main()&lt;/codeInline&gt;</ph> function declaration, create a variable to store the <ph id="2">&lt;token&gt;servicensd&lt;/token&gt;</ph> of your <ph id="3">&lt;token&gt;sb2&lt;/token&gt;</ph> project.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> uses the name of your namespace to create a unique URI.</source>
            <target state="new"><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> uses the name of your namespace to create a unique URI.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Create a <ph id="1">&lt;codeInline&gt;Uri&lt;/codeInline&gt;</ph> instance for the base address of the service that is based on the namespace.</source>
            <target state="new">Create a <ph id="1">&lt;codeInline&gt;Uri&lt;/codeInline&gt;</ph> instance for the base address of the service that is based on the namespace.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>To create and configure the Web service host</source>
            <target state="new">To create and configure the Web service host</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Create the Web service host, using the URI address created earlier in this section.</source>
            <target state="new">Create the Web service host, using the URI address created earlier in this section.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>The service host is the <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> object that instantiates the host application.</source>
            <target state="new">The service host is the <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> object that instantiates the host application.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>This example passes it the type of host you want to create (an <ph id="1">&lt;codeInline&gt;ImageService&lt;/codeInline&gt;</ph>), and also the address at which you want to expose the host application.</source>
            <target state="new">This example passes it the type of host you want to create (an <ph id="1">&lt;codeInline&gt;ImageService&lt;/codeInline&gt;</ph>), and also the address at which you want to expose the host application.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>To run the Web service host</source>
            <target state="new">To run the Web service host</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Open the service.</source>
            <target state="new">Open the service.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>The service is now running.</source>
            <target state="new">The service is now running.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Display a message indicating that the service is running, and how to stop the service.</source>
            <target state="new">Display a message indicating that the service is running, and how to stop the service.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>When finished, close the service host.</source>
            <target state="new">When finished, close the service host.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>The following example includes the service contract and implementation from previous steps in the tutorial and hosts the service in a console application.</source>
            <target state="new">The following example includes the service contract and implementation from previous steps in the tutorial and hosts the service in a console application.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Compile the following code into an executable named ImageListener.exe:</source>
            <target state="new">Compile the following code into an executable named ImageListener.exe:</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>After building the solution, do the following to run the application:</source>
            <target state="new">After building the solution, do the following to run the application:</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>From a command prompt, run the service (ImageListener\bin\Debug\ImageListener.exe).</source>
            <target state="new">From a command prompt, run the service (ImageListener\bin\Debug\ImageListener.exe).</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Copy and paste the address from the command prompt into a browser to see the image.</source>
            <target state="new">Copy and paste the address from the command prompt into a browser to see the image.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>