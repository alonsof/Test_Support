<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-CN" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAAVjDEKwzAMAL/iB1hgy7Jjde3SqVM/IBmLBtIE0hRCX193ueWOM0tdCRv0TgQULYCGqtBClMJsUYS9KzVmzIbAUhOQVQPG3oB5qlMRTXnK3tUgiiH0EagC9YigrZUBxEiNmP6v6N33Cde7d+cym/XzuOzbdniHwyXvbp+XrI9d1vcix7ytP5wPhGWiAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Configuration Connection Strings</source>
            <target state="new">Configuration Connection Strings</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;azure_1&lt;/token&gt;</ph> supports a set of managed APIs that provide a consistent way to create new instances of <ph id="2">&lt;token&gt;azure_2&lt;/token&gt;</ph> service clients (such as <ph id="3">&lt;token&gt;sb2&lt;/token&gt;</ph>) across Microsoft cloud services.</source>
            <target state="new"><ph id="1">&lt;token&gt;azure_1&lt;/token&gt;</ph> supports a set of managed APIs that provide a consistent way to create new instances of <ph id="2">&lt;token&gt;azure_2&lt;/token&gt;</ph> service clients (such as <ph id="3">&lt;token&gt;sb2&lt;/token&gt;</ph>) across Microsoft cloud services.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>These APIs enable you to instantiate clients (for example, <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient&lt;/codeEntityReference&gt;</ph>, <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.Messaging.SubscriptionClient&lt;/codeEntityReference&gt;</ph>, <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.Messaging.TopicClient&lt;/codeEntityReference&gt;</ph>) regardless of where the application is hosted -- on-premises, in a Microsoft cloud service, in websites, or in a persistent VM Role.</source>
            <target state="new">These APIs enable you to instantiate clients (for example, <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient&lt;/codeEntityReference&gt;</ph>, <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.Messaging.SubscriptionClient&lt;/codeEntityReference&gt;</ph>, <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.Messaging.TopicClient&lt;/codeEntityReference&gt;</ph>) regardless of where the application is hosted -- on-premises, in a Microsoft cloud service, in websites, or in a persistent VM Role.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>You can also use these API to retrieve the configuration information necessary for instantiating these clients, and to change the configuration without having to redeploy the calling application.</source>
            <target state="new">You can also use these API to retrieve the configuration information necessary for instantiating these clients, and to change the configuration without having to redeploy the calling application.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The APIs are located in the <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.WindowsAzure.CloudConfigurationManager&lt;/codeEntityReference&gt;</ph> class.</source>
            <target state="new">The APIs are located in the <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.WindowsAzure.CloudConfigurationManager&lt;/codeEntityReference&gt;</ph> class.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Connection String</source>
            <target state="new">Connection String</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>To instantiate a client (for example, a <ph id="1">&lt;codeEntityReference&gt;T:Microsoft.ServiceBus.Messaging.QueueClient&lt;/codeEntityReference&gt;</ph>), you can represent the configuration information as a <bpt id="2">&lt;newTerm&gt;</bpt>connection string<ept id="2">&lt;/newTerm&gt;</ept>.</source>
            <target state="new">To instantiate a client (for example, a <ph id="1">&lt;codeEntityReference&gt;T:Microsoft.ServiceBus.Messaging.QueueClient&lt;/codeEntityReference&gt;</ph>), you can represent the configuration information as a <bpt id="2">&lt;newTerm&gt;</bpt>connection string<ept id="2">&lt;/newTerm&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;azure_2&lt;/token&gt;</ph> supports a <ph id="2">&lt;codeEntityReference&gt;T:Microsoft.WindowsAzure.CloudConfigurationManager&lt;/codeEntityReference&gt;</ph> class that retrieves the connection string from the configuration file.</source>
            <target state="new"><ph id="1">&lt;token&gt;azure_2&lt;/token&gt;</ph> supports a <ph id="2">&lt;codeEntityReference&gt;T:Microsoft.WindowsAzure.CloudConfigurationManager&lt;/codeEntityReference&gt;</ph> class that retrieves the connection string from the configuration file.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>On the client side, for each of the different types of clients there is a method that instantiates that client type by using that connection string.</source>
            <target state="new">On the client side, for each of the different types of clients there is a method that instantiates that client type by using that connection string.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>For <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, these methods are:</source>
            <target state="new">For <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, these methods are:</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>For example, given the following configuration section:</source>
            <target state="new">For example, given the following configuration section:</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The following code retrieves the connection string, creates a queue, and initializes the connection to the queue:</source>
            <target state="new">The following code retrieves the connection string, creates a queue, and initializes the connection to the queue:</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>In addition to using connection strings in a configuration file to connect to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, there are situations in which you must explicitly specify the input parameters required to connect to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">In addition to using connection strings in a configuration file to connect to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, there are situations in which you must explicitly specify the input parameters required to connect to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> defines a helper class, <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder&lt;/codeEntityReference&gt;</ph>, that enables you to build connection strings in code.</source>
            <target state="new"><ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> defines a helper class, <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder&lt;/codeEntityReference&gt;</ph>, that enables you to build connection strings in code.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>In your code, identify the connection parameters (by either using a configuration file, or some other way).</source>
            <target state="new">In your code, identify the connection parameters (by either using a configuration file, or some other way).</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Then, use the <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder&lt;/codeEntityReference&gt;</ph> helper class to connect to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">Then, use the <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder&lt;/codeEntityReference&gt;</ph> helper class to connect to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>For example, the following code creates a connection string for use with <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>:</source>
            <target state="new">For example, the following code creates a connection string for use with <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>:</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The following code creates a connection string with a SAS key:</source>
            <target state="new">The following code creates a connection string with a SAS key:</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Other Connection String Formats</source>
            <target state="new">Other Connection String Formats</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeEntityReference&gt;T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder&lt;/codeEntityReference&gt;</ph> helper class enables you to create connection strings for several different scenarios.</source>
            <target state="new">The <ph id="1">&lt;codeEntityReference&gt;T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder&lt;/codeEntityReference&gt;</ph> helper class enables you to create connection strings for several different scenarios.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>The following sections contain examples.</source>
            <target state="new">The following sections contain examples.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Connection String: <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> for Appliances</source>
            <target state="new">Connection String: <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> for Appliances</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>The following example builds a connection string of the form</source>
            <target state="new">The following example builds a connection string of the form</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Connection String: <ph id="1">&lt;token&gt;sb_onprem&lt;/token&gt;</ph> with User Logon</source>
            <target state="new">Connection String: <ph id="1">&lt;token&gt;sb_onprem&lt;/token&gt;</ph> with User Logon</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>The following example builds a connection string of the form</source>
            <target state="new">The following example builds a connection string of the form</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Connection String: <ph id="1">&lt;token&gt;sb_onprem&lt;/token&gt;</ph> with Multiple Endpoints</source>
            <target state="new">Connection String: <ph id="1">&lt;token&gt;sb_onprem&lt;/token&gt;</ph> with Multiple Endpoints</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>The following example builds a connection string of the form</source>
            <target state="new">The following example builds a connection string of the form</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Connection String: <ph id="1">&lt;token&gt;sb_onprem&lt;/token&gt;</ph> with Explicit Domain User</source>
            <target state="new">Connection String: <ph id="1">&lt;token&gt;sb_onprem&lt;/token&gt;</ph> with Explicit Domain User</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>The following example builds a connection string of the form</source>
            <target state="new">The following example builds a connection string of the form</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Connection String: <ph id="1">&lt;token&gt;sb_onprem&lt;/token&gt;</ph> with Explicit Local User</source>
            <target state="new">Connection String: <ph id="1">&lt;token&gt;sb_onprem&lt;/token&gt;</ph> with Explicit Local User</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>The following example builds a connection string of the form</source>
            <target state="new">The following example builds a connection string of the form</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Connection String: <ph id="1">&lt;token&gt;sb_onprem&lt;/token&gt;</ph> with Anonymous Access</source>
            <target state="new">Connection String: <ph id="1">&lt;token&gt;sb_onprem&lt;/token&gt;</ph> with Anonymous Access</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The following example builds a connection string of the form</source>
            <target state="new">The following example builds a connection string of the form</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>