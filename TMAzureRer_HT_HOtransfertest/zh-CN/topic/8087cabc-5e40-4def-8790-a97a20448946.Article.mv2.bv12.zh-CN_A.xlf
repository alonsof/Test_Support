<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-CN" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANyTsKwzAMANCr+AAWyLb869qlU6deQLYlGkgTSFIIPX0zvOmpBmnkO4gQATlFaFgadHScalXHXK0ZHKhkJxCVEpAPDBV7BKQ0+vCRYxBrCpbcuXWIQgg0RKHkisA1s0eiUilZ46z5veH+tOacJ1U5j9u2roc1/rrL4/vh5bXxss98TOvyB3f/AKWiAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Specifying the Range Header for Blob Service Operations</source>
            <target state="new">Specifying the Range Header for Blob Service Operations</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Several Blob service GET operations support the use of the standard HTTP <ph id="1">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> header.</source>
            <target state="new">Several Blob service GET operations support the use of the standard HTTP <ph id="1">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> header.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Many HTTP clients, including the .NET client library, limit the size of the <ph id="1">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> header to a 32-bit integer, and thus its value is limited to a maximum of 4 GB.</source>
            <target state="new">Many HTTP clients, including the .NET client library, limit the size of the <ph id="1">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> header to a 32-bit integer, and thus its value is limited to a maximum of 4 GB.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Since both block blobs and page blobs can be larger than 4 GB in size, the Blob service accepts a custom range header <ph id="1">&lt;parameterReference&gt;x-ms-range&lt;/parameterReference&gt;</ph> for any operation that takes an HTTP <ph id="2">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> header.</source>
            <target state="new">Since both block blobs and page blobs can be larger than 4 GB in size, the Blob service accepts a custom range header <ph id="1">&lt;parameterReference&gt;x-ms-range&lt;/parameterReference&gt;</ph> for any operation that takes an HTTP <ph id="2">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> header.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Some HTTP clients, including the Microsoft Silverlight library, limit access to the <ph id="1">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> header altogether.</source>
            <target state="new">Some HTTP clients, including the Microsoft Silverlight library, limit access to the <ph id="1">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> header altogether.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;parameterReference&gt;x-ms-range&lt;/parameterReference&gt;</ph> header can be used to circumvent these limitations as well.</source>
            <target state="new">The <ph id="1">&lt;parameterReference&gt;x-ms-range&lt;/parameterReference&gt;</ph> header can be used to circumvent these limitations as well.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>If the <ph id="1">&lt;parameterReference&gt;x-ms-range&lt;/parameterReference&gt;</ph> header is specified on a request, then the service uses the range specified by <ph id="2">&lt;parameterReference&gt;x-ms-range&lt;/parameterReference&gt;</ph>; otherwise, the range specified by the <ph id="3">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> header is used.</source>
            <target state="new">If the <ph id="1">&lt;parameterReference&gt;x-ms-range&lt;/parameterReference&gt;</ph> header is specified on a request, then the service uses the range specified by <ph id="2">&lt;parameterReference&gt;x-ms-range&lt;/parameterReference&gt;</ph>; otherwise, the range specified by the <ph id="3">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> header is used.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>The Azure Storage Client Library automatically handles setting the appropriate range header on the request when you set the <ph id="1">&lt;unmanagedCodeEntityReference&gt;Range&lt;/unmanagedCodeEntityReference&gt;</ph> property of the <ph id="2">&lt;unmanagedCodeEntityReference&gt;PutPageProperties&lt;/unmanagedCodeEntityReference&gt;</ph> object.</source>
            <target state="new">The Azure Storage Client Library automatically handles setting the appropriate range header on the request when you set the <ph id="1">&lt;unmanagedCodeEntityReference&gt;Range&lt;/unmanagedCodeEntityReference&gt;</ph> property of the <ph id="2">&lt;unmanagedCodeEntityReference&gt;PutPageProperties&lt;/unmanagedCodeEntityReference&gt;</ph> object.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Range Header Formats</source>
            <target state="new">Range Header Formats</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>The Blob service accepts two byte ranges for the <ph id="1">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> and <ph id="2">&lt;parameterReference&gt;x-ms-range&lt;/parameterReference&gt;</ph> headers.</source>
            <target state="new">The Blob service accepts two byte ranges for the <ph id="1">&lt;parameterReference&gt;Range&lt;/parameterReference&gt;</ph> and <ph id="2">&lt;parameterReference&gt;x-ms-range&lt;/parameterReference&gt;</ph> headers.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>The byte range must adhere to either of the following formats for the headers:</source>
            <target state="new">The byte range must adhere to either of the following formats for the headers:</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;parameterReference&gt;bytes=startByte-&lt;/parameterReference&gt;</ph> for requests using version 2011-08-18 or newer</source>
            <target state="new"><ph id="1">&lt;parameterReference&gt;bytes=startByte-&lt;/parameterReference&gt;</ph> for requests using version 2011-08-18 or newer</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;parameterReference&gt;bytes=startByte-endByte&lt;/parameterReference&gt;</ph> for requests using all versions (2009-04-14 through the newest version)</source>
            <target state="new"><ph id="1">&lt;parameterReference&gt;bytes=startByte-endByte&lt;/parameterReference&gt;</ph> for requests using all versions (2009-04-14 through the newest version)</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Format 1: bytes=startByte-</source>
            <target state="new">Format 1: bytes=startByte-</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The first format, <ph id="1">&lt;parameterReference&gt;bytes=startByte-&lt;/parameterReference&gt;</ph>, is available only for requests using version 2011-08-18 or newer, or the storage emulator service in SDK 1.6 or newer.</source>
            <target state="new">The first format, <ph id="1">&lt;parameterReference&gt;bytes=startByte-&lt;/parameterReference&gt;</ph>, is available only for requests using version 2011-08-18 or newer, or the storage emulator service in SDK 1.6 or newer.</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>This range will return bytes from the offset <ph id="1">&lt;parameterReference&gt;startByte&lt;/parameterReference&gt;</ph> through the end of the blob.</source>
            <target state="new">This range will return bytes from the offset <ph id="1">&lt;parameterReference&gt;startByte&lt;/parameterReference&gt;</ph> through the end of the blob.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>For example, to specify a range encompassing all bytes after the first 256 bytes of a blob, you can pass in either of the following headers:</source>
            <target state="new">For example, to specify a range encompassing all bytes after the first 256 bytes of a blob, you can pass in either of the following headers:</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;parameterReference&gt;Content-Length&lt;/parameterReference&gt;</ph> header in the response is equal to the number of bytes from the offset until the end of the blob.</source>
            <target state="new">The <ph id="1">&lt;parameterReference&gt;Content-Length&lt;/parameterReference&gt;</ph> header in the response is equal to the number of bytes from the offset until the end of the blob.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Using the example range above for a blob of 1,024 bytes in length, <ph id="1">&lt;parameterReference&gt;Content-Length&lt;/parameterReference&gt;</ph> would be 756.</source>
            <target state="new">Using the example range above for a blob of 1,024 bytes in length, <ph id="1">&lt;parameterReference&gt;Content-Length&lt;/parameterReference&gt;</ph> would be 756.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>If the offset is valid and does not exceed the blob’s total length, the request will return an status code 206 (Partial Content).</source>
            <target state="new">If the offset is valid and does not exceed the blob’s total length, the request will return an status code 206 (Partial Content).</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>If the offset is invalid and exceeds the blob’s total length, the request will return status code 416 (Requested Range Not Satisfiable).</source>
            <target state="new">If the offset is invalid and exceeds the blob’s total length, the request will return status code 416 (Requested Range Not Satisfiable).</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Format 2: bytes=startByte-endByte</source>
            <target state="new">Format 2: bytes=startByte-endByte</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>The second format, <ph id="1">&lt;parameterReference&gt;bytes=startByte-endByte&lt;/parameterReference&gt;</ph>, is available for requests using all versions (2009-04-14 through the newest version), and for all versions of the storage emulator service.</source>
            <target state="new">The second format, <ph id="1">&lt;parameterReference&gt;bytes=startByte-endByte&lt;/parameterReference&gt;</ph>, is available for requests using all versions (2009-04-14 through the newest version), and for all versions of the storage emulator service.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>This range will return bytes from the offset <ph id="1">&lt;parameterReference&gt;startByte&lt;/parameterReference&gt;</ph> through <ph id="2">&lt;parameterReference&gt;endByte&lt;/parameterReference&gt;</ph>.</source>
            <target state="new">This range will return bytes from the offset <ph id="1">&lt;parameterReference&gt;startByte&lt;/parameterReference&gt;</ph> through <ph id="2">&lt;parameterReference&gt;endByte&lt;/parameterReference&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>For example, to specify a range encompassing the first 512 bytes of a blob, you would pass in either of the following headers:</source>
            <target state="new">For example, to specify a range encompassing the first 512 bytes of a blob, you would pass in either of the following headers:</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;parameterReference&gt;Content-Length&lt;/parameterReference&gt;</ph> header in the response is equal to the number of bytes between each offset.</source>
            <target state="new">The <ph id="1">&lt;parameterReference&gt;Content-Length&lt;/parameterReference&gt;</ph> header in the response is equal to the number of bytes between each offset.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Using the example range above for a blob of 1,024 bytes in length, <ph id="1">&lt;parameterReference&gt;Content-Length&lt;/parameterReference&gt;</ph> would be 512.</source>
            <target state="new">Using the example range above for a blob of 1,024 bytes in length, <ph id="1">&lt;parameterReference&gt;Content-Length&lt;/parameterReference&gt;</ph> would be 512.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>If the offset is valid and does not exceed the blob’s total length, the request will return an status code 206 (Partial Content).</source>
            <target state="new">If the offset is valid and does not exceed the blob’s total length, the request will return an status code 206 (Partial Content).</target>
          </trans-unit>
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>If the offset is invalid and exceeds the blob’s total length, the request will return status code 416 (Requested Range Not Satisfiable).</source>
            <target state="new">If the offset is invalid and exceeds the blob’s total length, the request will return status code 416 (Requested Range Not Satisfiable).</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>