<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-CN" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAAdzE0KwkAMQOGrzAEmkHQyf27duHLlBTLTBAu1hVqheHqL6/fxzII2HjqoMgOTITQsDTqSpFqNRKp3XWMnDgi9ZQJWTNA0ZIg51bGEUkSHU9VQ1AhhjCkCFyVobAKcR67SDKN278i77xOud++OeTLTY79s67r/wzm5fV6yPDZZ3rPs07r8AFl217KhAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="content">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Creates a proxy actor object that implements an actor interface.</source>
            <target state="new">Creates a proxy actor object that implements an actor interface.</target>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Creates a proxy actor object that implements an actor interface.</source>
            <target state="new">Creates a proxy actor object that implements an actor interface.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>The actor interface implemented by the proxy actor object</source>
            <target state="new">The actor interface implemented by the proxy actor object</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Actor ID of the proxy actor object.</source>
            <target state="new">Actor ID of the proxy actor object.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Methods called on this proxy actor object will result in requests being sent to the actor with the same actor ID on the server.</source>
            <target state="new">Methods called on this proxy actor object will result in requests being sent to the actor with the same actor ID on the server.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Name of the Service Fabric application that the client intends to communicate with via this proxy.</source>
            <target state="new">Name of the Service Fabric application that the client intends to communicate with via this proxy.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>This parameter can be null if the client is running as part of the same Service Fabric application as the actor service with which it intends to communicate.</source>
            <target state="new">This parameter can be null if the client is running as part of the same Service Fabric application as the actor service with which it intends to communicate.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>For more information, see Remarks.</source>
            <target state="new">For more information, see Remarks.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Name of the Service Fabric service that the client intends to communicate with via this proxy.</source>
            <target state="new">Name of the Service Fabric service that the client intends to communicate with via this proxy.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>This parameter can be null if the service was created as a default service using the application manifest created by Visual Studio when a new Actor project is created.</source>
            <target state="new">This parameter can be null if the service was created as a default service using the application manifest created by Visual Studio when a new Actor project is created.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>For more information, see Remarks.</source>
            <target state="new">For more information, see Remarks.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The actor proxy object typed as TActorInterface.</source>
            <target state="new">The actor proxy object typed as TActorInterface.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;legacyItalic&gt;</bpt>applicationName<ept id="1">&lt;/legacyItalic&gt;</ept> parameter can be null if the client is running as part of the same Service Fabric application as the actor service with which it intends to communicate.</source>
            <target state="new">The <bpt id="1">&lt;legacyItalic&gt;</bpt>applicationName<ept id="1">&lt;/legacyItalic&gt;</ept> parameter can be null if the client is running as part of the same Service Fabric application as the actor service with which it intends to communicate.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>In this case, the application name is determined via the <ph id="1">&lt;codeEntityReference&gt;T:System.Fabric.CodePackageActivationContext&lt;/codeEntityReference&gt;</ph>, which is obtained by calling the <ph id="2">&lt;codeEntityReference&gt;M:System.Fabric.FabricRuntime.GetActivationContext&lt;/codeEntityReference&gt;</ph> method.</source>
            <target state="new">In this case, the application name is determined via the <ph id="1">&lt;codeEntityReference&gt;T:System.Fabric.CodePackageActivationContext&lt;/codeEntityReference&gt;</ph>, which is obtained by calling the <ph id="2">&lt;codeEntityReference&gt;M:System.Fabric.FabricRuntime.GetActivationContext&lt;/codeEntityReference&gt;</ph> method.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;legacyItalic&gt;</bpt>serviceName<ept id="1">&lt;/legacyItalic&gt;</ept> parameter can be null if the service was created as a default service using the application manifest created by Visual Studio when a new Actor project is created.</source>
            <target state="new">The <bpt id="1">&lt;legacyItalic&gt;</bpt>serviceName<ept id="1">&lt;/legacyItalic&gt;</ept> parameter can be null if the service was created as a default service using the application manifest created by Visual Studio when a new Actor project is created.</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;legacyItalic&gt;</bpt>DefaultServices<ept id="1">&lt;/legacyItalic&gt;</ept> element in the application manifest specifies the services that are created by default when the application is deployed.</source>
            <target state="new">The <bpt id="1">&lt;legacyItalic&gt;</bpt>DefaultServices<ept id="1">&lt;/legacyItalic&gt;</ept> element in the application manifest specifies the services that are created by default when the application is deployed.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>In this case, the service name is determined using the same algorithm that is used by the Visual Studio tools to generate the service name.</source>
            <target state="new">In this case, the service name is determined using the same algorithm that is used by the Visual Studio tools to generate the service name.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>