<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-CN" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANxMEKwjAMgOFX6QM0kNRsbb168eTJF0ibBAdzgzlh+PQO/u93v1jj1MGMGZgcoWFp0JFkrNVJpMZQUFmLIQzZBLh0A/GcYLCiRUcTzhqDjI06ZQIq59icoaZLAyWshKzqxDFQDL8X3B4xHPPkbsd+3dZ1jyGdne7ftyzPTZbPLPu0Ln9Z3VciogAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>String Map Operations - Usage and Examples</source>
            <target state="new">String Map Operations - Usage and Examples</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>String <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s</source>
            <target state="new">String <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>The following table lists the String <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s in <ph id="2">&lt;token&gt;af_integration_full&lt;/token&gt;</ph>:</source>
            <target state="new">The following table lists the String <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s in <ph id="2">&lt;token&gt;af_integration_full&lt;/token&gt;</ph>:</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Map Operator</source>
            <target state="new">Map Operator</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Parameters</source>
            <target state="new">Parameters</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Output</source>
            <target state="new">Output</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>String Concatenate</source>
            <target state="new">String Concatenate</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Concatenates strings in the order listed.</source>
            <target state="new">Concatenates strings in the order listed.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Requires at least one input parameter.</source>
            <target state="new">Requires at least one input parameter.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>No maximum limit on the number input parameters:</source>
            <target state="new">No maximum limit on the number input parameters:</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Input_1</source>
            <target state="new">Input_1</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>A string that is concatenated to.</source>
            <target state="new">A string that is concatenated to.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Input_n</source>
            <target state="new">Input_n</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>A string that is concatenated with the previous string input.</source>
            <target state="new">A string that is concatenated with the previous string input.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Strings are concatenated in the order listed.</source>
            <target state="new">Strings are concatenated in the order listed.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>A string that concatenated the input strings in the order specified.</source>
            <target state="new">A string that concatenated the input strings in the order specified.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>For example, when using “<bpt id="1">&lt;legacyBold&gt;</bpt>1 Microsoft Way<ept id="1">&lt;/legacyBold&gt;</ept>” and “<bpt id="2">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="2">&lt;/legacyBold&gt;</ept>” as input strings, the result is “<bpt id="3">&lt;legacyBold&gt;</bpt>1 Microsoft WayRedmond WA<ept id="3">&lt;/legacyBold&gt;</ept>”.</source>
            <target state="new">For example, when using “<bpt id="1">&lt;legacyBold&gt;</bpt>1 Microsoft Way<ept id="1">&lt;/legacyBold&gt;</ept>” and “<bpt id="2">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="2">&lt;/legacyBold&gt;</ept>” as input strings, the result is “<bpt id="3">&lt;legacyBold&gt;</bpt>1 Microsoft WayRedmond WA<ept id="3">&lt;/legacyBold&gt;</ept>”.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>There is no trailing space at the end of the first string or a leading space at the beginning of the second string.</source>
            <target state="new">There is no trailing space at the end of the first string or a leading space at the beginning of the second string.</target>
          </trans-unit>
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>As a result, there is no space between “<bpt id="1">&lt;legacyBold&gt;</bpt>Way<ept id="1">&lt;/legacyBold&gt;</ept>” and “<bpt id="2">&lt;legacyBold&gt;</bpt>Redmond<ept id="2">&lt;/legacyBold&gt;</ept>”.</source>
            <target state="new">As a result, there is no space between “<bpt id="1">&lt;legacyBold&gt;</bpt>Way<ept id="1">&lt;/legacyBold&gt;</ept>” and “<bpt id="2">&lt;legacyBold&gt;</bpt>Redmond<ept id="2">&lt;/legacyBold&gt;</ept>”.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>String Find</source>
            <target state="new">String Find</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Returns the starting position of a substring.</source>
            <target state="new">Returns the starting position of a substring.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Requires exactly two input parameters:</source>
            <target state="new">Requires exactly two input parameters:</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Input string</source>
            <target state="new">Input string</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>A string that is being searched through.</source>
            <target state="new">A string that is being searched through.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Search String</source>
            <target state="new">Search String</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>A string that is being searched for.</source>
            <target state="new">A string that is being searched for.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>A numeric value <bpt id="1">&lt;legacyBold&gt;</bpt>starting at 1<ept id="1">&lt;/legacyBold&gt;</ept> that is the <bpt id="2">&lt;legacyBold&gt;</bpt>starting<ept id="2">&lt;/legacyBold&gt;</ept> position of the first character in the substring.</source>
            <target state="new">A numeric value <bpt id="1">&lt;legacyBold&gt;</bpt>starting at 1<ept id="1">&lt;/legacyBold&gt;</ept> that is the <bpt id="2">&lt;legacyBold&gt;</bpt>starting<ept id="2">&lt;/legacyBold&gt;</ept> position of the first character in the substring.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Zero (0) indicates that the substring was not found.</source>
            <target state="new">Zero (0) indicates that the substring was not found.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>For example, searching for the “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond<ept id="1">&lt;/legacyBold&gt;</ept>” substring within the “<bpt id="2">&lt;legacyBold&gt;</bpt>1 Microsoft Way Redmond WA<ept id="2">&lt;/legacyBold&gt;</ept>” input string returns a numeric value of 17.</source>
            <target state="new">For example, searching for the “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond<ept id="1">&lt;/legacyBold&gt;</ept>” substring within the “<bpt id="2">&lt;legacyBold&gt;</bpt>1 Microsoft Way Redmond WA<ept id="2">&lt;/legacyBold&gt;</ept>” input string returns a numeric value of 17.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>String Left</source>
            <target state="new">String Left</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Retrieves a specified number of characters, starting with the leftmost character.</source>
            <target state="new">Retrieves a specified number of characters, starting with the leftmost character.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Requires exactly two input parameters:</source>
            <target state="new">Requires exactly two input parameters:</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Input string</source>
            <target state="new">Input string</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>A string to retrieve a specified number of its leftmost characters.</source>
            <target state="new">A string to retrieve a specified number of its leftmost characters.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Number of Characters</source>
            <target state="new">Number of Characters</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>A numeric value that represents the number of leftmost characters to retrieve.</source>
            <target state="new">A numeric value that represents the number of leftmost characters to retrieve.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>A string that contains the specified number of leftmost characters.</source>
            <target state="new">A string that contains the specified number of leftmost characters.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>For example, using “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” as an input string and 3 for the <bpt id="2">&lt;legacyItalic&gt;</bpt>Number of Characters<ept id="2">&lt;/legacyItalic&gt;</ept>, the result is “<bpt id="3">&lt;legacyBold&gt;</bpt>Red<ept id="3">&lt;/legacyBold&gt;</ept>”.</source>
            <target state="new">For example, using “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” as an input string and 3 for the <bpt id="2">&lt;legacyItalic&gt;</bpt>Number of Characters<ept id="2">&lt;/legacyItalic&gt;</ept>, the result is “<bpt id="3">&lt;legacyBold&gt;</bpt>Red<ept id="3">&lt;/legacyBold&gt;</ept>”.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Lowercase</source>
            <target state="new">Lowercase</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Converts any uppercase characters within a string to lowercase.</source>
            <target state="new">Converts any uppercase characters within a string to lowercase.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Requires exactly one input parameter:</source>
            <target state="new">Requires exactly one input parameter:</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>Input string</source>
            <target state="new">Input string</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>A string to convert any uppercase characters to lowercase.</source>
            <target state="new">A string to convert any uppercase characters to lowercase.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Any uppercase characters within the string are now in lowercase.</source>
            <target state="new">Any uppercase characters within the string are now in lowercase.</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>For example, an input string of “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” is returned as “<bpt id="2">&lt;legacyBold&gt;</bpt>redmond wa<ept id="2">&lt;/legacyBold&gt;</ept>”.</source>
            <target state="new">For example, an input string of “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” is returned as “<bpt id="2">&lt;legacyBold&gt;</bpt>redmond wa<ept id="2">&lt;/legacyBold&gt;</ept>”.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>String Right</source>
            <target state="new">String Right</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>Retrieves a specified number of characters, starting with the rightmost character.</source>
            <target state="new">Retrieves a specified number of characters, starting with the rightmost character.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>Requires exactly two input parameters:</source>
            <target state="new">Requires exactly two input parameters:</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>Input string</source>
            <target state="new">Input string</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>A string to retrieve a specified number of its rightmost characters.</source>
            <target state="new">A string to retrieve a specified number of its rightmost characters.</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>Number of Characters</source>
            <target state="new">Number of Characters</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>A numeric value that represents the number of rightmost characters to retrieve.</source>
            <target state="new">A numeric value that represents the number of rightmost characters to retrieve.</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>A string that contains the specified number of rightmost characters.</source>
            <target state="new">A string that contains the specified number of rightmost characters.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>For example, using “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” as an input string and 3 for the <bpt id="2">&lt;legacyItalic&gt;</bpt>Number of Characters<ept id="2">&lt;/legacyItalic&gt;</ept>, the result is “<bpt id="3">&lt;legacyBold&gt;</bpt> WA<ept id="3">&lt;/legacyBold&gt;</ept>”.</source>
            <target state="new">For example, using “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” as an input string and 3 for the <bpt id="2">&lt;legacyItalic&gt;</bpt>Number of Characters<ept id="2">&lt;/legacyItalic&gt;</ept>, the result is “<bpt id="3">&lt;legacyBold&gt;</bpt> WA<ept id="3">&lt;/legacyBold&gt;</ept>”.</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>There is a space between “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond<ept id="1">&lt;/legacyBold&gt;</ept>” and “<bpt id="2">&lt;legacyBold&gt;</bpt>WA<ept id="2">&lt;/legacyBold&gt;</ept>”.</source>
            <target state="new">There is a space between “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond<ept id="1">&lt;/legacyBold&gt;</ept>” and “<bpt id="2">&lt;legacyBold&gt;</bpt>WA<ept id="2">&lt;/legacyBold&gt;</ept>”.</target>
          </trans-unit>
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>As a result, the space is displayed in the output.</source>
            <target state="new">As a result, the space is displayed in the output.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>Size</source>
            <target state="new">Size</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>Retrieves the length of a string.</source>
            <target state="new">Retrieves the length of a string.</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>Requires exactly one input parameter:</source>
            <target state="new">Requires exactly one input parameter:</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>Input string</source>
            <target state="new">Input string</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>A string to determine the length.</source>
            <target state="new">A string to determine the length.</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>A numeric value that is the length of the string.</source>
            <target state="new">A numeric value that is the length of the string.</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>For example, “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” as an input string returns a numeric value of 10.</source>
            <target state="new">For example, “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” as an input string returns a numeric value of 10.</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>String Extract</source>
            <target state="new">String Extract</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>Extracts a substring by specifying the start and end positions.</source>
            <target state="new">Extracts a substring by specifying the start and end positions.</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>Requires exactly three input parameters:</source>
            <target state="new">Requires exactly three input parameters:</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>Input string</source>
            <target state="new">Input string</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>A string to extract from.</source>
            <target state="new">A string to extract from.</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>Start Index</source>
            <target state="new">Start Index</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>A numeric value <bpt id="1">&lt;legacyBold&gt;</bpt>starting at 1<ept id="1">&lt;/legacyBold&gt;</ept> that is the starting character of the substring to be extracted.</source>
            <target state="new">A numeric value <bpt id="1">&lt;legacyBold&gt;</bpt>starting at 1<ept id="1">&lt;/legacyBold&gt;</ept> that is the starting character of the substring to be extracted.</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>End Index</source>
            <target state="new">End Index</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>A numeric value <bpt id="1">&lt;legacyBold&gt;</bpt>starting at 1<ept id="1">&lt;/legacyBold&gt;</ept> that is the ending character of the substring to be extracted.</source>
            <target state="new">A numeric value <bpt id="1">&lt;legacyBold&gt;</bpt>starting at 1<ept id="1">&lt;/legacyBold&gt;</ept> that is the ending character of the substring to be extracted.</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>A string that contains the extracted substring.</source>
            <target state="new">A string that contains the extracted substring.</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>For example, a <bpt id="1">&lt;legacyItalic&gt;</bpt>Start Index<ept id="1">&lt;/legacyItalic&gt;</ept> of 2 and <bpt id="2">&lt;legacyItalic&gt;</bpt>End Index<ept id="2">&lt;/legacyItalic&gt;</ept> of 5 of the “<bpt id="3">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="3">&lt;/legacyBold&gt;</ept>” input string returns “<bpt id="4">&lt;legacyBold&gt;</bpt>edmo<ept id="4">&lt;/legacyBold&gt;</ept>”; where “<bpt id="5">&lt;legacyBold&gt;</bpt>e<ept id="5">&lt;/legacyBold&gt;</ept>” is the second character, “<bpt id="6">&lt;legacyBold&gt;</bpt>d<ept id="6">&lt;/legacyBold&gt;</ept>” is the third character, “<bpt id="7">&lt;legacyBold&gt;</bpt>m<ept id="7">&lt;/legacyBold&gt;</ept>” is the fourth character and “<bpt id="8">&lt;legacyBold&gt;</bpt>o<ept id="8">&lt;/legacyBold&gt;</ept>” is the fifth character.</source>
            <target state="new">For example, a <bpt id="1">&lt;legacyItalic&gt;</bpt>Start Index<ept id="1">&lt;/legacyItalic&gt;</ept> of 2 and <bpt id="2">&lt;legacyItalic&gt;</bpt>End Index<ept id="2">&lt;/legacyItalic&gt;</ept> of 5 of the “<bpt id="3">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="3">&lt;/legacyBold&gt;</ept>” input string returns “<bpt id="4">&lt;legacyBold&gt;</bpt>edmo<ept id="4">&lt;/legacyBold&gt;</ept>”; where “<bpt id="5">&lt;legacyBold&gt;</bpt>e<ept id="5">&lt;/legacyBold&gt;</ept>” is the second character, “<bpt id="6">&lt;legacyBold&gt;</bpt>d<ept id="6">&lt;/legacyBold&gt;</ept>” is the third character, “<bpt id="7">&lt;legacyBold&gt;</bpt>m<ept id="7">&lt;/legacyBold&gt;</ept>” is the fourth character and “<bpt id="8">&lt;legacyBold&gt;</bpt>o<ept id="8">&lt;/legacyBold&gt;</ept>” is the fifth character.</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>An empty string is returned if the substring cannot be extracted due to incorrect <bpt id="1">&lt;legacyItalic&gt;</bpt>Start Index<ept id="1">&lt;/legacyItalic&gt;</ept> and <bpt id="2">&lt;legacyItalic&gt;</bpt>End Index<ept id="2">&lt;/legacyItalic&gt;</ept> values.</source>
            <target state="new">An empty string is returned if the substring cannot be extracted due to incorrect <bpt id="1">&lt;legacyItalic&gt;</bpt>Start Index<ept id="1">&lt;/legacyItalic&gt;</ept> and <bpt id="2">&lt;legacyItalic&gt;</bpt>End Index<ept id="2">&lt;/legacyItalic&gt;</ept> values.</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>If the <bpt id="1">&lt;legacyItalic&gt;</bpt>Start Index<ept id="1">&lt;/legacyItalic&gt;</ept> <bpt id="2">&lt;legacyUnderline&gt;</bpt>or<ept id="2">&lt;/legacyUnderline&gt;</ept> the <bpt id="3">&lt;legacyItalic&gt;</bpt>End Index<ept id="3">&lt;/legacyItalic&gt;</ept> parameters exceed the size of the input string, a substring is still returned as though these parameters were set to the exact size of the string.</source>
            <target state="new">If the <bpt id="1">&lt;legacyItalic&gt;</bpt>Start Index<ept id="1">&lt;/legacyItalic&gt;</ept> <bpt id="2">&lt;legacyUnderline&gt;</bpt>or<ept id="2">&lt;/legacyUnderline&gt;</ept> the <bpt id="3">&lt;legacyItalic&gt;</bpt>End Index<ept id="3">&lt;/legacyItalic&gt;</ept> parameters exceed the size of the input string, a substring is still returned as though these parameters were set to the exact size of the string.</target>
          </trans-unit>
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>For example, a <bpt id="1">&lt;legacyItalic&gt;</bpt>Start Index<ept id="1">&lt;/legacyItalic&gt;</ept> of 12 and <bpt id="2">&lt;legacyItalic&gt;</bpt>End Index<ept id="2">&lt;/legacyItalic&gt;</ept> of 5 of the “<bpt id="3">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="3">&lt;/legacyBold&gt;</ept>” input string would return “<bpt id="4">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="4">&lt;/legacyBold&gt;</ept>” because the <bpt id="5">&lt;legacyItalic&gt;</bpt>Start Index<ept id="5">&lt;/legacyItalic&gt;</ept> exceeds the size of the input string.</source>
            <target state="new">For example, a <bpt id="1">&lt;legacyItalic&gt;</bpt>Start Index<ept id="1">&lt;/legacyItalic&gt;</ept> of 12 and <bpt id="2">&lt;legacyItalic&gt;</bpt>End Index<ept id="2">&lt;/legacyItalic&gt;</ept> of 5 of the “<bpt id="3">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="3">&lt;/legacyBold&gt;</ept>” input string would return “<bpt id="4">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="4">&lt;/legacyBold&gt;</ept>” because the <bpt id="5">&lt;legacyItalic&gt;</bpt>Start Index<ept id="5">&lt;/legacyItalic&gt;</ept> exceeds the size of the input string.</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>String Left Trim</source>
            <target state="new">String Left Trim</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>Removes leading white-space characters from a string.</source>
            <target state="new">Removes leading white-space characters from a string.</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>Requires exactly one input parameter:</source>
            <target state="new">Requires exactly one input parameter:</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>Input string</source>
            <target state="new">Input string</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>A string to remove leading white spaces.</source>
            <target state="new">A string to remove leading white spaces.</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>A string with any leading white-space characters removed.</source>
            <target state="new">A string with any leading white-space characters removed.</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>For example, an input string of “<bpt id="1">&lt;legacyBold&gt;</bpt>     Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” returns “<bpt id="2">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="2">&lt;/legacyBold&gt;</ept>”.</source>
            <target state="new">For example, an input string of “<bpt id="1">&lt;legacyBold&gt;</bpt>     Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” returns “<bpt id="2">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="2">&lt;/legacyBold&gt;</ept>”.</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>String Right Trim</source>
            <target state="new">String Right Trim</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>Removes trailing white-space characters from a string.</source>
            <target state="new">Removes trailing white-space characters from a string.</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>Requires exactly one input parameter:</source>
            <target state="new">Requires exactly one input parameter:</target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>Input string</source>
            <target state="new">Input string</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>A string to remove trailing white spaces.</source>
            <target state="new">A string to remove trailing white spaces.</target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>A string with any trailing white-space characters removed.</source>
            <target state="new">A string with any trailing white-space characters removed.</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>For example, an input string of “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>    ” returns “<bpt id="2">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="2">&lt;/legacyBold&gt;</ept>”.</source>
            <target state="new">For example, an input string of “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>    ” returns “<bpt id="2">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="2">&lt;/legacyBold&gt;</ept>”.</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>Uppercase</source>
            <target state="new">Uppercase</target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>Converts any lowercase characters in a string to uppercase.</source>
            <target state="new">Converts any lowercase characters in a string to uppercase.</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>Requires exactly one input parameter:</source>
            <target state="new">Requires exactly one input parameter:</target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>Input string</source>
            <target state="new">Input string</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>A string to convert any lowercase characters to uppercase.</source>
            <target state="new">A string to convert any lowercase characters to uppercase.</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>Any lowercase characters within the string are now in uppercase.</source>
            <target state="new">Any lowercase characters within the string are now in uppercase.</target>
          </trans-unit>
        </group>
        <group id="94">
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>For example, an input string of “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” returns “<bpt id="2">&lt;legacyBold&gt;</bpt>REDMOND WA<ept id="2">&lt;/legacyBold&gt;</ept>”.</source>
            <target state="new">For example, an input string of “<bpt id="1">&lt;legacyBold&gt;</bpt>Redmond WA<ept id="1">&lt;/legacyBold&gt;</ept>” returns “<bpt id="2">&lt;legacyBold&gt;</bpt>REDMOND WA<ept id="2">&lt;/legacyBold&gt;</ept>”.</target>
          </trans-unit>
        </group>
        <group id="95">
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>Error and Data Handling</source>
            <target state="new">Error and Data Handling</target>
          </trans-unit>
        </group>
        <group id="96">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> provides the ability to configure how an error is handled and how an empty or null node is handled.</source>
            <target state="new"><ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> provides the ability to configure how an error is handled and how an empty or null node is handled.</target>
          </trans-unit>
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>The error handling behavior of <bpt id="1">&lt;ui&gt;</bpt>String<ept id="1">&lt;/ui&gt;</ept> is configurable in a <bpt id="2">&lt;ui&gt;</bpt><ph id="3">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph><ept id="2">&lt;/ui&gt;</ept> and the <bpt id="4">&lt;embeddedLabel&gt;</bpt>BizTalk Service Artifacts<ept id="4">&lt;/embeddedLabel&gt;</ept> project.</source>
            <target state="new">The error handling behavior of <bpt id="1">&lt;ui&gt;</bpt>String<ept id="1">&lt;/ui&gt;</ept> is configurable in a <bpt id="2">&lt;ui&gt;</bpt><ph id="3">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph><ept id="2">&lt;/ui&gt;</ept> and the <bpt id="4">&lt;embeddedLabel&gt;</bpt>BizTalk Service Artifacts<ept id="4">&lt;/embeddedLabel&gt;</ept> project.</target>
          </trans-unit>
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>Steps:</source>
            <target state="new">Steps:</target>
          </trans-unit>
        </group>
        <group id="97">
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>Open a <bpt id="1">&lt;ui&gt;</bpt><ph id="2">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph><ept id="1">&lt;/ui&gt;</ept> or a <bpt id="3">&lt;embeddedLabel&gt;</bpt>BizTalk Service Artifacts<ept id="3">&lt;/embeddedLabel&gt;</ept> project in <ph id="4">&lt;token&gt;vsprvs&lt;/token&gt;</ph>.</source>
            <target state="new">Open a <bpt id="1">&lt;ui&gt;</bpt><ph id="2">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph><ept id="1">&lt;/ui&gt;</ept> or a <bpt id="3">&lt;embeddedLabel&gt;</bpt>BizTalk Service Artifacts<ept id="3">&lt;/embeddedLabel&gt;</ept> project in <ph id="4">&lt;token&gt;vsprvs&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="98">
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>Double-click a <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> (.trfm) to open the <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> Designer.</source>
            <target state="new">Double-click a <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> (.trfm) to open the <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> Designer.</target>
          </trans-unit>
        </group>
        <group id="99">
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>In the <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> toolbar, select <bpt id="2">&lt;ui&gt;</bpt>Settings<ept id="2">&lt;/ui&gt;</ept>.</source>
            <target state="new">In the <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> toolbar, select <bpt id="2">&lt;ui&gt;</bpt>Settings<ept id="2">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="100">
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Error Handling<ept id="1">&lt;/ui&gt;</ept> tab</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Error Handling<ept id="1">&lt;/ui&gt;</ept> tab</target>
          </trans-unit>
        </group>
        <group id="101">
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>Error Handling<ept id="1">&lt;/ui&gt;</ept> tab, <bpt id="2">&lt;ui&gt;</bpt>String Operations<ept id="2">&lt;/ui&gt;</ept> has two <bpt id="3">&lt;ui&gt;</bpt>Behavior<ept id="3">&lt;/ui&gt;</ept> options:</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>Error Handling<ept id="1">&lt;/ui&gt;</ept> tab, <bpt id="2">&lt;ui&gt;</bpt>String Operations<ept id="2">&lt;/ui&gt;</ept> has two <bpt id="3">&lt;ui&gt;</bpt>Behavior<ept id="3">&lt;/ui&gt;</ept> options:</target>
          </trans-unit>
        </group>
        <group id="102">
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Fail map<ept id="1">&lt;/legacyBold&gt;</ept>: The entire <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> is aborted.</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Fail map<ept id="1">&lt;/legacyBold&gt;</ept>: The entire <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> is aborted.</target>
          </trans-unit>
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>Since <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s are executed within a pipeline, an error occurs within the pipeline and is then sent to the user who sent the message.</source>
            <target state="new">Since <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s are executed within a pipeline, an error occurs within the pipeline and is then sent to the user who sent the message.</target>
          </trans-unit>
        </group>
        <group id="103">
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Output default value Null<ept id="1">&lt;/legacyBold&gt;</ept>: A null string value is returned as the output.</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Output default value Null<ept id="1">&lt;/legacyBold&gt;</ept>: A null string value is returned as the output.</target>
          </trans-unit>
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>A null string behaves as an empty string behaves <bpt id="1">&lt;legacyItalic&gt;</bpt>except<ept id="1">&lt;/legacyItalic&gt;</ept> when sorting a List.</source>
            <target state="new">A null string behaves as an empty string behaves <bpt id="1">&lt;legacyItalic&gt;</bpt>except<ept id="1">&lt;/legacyItalic&gt;</ept> when sorting a List.</target>
          </trans-unit>
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source>When sorting a List, null strings are considered less than empty strings.</source>
            <target state="new">When sorting a List, null strings are considered less than empty strings.</target>
          </trans-unit>
        </group>
        <group id="104">
          <trans-unit id="130" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Null/Empty Data Handling<ept id="1">&lt;/ui&gt;</ept> tab</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Null/Empty Data Handling<ept id="1">&lt;/ui&gt;</ept> tab</target>
          </trans-unit>
        </group>
        <group id="105">
          <trans-unit id="131" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>Null/Empty Data Handling<ept id="1">&lt;/ui&gt;</ept> tab, there are three options:</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>Null/Empty Data Handling<ept id="1">&lt;/ui&gt;</ept> tab, there are three options:</target>
          </trans-unit>
        </group>
        <group id="106">
          <trans-unit id="132" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in cumulative operations<ept id="1">&lt;/ui&gt;</ept>: By default, this is not checked.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in cumulative operations<ept id="1">&lt;/ui&gt;</ept>: By default, this is not checked.</target>
          </trans-unit>
          <trans-unit id="133" translate="yes" xml:space="preserve">
            <source>When not checked, no empty nodes are included in the iteration.</source>
            <target state="new">When not checked, no empty nodes are included in the iteration.</target>
          </trans-unit>
          <trans-unit id="134" translate="yes" xml:space="preserve">
            <source>When checked, all nodes, including empty nodes, are included in the iteration.</source>
            <target state="new">When checked, all nodes, including empty nodes, are included in the iteration.</target>
          </trans-unit>
        </group>
        <group id="107">
          <trans-unit id="135" translate="yes" xml:space="preserve">
            <source>EXAMPLE: There is a document with 10 &lt;record&gt; nodes.</source>
            <target state="new">EXAMPLE: There is a document with 10 &lt;record&gt; nodes.</target>
          </trans-unit>
          <trans-unit id="136" translate="yes" xml:space="preserve">
            <source>Three of these &lt;record&gt; nodes are empty.</source>
            <target state="new">Three of these &lt;record&gt; nodes are empty.</target>
          </trans-unit>
          <trans-unit id="137" translate="yes" xml:space="preserve">
            <source>When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is not checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> returns a value of seven.</source>
            <target state="new">When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is not checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> returns a value of seven.</target>
          </trans-unit>
          <trans-unit id="138" translate="yes" xml:space="preserve">
            <source>When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> returns a value of 10.</source>
            <target state="new">When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> returns a value of 10.</target>
          </trans-unit>
        </group>
        <group id="108">
          <trans-unit id="139" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept>: By default, this is not checked.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept>: By default, this is not checked.</target>
          </trans-unit>
          <trans-unit id="140" translate="yes" xml:space="preserve">
            <source>When not checked, no empty nodes are included in the iteration.</source>
            <target state="new">When not checked, no empty nodes are included in the iteration.</target>
          </trans-unit>
          <trans-unit id="141" translate="yes" xml:space="preserve">
            <source>When checked, all nodes, including empty nodes, are included in the iteration.</source>
            <target state="new">When checked, all nodes, including empty nodes, are included in the iteration.</target>
          </trans-unit>
        </group>
        <group id="109">
          <trans-unit id="142" translate="yes" xml:space="preserve">
            <source>EXAMPLE: there is a document with 10 &lt;record&gt; nodes.</source>
            <target state="new">EXAMPLE: there is a document with 10 &lt;record&gt; nodes.</target>
          </trans-unit>
          <trans-unit id="143" translate="yes" xml:space="preserve">
            <source>Three of these &lt;record&gt; nodes are empty.</source>
            <target state="new">Three of these &lt;record&gt; nodes are empty.</target>
          </trans-unit>
          <trans-unit id="144" translate="yes" xml:space="preserve">
            <source>When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is not checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates seven times for the non-empty nodes.</source>
            <target state="new">When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is not checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates seven times for the non-empty nodes.</target>
          </trans-unit>
          <trans-unit id="145" translate="yes" xml:space="preserve">
            <source>As a result, seven &lt;record&gt; nodes are generated in the Target.</source>
            <target state="new">As a result, seven &lt;record&gt; nodes are generated in the Target.</target>
          </trans-unit>
          <trans-unit id="146" translate="yes" xml:space="preserve">
            <source>When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates 10 times for all nodes, including the empty nodes.</source>
            <target state="new">When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates 10 times for all nodes, including the empty nodes.</target>
          </trans-unit>
          <trans-unit id="147" translate="yes" xml:space="preserve">
            <source>As a result, 10 &lt;record&gt; nodes are generated in the Target.</source>
            <target state="new">As a result, 10 &lt;record&gt; nodes are generated in the Target.</target>
          </trans-unit>
        </group>
        <group id="110">
          <trans-unit id="148" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Target Node Generation<ept id="1">&lt;/ui&gt;</ept>: If empty nodes are configured to be considered, you choose to generate an empty node in the output or to not generate an empty node in the output.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Target Node Generation<ept id="1">&lt;/ui&gt;</ept>: If empty nodes are configured to be considered, you choose to generate an empty node in the output or to not generate an empty node in the output.</target>
          </trans-unit>
          <trans-unit id="149" translate="yes" xml:space="preserve">
            <source>Specifically:</source>
            <target state="new">Specifically:</target>
          </trans-unit>
        </group>
        <group id="111">
          <trans-unit id="150" translate="yes" xml:space="preserve">
            <source>Do not generate empty nodes: Default option.</source>
            <target state="new">Do not generate empty nodes: Default option.</target>
          </trans-unit>
        </group>
        <group id="112">
          <trans-unit id="151" translate="yes" xml:space="preserve">
            <source>Generate empty nodes</source>
            <target state="new">Generate empty nodes</target>
          </trans-unit>
        </group>
        <group id="113">
          <trans-unit id="152" translate="yes" xml:space="preserve">
            <source>EXAMPLE: There is a document with 10 &lt;record&gt; nodes.</source>
            <target state="new">EXAMPLE: There is a document with 10 &lt;record&gt; nodes.</target>
          </trans-unit>
          <trans-unit id="153" translate="yes" xml:space="preserve">
            <source>Three of these &lt;record&gt; nodes are empty.</source>
            <target state="new">Three of these &lt;record&gt; nodes are empty.</target>
          </trans-unit>
          <trans-unit id="154" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in cumulative operations<ept id="1">&lt;/ui&gt;</ept> or <bpt id="2">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="2">&lt;/ui&gt;</ept> are not checked, the <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates seven times for the non-empty nodes.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in cumulative operations<ept id="1">&lt;/ui&gt;</ept> or <bpt id="2">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="2">&lt;/ui&gt;</ept> are not checked, the <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates seven times for the non-empty nodes.</target>
          </trans-unit>
          <trans-unit id="155" translate="yes" xml:space="preserve">
            <source>As a result, seven &lt;record&gt; nodes are generated in the Target.</source>
            <target state="new">As a result, seven &lt;record&gt; nodes are generated in the Target.</target>
          </trans-unit>
          <trans-unit id="156" translate="yes" xml:space="preserve">
            <source>When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates 10 times for all nodes, including the empty nodes.</source>
            <target state="new">When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates 10 times for all nodes, including the empty nodes.</target>
          </trans-unit>
          <trans-unit id="157" translate="yes" xml:space="preserve">
            <source>As a result, 10 &lt;record&gt; nodes are generated in the Target.</source>
            <target state="new">As a result, 10 &lt;record&gt; nodes are generated in the Target.</target>
          </trans-unit>
        </group>
        <group id="114">
          <trans-unit id="158" translate="yes" xml:space="preserve">
            <source>Additional <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s</source>
            <target state="new">Additional <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>