<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-CN" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAAdyjsOwjAMANCr5ACxFKcmH1YWJiYu4NixqFRaqQSp4vQg5vfMpt4oCvROBIQWoIXSQAJyqtWQuXqXJ04mv5A0MJBmhSZMIFY4NhWtnL1T7EpUFDBPGehkDWoxhaBYg2AyzuYdevd5wOXm3bHMZv0Y533bxh+id9f3k9f7zutr4TFv6xfTxpKhoQAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="content">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Begins an asynchronous read operation.</source>
            <target state="new">Begins an asynchronous read operation.</target>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</source>
            <target state="new">When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</source>
            <target state="new">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>The maximum number of bytes to be read.</source>
            <target state="new">The maximum number of bytes to be read.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>An optional asynchronous callback, to be called when the read is complete.</source>
            <target state="new">An optional asynchronous callback, to be called when the read is complete.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>A user-provided object that distinguishes this particular asynchronous read request from other requests.</source>
            <target state="new">A user-provided object that distinguishes this particular asynchronous read request from other requests.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>An IAsyncResult that represents the asynchronous read, which could still be pending.</source>
            <target state="new">An IAsyncResult that represents the asynchronous read, which could still be pending.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>