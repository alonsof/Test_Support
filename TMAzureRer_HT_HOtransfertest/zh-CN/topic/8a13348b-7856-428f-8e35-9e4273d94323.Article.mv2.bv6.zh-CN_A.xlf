<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="zh-CN" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANy0sKwkAMANCr5AAJdCaZn1s3rlx5gUybYKG2UCsUT69v/9zZusSRzERIgg/Uh9ppHILm1jyoNgSpljVZphbHQJJkot7VqA6FtZh4mipC1cAs/1xqyiSxOlXjRM0kFp6acGSEgPB90vWOcC6zu53HZd+2AyEiZITb56XrY9f1vegxb+sPhMdP26EAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Advanced policies</source>
            <target state="new">Advanced policies</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>API Management advanced policies</source>
            <target state="new">API Management advanced policies</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>This topic provides a reference for the following API Management policies.</source>
            <target state="new">This topic provides a reference for the following API Management policies.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>For information on adding and configuring policies, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Policies in API Management<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkID=398186&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">For information on adding and configuring policies, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Policies in API Management<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkID=398186&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Advanced policies</source>
            <target state="new">Advanced policies</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;link xlink:href="8a13348b-7856-428f-8e35-9e4273d94323#choose" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Control flow&lt;/link&gt;</ph> - Conditionally applies policy statements based on the results of the evaluation of Boolean <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>expressions<ept id="2">&lt;/legacyLink&gt;</ept>.</source>
            <target state="new"><ph id="1">&lt;link xlink:href="8a13348b-7856-428f-8e35-9e4273d94323#choose" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Control flow&lt;/link&gt;</ph> - Conditionally applies policy statements based on the results of the evaluation of Boolean <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>expressions<ept id="2">&lt;/legacyLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;link xlink:href="8a13348b-7856-428f-8e35-9e4273d94323#set-variable" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set context variable&lt;/link&gt;</ph> - Persist a value in a named <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#ContextVariables" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>context<ept id="2">&lt;/legacyLink&gt;</ept> variable for later access.</source>
            <target state="new"><ph id="1">&lt;link xlink:href="8a13348b-7856-428f-8e35-9e4273d94323#set-variable" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set context variable&lt;/link&gt;</ph> - Persist a value in a named <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#ContextVariables" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>context<ept id="2">&lt;/legacyLink&gt;</ept> variable for later access.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Control flow</source>
            <target state="new">Control flow</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;choose&lt;/codeInline&gt;</ph> policy applies enclosed policy statements based on the outcome of evaluation of Boolean expressions, similar to an if-then-else or a switch construct in a programming language.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;choose&lt;/codeInline&gt;</ph> policy applies enclosed policy statements based on the outcome of evaluation of Boolean expressions, similar to an if-then-else or a switch construct in a programming language.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Policy statement</source>
            <target state="new">Policy statement</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>The control flow policy must contain at least one <ph id="1">&lt;codeInline&gt;%%amp;lt;when/%%amp;gt;&lt;/codeInline&gt;</ph> element.</source>
            <target state="new">The control flow policy must contain at least one <ph id="1">&lt;codeInline&gt;%%amp;lt;when/%%amp;gt;&lt;/codeInline&gt;</ph> element.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;%%amp;lt;otherwise/%%amp;gt;&lt;/codeInline&gt;</ph> element is optional.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;%%amp;lt;otherwise/%%amp;gt;&lt;/codeInline&gt;</ph> element is optional.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Conditions in <ph id="1">&lt;codeInline&gt;%%amp;lt;when/%%amp;gt;&lt;/codeInline&gt;</ph> elements are evaluated in order of their appearance within the policy.</source>
            <target state="new">Conditions in <ph id="1">&lt;codeInline&gt;%%amp;lt;when/%%amp;gt;&lt;/codeInline&gt;</ph> elements are evaluated in order of their appearance within the policy.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Policy statement(s) enclosed within the first <ph id="1">&lt;codeInline&gt;%%amp;lt;when/%%amp;gt;&lt;/codeInline&gt;</ph> element with condition attribute equals <ph id="2">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> will be applied.</source>
            <target state="new">Policy statement(s) enclosed within the first <ph id="1">&lt;codeInline&gt;%%amp;lt;when/%%amp;gt;&lt;/codeInline&gt;</ph> element with condition attribute equals <ph id="2">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph> will be applied.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Policies enclosed within the <ph id="1">&lt;codeInline&gt;%%amp;lt;otherwise/%%amp;gt;&lt;/codeInline&gt;</ph> element, if present, will be applied if all of the <ph id="2">&lt;codeInline&gt;%%amp;lt;when/%%amp;gt;&lt;/codeInline&gt;</ph> element condition attributes are <ph id="3">&lt;codeInline&gt;false&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Policies enclosed within the <ph id="1">&lt;codeInline&gt;%%amp;lt;otherwise/%%amp;gt;&lt;/codeInline&gt;</ph> element, if present, will be applied if all of the <ph id="2">&lt;codeInline&gt;%%amp;lt;when/%%amp;gt;&lt;/codeInline&gt;</ph> element condition attributes are <ph id="3">&lt;codeInline&gt;false&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Examples</source>
            <target state="new">Examples</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The following example demonstrates a <bpt id="1">&lt;legacyLink xlink:href="8a13348b-7856-428f-8e35-9e4273d94323#set-variable" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>set-variable<ept id="1">&lt;/legacyLink&gt;</ept> policy and two control flow policies.</source>
            <target state="new">The following example demonstrates a <bpt id="1">&lt;legacyLink xlink:href="8a13348b-7856-428f-8e35-9e4273d94323#set-variable" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>set-variable<ept id="1">&lt;/legacyLink&gt;</ept> policy and two control flow policies.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>The set variable policy is in the inbound section and creates an <ph id="1">&lt;codeInline&gt;isMobile&lt;/codeInline&gt;</ph> Boolean <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#ContextVariables" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>context<ept id="2">&lt;/legacyLink&gt;</ept> variable that is set to true if the <ph id="3">&lt;codeInline&gt;User-Agent&lt;/codeInline&gt;</ph> request header contains the text <ph id="4">&lt;codeInline&gt;iPad&lt;/codeInline&gt;</ph> or <ph id="5">&lt;codeInline&gt;iPhone&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The set variable policy is in the inbound section and creates an <ph id="1">&lt;codeInline&gt;isMobile&lt;/codeInline&gt;</ph> Boolean <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#ContextVariables" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>context<ept id="2">&lt;/legacyLink&gt;</ept> variable that is set to true if the <ph id="3">&lt;codeInline&gt;User-Agent&lt;/codeInline&gt;</ph> request header contains the text <ph id="4">&lt;codeInline&gt;iPad&lt;/codeInline&gt;</ph> or <ph id="5">&lt;codeInline&gt;iPhone&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>The first control flow policy is also in the inbound section, and conditionally applies one of two <ph id="1">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#SetQueryStringParameter" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set query string parameter&lt;/link&gt;</ph> policies depending on the value of the <ph id="2">&lt;codeInline&gt;isMobile&lt;/codeInline&gt;</ph> context variable.</source>
            <target state="new">The first control flow policy is also in the inbound section, and conditionally applies one of two <ph id="1">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#SetQueryStringParameter" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Set query string parameter&lt;/link&gt;</ph> policies depending on the value of the <ph id="2">&lt;codeInline&gt;isMobile&lt;/codeInline&gt;</ph> context variable.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>The second control flow policy is in the outbound section and conditionally applies the <ph id="1">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#ConvertXMLtoJSON" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Convert XML to JSON&lt;/link&gt;</ph> policy when <ph id="2">&lt;codeInline&gt;isMobile&lt;/codeInline&gt;</ph> is set to <ph id="3">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The second control flow policy is in the outbound section and conditionally applies the <ph id="1">&lt;link xlink:href="7406a8ce-5f9c-4fae-9b0f-e574befb2ee9#ConvertXMLtoJSON" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Convert XML to JSON&lt;/link&gt;</ph> policy when <ph id="2">&lt;codeInline&gt;isMobile&lt;/codeInline&gt;</ph> is set to <ph id="3">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>This example shows how to perform content filtering by removing data elements from the response received from the backend service when using the <ph id="1">&lt;codeInline&gt;Starter&lt;/codeInline&gt;</ph> product.</source>
            <target state="new">This example shows how to perform content filtering by removing data elements from the response received from the backend service when using the <ph id="1">&lt;codeInline&gt;Starter&lt;/codeInline&gt;</ph> product.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>For a demonstration of configuring and using this policy, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Cloud Cover Episode 177: More API Management Features with Vlad Vinogradsky<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://azure.microsoft.com/documentation/videos/episode-177-more-api-management-features-with-vlad-vinogradsky/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and fast-forward to 34:30.</source>
            <target state="new">For a demonstration of configuring and using this policy, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Cloud Cover Episode 177: More API Management Features with Vlad Vinogradsky<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://azure.microsoft.com/documentation/videos/episode-177-more-api-management-features-with-vlad-vinogradsky/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and fast-forward to 34:30.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Start  at 31:50 to see an overview of <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>The Dark Sky Forecast API<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://developer.forecast.io/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> used for this demo.</source>
            <target state="new">Start  at 31:50 to see an overview of <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>The Dark Sky Forecast API<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://developer.forecast.io/&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> used for this demo.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Elements</source>
            <target state="new">Elements</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Element</source>
            <target state="new">Element</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>choose</source>
            <target state="new">choose</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Root element.</source>
            <target state="new">Root element.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>when</source>
            <target state="new">when</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>The condition to use for the <ph id="1">&lt;codeInline&gt;if&lt;/codeInline&gt;</ph> or <ph id="2">&lt;codeInline&gt;ifelse&lt;/codeInline&gt;</ph> parts of the <ph id="3">&lt;codeInline&gt;choose&lt;/codeInline&gt;</ph> policy.</source>
            <target state="new">The condition to use for the <ph id="1">&lt;codeInline&gt;if&lt;/codeInline&gt;</ph> or <ph id="2">&lt;codeInline&gt;ifelse&lt;/codeInline&gt;</ph> parts of the <ph id="3">&lt;codeInline&gt;choose&lt;/codeInline&gt;</ph> policy.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>If the <ph id="1">&lt;codeInline&gt;choose&lt;/codeInline&gt;</ph> policy has multiple <ph id="2">&lt;codeInline&gt;when&lt;/codeInline&gt;</ph> sections, they are evaluated sequentially.</source>
            <target state="new">If the <ph id="1">&lt;codeInline&gt;choose&lt;/codeInline&gt;</ph> policy has multiple <ph id="2">&lt;codeInline&gt;when&lt;/codeInline&gt;</ph> sections, they are evaluated sequentially.</target>
          </trans-unit>
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Once the <ph id="1">&lt;codeInline&gt;condition&lt;/codeInline&gt;</ph> of a when element evaluates to <ph id="2">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph>, no further <ph id="3">&lt;codeInline&gt;when&lt;/codeInline&gt;</ph> conditions are evaluated.</source>
            <target state="new">Once the <ph id="1">&lt;codeInline&gt;condition&lt;/codeInline&gt;</ph> of a when element evaluates to <ph id="2">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph>, no further <ph id="3">&lt;codeInline&gt;when&lt;/codeInline&gt;</ph> conditions are evaluated.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>otherwise</source>
            <target state="new">otherwise</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Contains the policy snippet to be used if none of the <ph id="1">&lt;codeInline&gt;when&lt;/codeInline&gt;</ph> conditions evaluate to <ph id="2">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Contains the policy snippet to be used if none of the <ph id="1">&lt;codeInline&gt;when&lt;/codeInline&gt;</ph> conditions evaluate to <ph id="2">&lt;codeInline&gt;true&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Attributes</source>
            <target state="new">Attributes</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Attribute</source>
            <target state="new">Attribute</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>condition="Boolean expression | Boolean constant"</source>
            <target state="new">condition="Boolean expression | Boolean constant"</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>The Boolean expression or constant to evaluated when the containing <ph id="1">&lt;codeInline&gt;when&lt;/codeInline&gt;</ph> policy statement is evaluated.</source>
            <target state="new">The Boolean expression or constant to evaluated when the containing <ph id="1">&lt;codeInline&gt;when&lt;/codeInline&gt;</ph> policy statement is evaluated.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Usage</source>
            <target state="new">Usage</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>This policy can be used in the following policy <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>sections<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#sections&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>scopes<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#scopes&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">This policy can be used in the following policy <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>sections<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#sections&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>scopes<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#scopes&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Policy sections:<ept id="1">&lt;/legacyBold&gt;</ept> inbound, outbound</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Policy sections:<ept id="1">&lt;/legacyBold&gt;</ept> inbound, outbound</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Policy scopes:<ept id="1">&lt;/legacyBold&gt;</ept> all scopes</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Policy scopes:<ept id="1">&lt;/legacyBold&gt;</ept> all scopes</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Set variable</source>
            <target state="new">Set variable</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;set-variable&lt;/codeInline&gt;</ph> policy declares a <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#ContextVariables" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>context<ept id="2">&lt;/legacyLink&gt;</ept> variable and assigns it a value specified via an <bpt id="3">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>expression<ept id="3">&lt;/legacyLink&gt;</ept> or a string literal.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;set-variable&lt;/codeInline&gt;</ph> policy declares a <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#ContextVariables" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>context<ept id="2">&lt;/legacyLink&gt;</ept> variable and assigns it a value specified via an <bpt id="3">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>expression<ept id="3">&lt;/legacyLink&gt;</ept> or a string literal.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>if the expression contains a literal it will be converted to a string and the type of the value will be <ph id="1">&lt;codeInline&gt;System.String&lt;/codeInline&gt;</ph>.</source>
            <target state="new">if the expression contains a literal it will be converted to a string and the type of the value will be <ph id="1">&lt;codeInline&gt;System.String&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>Policy statement</source>
            <target state="new">Policy statement</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>The following example demonstrates a set variable policy in the inbound section.</source>
            <target state="new">The following example demonstrates a set variable policy in the inbound section.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>This set variable policy creates an <ph id="1">&lt;codeInline&gt;isMobile&lt;/codeInline&gt;</ph> Boolean <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#ContextVariables" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>context<ept id="2">&lt;/legacyLink&gt;</ept> variable that is set to true if the <ph id="3">&lt;codeInline&gt;User-Agent&lt;/codeInline&gt;</ph> request header contains the text <ph id="4">&lt;codeInline&gt;iPad&lt;/codeInline&gt;</ph> or <ph id="5">&lt;codeInline&gt;iPhone&lt;/codeInline&gt;</ph>.</source>
            <target state="new">This set variable policy creates an <ph id="1">&lt;codeInline&gt;isMobile&lt;/codeInline&gt;</ph> Boolean <bpt id="2">&lt;legacyLink xlink:href="ea160028-fc04-4782-aa26-4b8329df3448#ContextVariables" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>context<ept id="2">&lt;/legacyLink&gt;</ept> variable that is set to true if the <ph id="3">&lt;codeInline&gt;User-Agent&lt;/codeInline&gt;</ph> request header contains the text <ph id="4">&lt;codeInline&gt;iPad&lt;/codeInline&gt;</ph> or <ph id="5">&lt;codeInline&gt;iPhone&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>Elements</source>
            <target state="new">Elements</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>Element</source>
            <target state="new">Element</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>set-variable</source>
            <target state="new">set-variable</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>Root element.</source>
            <target state="new">Root element.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Attributes</source>
            <target state="new">Attributes</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>Attribute</source>
            <target state="new">Attribute</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>name</source>
            <target state="new">name</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>The name of the variable.</source>
            <target state="new">The name of the variable.</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>value</source>
            <target state="new">value</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>The value of the variable.</source>
            <target state="new">The value of the variable.</target>
          </trans-unit>
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>This can be an expression or a literal value.</source>
            <target state="new">This can be an expression or a literal value.</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>Usage</source>
            <target state="new">Usage</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>This policy can be used in the following policy <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>sections<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#sections&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>scopes<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#scopes&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">This policy can be used in the following policy <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>sections<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#sections&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>scopes<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#scopes&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Policy sections:<ept id="1">&lt;/legacyBold&gt;</ept> inbound, outbound</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Policy sections:<ept id="1">&lt;/legacyBold&gt;</ept> inbound, outbound</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Policy scopes:<ept id="1">&lt;/legacyBold&gt;</ept> all scopes</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Policy scopes:<ept id="1">&lt;/legacyBold&gt;</ept> all scopes</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>Allowed types</source>
            <target state="new">Allowed types</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>Expressions used in the <ph id="1">&lt;codeInline&gt;set-variable&lt;/codeInline&gt;</ph> policy must return one of the following basic types.</source>
            <target state="new">Expressions used in the <ph id="1">&lt;codeInline&gt;set-variable&lt;/codeInline&gt;</ph> policy must return one of the following basic types.</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>System.Boolean</source>
            <target state="new">System.Boolean</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>System.SByte</source>
            <target state="new">System.SByte</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>System.Byte</source>
            <target state="new">System.Byte</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>System.UInt16</source>
            <target state="new">System.UInt16</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>System.UInt32</source>
            <target state="new">System.UInt32</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>System.UInt64</source>
            <target state="new">System.UInt64</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>System.Int16</source>
            <target state="new">System.Int16</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>System.Int32</source>
            <target state="new">System.Int32</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>System.Int64</source>
            <target state="new">System.Int64</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>System.Decimal</source>
            <target state="new">System.Decimal</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>System.Single</source>
            <target state="new">System.Single</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>System.Double</source>
            <target state="new">System.Double</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>System.Guid</source>
            <target state="new">System.Guid</target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>System.String</source>
            <target state="new">System.String</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>System.Char</source>
            <target state="new">System.Char</target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>System.DateTime</source>
            <target state="new">System.DateTime</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>System.TimeSpan</source>
            <target state="new">System.TimeSpan</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>System.Byte?</source>
            <target state="new">System.Byte?</target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>System.UInt16?</source>
            <target state="new">System.UInt16?</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>System.UInt32?</source>
            <target state="new">System.UInt32?</target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>System.UInt64?</source>
            <target state="new">System.UInt64?</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>System.Int16?</source>
            <target state="new">System.Int16?</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>System.Int32?</source>
            <target state="new">System.Int32?</target>
          </trans-unit>
        </group>
        <group id="94">
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>System.Int64?</source>
            <target state="new">System.Int64?</target>
          </trans-unit>
        </group>
        <group id="95">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>System.Decimal?</source>
            <target state="new">System.Decimal?</target>
          </trans-unit>
        </group>
        <group id="96">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>System.Single?</source>
            <target state="new">System.Single?</target>
          </trans-unit>
        </group>
        <group id="97">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>System.Double?</source>
            <target state="new">System.Double?</target>
          </trans-unit>
        </group>
        <group id="98">
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>System.Guid?</source>
            <target state="new">System.Guid?</target>
          </trans-unit>
        </group>
        <group id="99">
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>System.String?</source>
            <target state="new">System.String?</target>
          </trans-unit>
        </group>
        <group id="100">
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>System.Char?</source>
            <target state="new">System.Char?</target>
          </trans-unit>
        </group>
        <group id="101">
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>System.DateTime?</source>
            <target state="new">System.DateTime?</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>