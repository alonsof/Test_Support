<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ja-JP" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAAVzFEKwjAMANCr9AANNG3aNZ5A/PLDC6RdApO5wayw46v/j2eWtFHsoEoEhBaghdqgB5TCbCjC3nXDwqUnaLELUK0KNWaB0GcqFjHnqXiHmNJEUqGGKQIxE/DMDLMmRmHUovJT3j0FbnfvznUx03Ncjn0f3sX/4N3185Ltccj2XmUs+/YFNvJTLKIAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>LoadBalancerProbe Schema</source>
            <target state="new">LoadBalancerProbe Schema</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>The load balancer probe is a customer defined health probe of UDP endpoints and endpoints in role instances.</source>
            <target state="new">The load balancer probe is a customer defined health probe of UDP endpoints and endpoints in role instances.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbe&lt;/unmanagedCodeEntityReference&gt;</ph> is not a standalone element; it is combined with the web role or worker role in a service definition file.</source>
            <target state="new">The <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbe&lt;/unmanagedCodeEntityReference&gt;</ph> is not a standalone element; it is combined with the web role or worker role in a service definition file.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>A <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbe&lt;/unmanagedCodeEntityReference&gt;</ph> can be used by more than one role.</source>
            <target state="new">A <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbe&lt;/unmanagedCodeEntityReference&gt;</ph> can be used by more than one role.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The default extension for the service definition file is .csdef.</source>
            <target state="new">The default extension for the service definition file is .csdef.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The function of a load balancer probe</source>
            <target state="new">The function of a load balancer probe</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The Azure Load Balancer is responsible for routing incoming traffic to your role instances.</source>
            <target state="new">The Azure Load Balancer is responsible for routing incoming traffic to your role instances.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>The load balancer determines which instances can receive traffic by regularly probing each instance in order to determine the health of that instance.</source>
            <target state="new">The load balancer determines which instances can receive traffic by regularly probing each instance in order to determine the health of that instance.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>The load balancer probes every instance multiple times per minute.</source>
            <target state="new">The load balancer probes every instance multiple times per minute.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>There are two different options for providing instance health to the load balancer – the default load balancer probe, or a custom load balancer probe which is implemented by defining the LoadBalancerProbe in the .csdef file.</source>
            <target state="new">There are two different options for providing instance health to the load balancer – the default load balancer probe, or a custom load balancer probe which is implemented by defining the LoadBalancerProbe in the .csdef file.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>The default load balancer probe utilizes the Guest Agent inside the virtual machine listens and responds with an HTTP 200 OK response only when the instance is in the Ready state (ie.</source>
            <target state="new">The default load balancer probe utilizes the Guest Agent inside the virtual machine listens and responds with an HTTP 200 OK response only when the instance is in the Ready state (ie.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The instance is not in the Busy, Recycling, Stopping, etc states).</source>
            <target state="new">The instance is not in the Busy, Recycling, Stopping, etc states).</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>If the Guest Agent fails to respond with HTTP 200 OK, the Azure Load Balancer marks the instance as unresponsive and stops sending traffic to that instance.</source>
            <target state="new">If the Guest Agent fails to respond with HTTP 200 OK, the Azure Load Balancer marks the instance as unresponsive and stops sending traffic to that instance.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>The Azure Load Balancer will continue to ping the instance, and if the Guest Agent responds with an HTTP 200, the Azure Load Balancer will send traffic to that instance again.</source>
            <target state="new">The Azure Load Balancer will continue to ping the instance, and if the Guest Agent responds with an HTTP 200, the Azure Load Balancer will send traffic to that instance again.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>When using a web role your website code typically runs in w3wp.exe which is not monitored by the Azure fabric or guest agent, which means failures in w3wp.exe (eg.</source>
            <target state="new">When using a web role your website code typically runs in w3wp.exe which is not monitored by the Azure fabric or guest agent, which means failures in w3wp.exe (eg.</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>HTTP 500 responses) will not be reported to the guest agent and the load balancer will not know to take that instance out of rotation.</source>
            <target state="new">HTTP 500 responses) will not be reported to the guest agent and the load balancer will not know to take that instance out of rotation.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>The custom load balancer probe overrides the default guest agent probe and allows you to create your own custom logic to determine the health of the role instance.</source>
            <target state="new">The custom load balancer probe overrides the default guest agent probe and allows you to create your own custom logic to determine the health of the role instance.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The load balancer will regularly probe your endpoint (every 15 seconds, by default) and the instance will be considered in rotation if it responds with a TCP ACK or HTTP 200 within the timeout period (default of 31 seconds).</source>
            <target state="new">The load balancer will regularly probe your endpoint (every 15 seconds, by default) and the instance will be considered in rotation if it responds with a TCP ACK or HTTP 200 within the timeout period (default of 31 seconds).</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>This can be useful to implement your own logic to remove instances from load balancer rotation, for example returning a non-200 status if the instance is above 90% CPU.</source>
            <target state="new">This can be useful to implement your own logic to remove instances from load balancer rotation, for example returning a non-200 status if the instance is above 90% CPU.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>For web roles using w3wp.exe this also means you get automatic monitoring of your website since failures in your website code will return a non-200 status to the load balancer probe.</source>
            <target state="new">For web roles using w3wp.exe this also means you get automatic monitoring of your website since failures in your website code will return a non-200 status to the load balancer probe.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>If you do not define a LoadBalancerProbe in the .csdef file then the default load balancer behavior as described above will be used.</source>
            <target state="new">If you do not define a LoadBalancerProbe in the .csdef file then the default load balancer behavior as described above will be used.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>If you use a custom load balancer probe you will need to ensure that your logic takes into consideration the RoleEnvironment.OnStop method.</source>
            <target state="new">If you use a custom load balancer probe you will need to ensure that your logic takes into consideration the RoleEnvironment.OnStop method.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>When using the default load balancer probe the instance will be taken out of rotation prior to OnStop being called, but a custom load balancer probe can continue to return a 200 OK during the OnStop event.</source>
            <target state="new">When using the default load balancer probe the instance will be taken out of rotation prior to OnStop being called, but a custom load balancer probe can continue to return a 200 OK during the OnStop event.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>If you are using the OnStop event to clean up cache, stop service, or otherwise making changes that can affect the runtime behavior of your service then you need to ensure that your custom load balancer probe logic will remove the instance from rotation.</source>
            <target state="new">If you are using the OnStop event to clean up cache, stop service, or otherwise making changes that can affect the runtime behavior of your service then you need to ensure that your custom load balancer probe logic will remove the instance from rotation.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Basic service definition schema for a load balancer probe</source>
            <target state="new">Basic service definition schema for a load balancer probe</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>The basic format of a service definition file containing a load balancer probe is as follows.</source>
            <target state="new">The basic format of a service definition file containing a load balancer probe is as follows.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Schema elements</source>
            <target state="new">Schema elements</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbes&lt;/unmanagedCodeEntityReference&gt;</ph> element of the service definition file includes the following elements:</source>
            <target state="new">The <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbes&lt;/unmanagedCodeEntityReference&gt;</ph> element of the service definition file includes the following elements:</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>LoadBalancerProbes Element</source>
            <target state="new">LoadBalancerProbes Element</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbes&lt;/unmanagedCodeEntityReference&gt;</ph> element describes the collection of load balancer probes.</source>
            <target state="new">The <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbes&lt;/unmanagedCodeEntityReference&gt;</ph> element describes the collection of load balancer probes.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>This element is the parent element of the <ph id="1">&lt;link xlink:href="113374a8-8072-4994-9d99-de391a91e6ea#LoadBalancerProbe" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;LoadBalancerProbe Element&lt;/link&gt;</ph>.</source>
            <target state="new">This element is the parent element of the <ph id="1">&lt;link xlink:href="113374a8-8072-4994-9d99-de391a91e6ea#LoadBalancerProbe" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;LoadBalancerProbe Element&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>LoadBalancerProbe Element</source>
            <target state="new">LoadBalancerProbe Element</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbe&lt;/unmanagedCodeEntityReference&gt;</ph> element defines the health probe for a model.</source>
            <target state="new">The <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbe&lt;/unmanagedCodeEntityReference&gt;</ph> element defines the health probe for a model.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>You can define multiple load balancer probes.</source>
            <target state="new">You can define multiple load balancer probes.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>The following table describes the attributes of the <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbe&lt;/unmanagedCodeEntityReference&gt;</ph> element:</source>
            <target state="new">The following table describes the attributes of the <ph id="1">&lt;unmanagedCodeEntityReference&gt;LoadBalancerProbe&lt;/unmanagedCodeEntityReference&gt;</ph> element:</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Attribute</source>
            <target state="new">Attribute</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>The name of the load balancer probe.</source>
            <target state="new">The name of the load balancer probe.</target>
          </trans-unit>
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>The name must be unique.</source>
            <target state="new">The name must be unique.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Specifies the protocol of the end point.</source>
            <target state="new">Specifies the protocol of the end point.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Possible values are <ph id="1">&lt;unmanagedCodeEntityReference&gt;http&lt;/unmanagedCodeEntityReference&gt;</ph> or <ph id="2">&lt;unmanagedCodeEntityReference&gt;tcp&lt;/unmanagedCodeEntityReference&gt;</ph>.</source>
            <target state="new">Possible values are <ph id="1">&lt;unmanagedCodeEntityReference&gt;http&lt;/unmanagedCodeEntityReference&gt;</ph> or <ph id="2">&lt;unmanagedCodeEntityReference&gt;tcp&lt;/unmanagedCodeEntityReference&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>If <ph id="1">&lt;unmanagedCodeEntityReference&gt;tcp&lt;/unmanagedCodeEntityReference&gt;</ph> is specified, a received ACK is required for the probe to be successful.</source>
            <target state="new">If <ph id="1">&lt;unmanagedCodeEntityReference&gt;tcp&lt;/unmanagedCodeEntityReference&gt;</ph> is specified, a received ACK is required for the probe to be successful.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>If <ph id="1">&lt;unmanagedCodeEntityReference&gt;http&lt;/unmanagedCodeEntityReference&gt;</ph> is specified, a 200 OK response from the specified URI is required for the probe to be successful.</source>
            <target state="new">If <ph id="1">&lt;unmanagedCodeEntityReference&gt;http&lt;/unmanagedCodeEntityReference&gt;</ph> is specified, a 200 OK response from the specified URI is required for the probe to be successful.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>The URI used for requesting health status from the VM.</source>
            <target state="new">The URI used for requesting health status from the VM.</target>
          </trans-unit>
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;unmanagedCodeEntityReference&gt;path&lt;/unmanagedCodeEntityReference&gt;</ph> is required if <ph id="2">&lt;unmanagedCodeEntityReference&gt;protocol&lt;/unmanagedCodeEntityReference&gt;</ph> is set to <ph id="3">&lt;unmanagedCodeEntityReference&gt;http&lt;/unmanagedCodeEntityReference&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;unmanagedCodeEntityReference&gt;path&lt;/unmanagedCodeEntityReference&gt;</ph> is required if <ph id="2">&lt;unmanagedCodeEntityReference&gt;protocol&lt;/unmanagedCodeEntityReference&gt;</ph> is set to <ph id="3">&lt;unmanagedCodeEntityReference&gt;http&lt;/unmanagedCodeEntityReference&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>Otherwise, it is not allowed.</source>
            <target state="new">Otherwise, it is not allowed.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>There is no default value.</source>
            <target state="new">There is no default value.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>The port for communicating the probe.</source>
            <target state="new">The port for communicating the probe.</target>
          </trans-unit>
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>This is optional for any endpoint, as the same port will then be used for the probe.</source>
            <target state="new">This is optional for any endpoint, as the same port will then be used for the probe.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>You can configure a different port for their probing, as well.</source>
            <target state="new">You can configure a different port for their probing, as well.</target>
          </trans-unit>
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>Possible values range from 1 to 65535, inclusive.</source>
            <target state="new">Possible values range from 1 to 65535, inclusive.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>The default value is set by the endpoint.</source>
            <target state="new">The default value is set by the endpoint.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>The interval, in seconds, for how frequently to probe the endpoint for health status.</source>
            <target state="new">The interval, in seconds, for how frequently to probe the endpoint for health status.</target>
          </trans-unit>
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation.</source>
            <target state="new">Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>The default value is 15, the minimum value is 5.</source>
            <target state="new">The default value is 15, the minimum value is 5.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>The timeout period, in seconds, applied to the probe where no response will result in stopping further traffic from being delivered to the endpoint.</source>
            <target state="new">The timeout period, in seconds, applied to the probe where no response will result in stopping further traffic from being delivered to the endpoint.</target>
          </trans-unit>
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>This value allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure (which are the defaults).</source>
            <target state="new">This value allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure (which are the defaults).</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>The default value is 31, the minimum value is 11.</source>
            <target state="new">The default value is 31, the minimum value is 11.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>