<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ja-JP" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANzM0NwyAMQOFVGABL/BgwnaDqqYcuYDCWUqWJlKZSxi/n9+mpxtEwdBgDEdCrg+aoQXeec63qmas1tQWnRQicTwIYigBJKCCJRqyK3HKyRokTaSuQkkzVkYEzRaBMJKXJHHZrvDVvhsfTmmtdVMd13o59P60Js0Vr7r8Pb6+Dt+/K57Jvf4OJp5OiAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Tutorial: Using BizTalk Service Bridges to Lookup Data from Azure SQL Database</source>
            <target state="new">Tutorial: Using BizTalk Service Bridges to Lookup Data from Azure SQL Database</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>This tutorial provides guidance on how to use the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="1">&lt;/embeddedLabel&gt;</ept> stage within a <ph id="2">&lt;token&gt;af_integration&lt;/token&gt;</ph> bridge to look up data from a <ph id="3">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph>.</source>
            <target state="new">This tutorial provides guidance on how to use the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="1">&lt;/embeddedLabel&gt;</ept> stage within a <ph id="2">&lt;token&gt;af_integration&lt;/token&gt;</ph> bridge to look up data from a <ph id="3">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>To demonstrate how the bridge looks up data from <ph id="1">&lt;token&gt;ssSDS&lt;/token&gt;</ph>, consider a scenario in which a flat-file message is picked from an FTP server, is processed using a <ph id="2">&lt;token&gt;af_integration&lt;/token&gt;</ph> <ph id="3">&lt;token&gt;bridge&lt;/token&gt;</ph>, and the data from the flat file is finally inserted into an on-premises SQL Server.</source>
            <target state="new">To demonstrate how the bridge looks up data from <ph id="1">&lt;token&gt;ssSDS&lt;/token&gt;</ph>, consider a scenario in which a flat-file message is picked from an FTP server, is processed using a <ph id="2">&lt;token&gt;af_integration&lt;/token&gt;</ph> <ph id="3">&lt;token&gt;bridge&lt;/token&gt;</ph>, and the data from the flat file is finally inserted into an on-premises SQL Server.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>In addition to demonstrating how to look up data from <ph id="1">&lt;token&gt;ssSDS&lt;/token&gt;</ph>, this tutorial also provides guidance on the following features::</source>
            <target state="new">In addition to demonstrating how to look up data from <ph id="1">&lt;token&gt;ssSDS&lt;/token&gt;</ph>, this tutorial also provides guidance on the following features::</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Processing flat file messages by using <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph>.</source>
            <target state="new">Processing flat file messages by using <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Flat-file Support In One-Way Bridge<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkID=248909&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Flat-file Support In One-Way Bridge<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkID=248909&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Creating a flat-file schema by using the Flat File Schema wizard.</source>
            <target state="new">Creating a flat-file schema by using the Flat File Schema wizard.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>How to Use the Flat File Schema Wizard<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkId=248911&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>How to Use the Flat File Schema Wizard<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkId=248911&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Using an FTP source to send messages to an <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph>.</source>
            <target state="new">Using an FTP source to send messages to an <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Using FTP Source<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkId=248912&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Using FTP Source<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkId=248912&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Tracking a message as it gets processed through the bridges.</source>
            <target state="new">Tracking a message as it gets processed through the bridges.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Operational Tracking of Messages Processed by the Bridge<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkId=250919&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept></source>
            <target state="new">For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Operational Tracking of Messages Processed by the Bridge<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkId=250919&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept></target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>With the support for processing flat-file messages, you can use a one-way bridge to process XML as well as flat-file messages, using the same bridge endpoint.</source>
            <target state="new">With the support for processing flat-file messages, you can use a one-way bridge to process XML as well as flat-file messages, using the same bridge endpoint.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>However, you would still need to create and add the schema of the flat file message to the <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph>.</source>
            <target state="new">However, you would still need to create and add the schema of the flat file message to the <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Flat File Schema<ept id="1">&lt;/embeddedLabel&gt;</ept> wizard does that for you.</source>
            <target state="new">The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Flat File Schema<ept id="1">&lt;/embeddedLabel&gt;</ept> wizard does that for you.</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>If you already have a flat-file message, you can use the wizard to generate the schema for that flat-file message and also add it to the project.</source>
            <target state="new">If you already have a flat-file message, you can use the wizard to generate the schema for that flat-file message and also add it to the project.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>You can then put a flat file message on an FTP location and the bridge could consume the flat-file message through an FTP source, process it, and then send to the required destination endpoint.</source>
            <target state="new">You can then put a flat file message on an FTP location and the bridge could consume the flat-file message through an FTP source, process it, and then send to the required destination endpoint.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>And finally, you could track the message as it gets processed within each stage of the bridge.</source>
            <target state="new">And finally, you could track the message as it gets processed within each stage of the bridge.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Organizations can tie all these features together into an end-to-end scenario that to meet their business requirements.</source>
            <target state="new">Organizations can tie all these features together into an end-to-end scenario that to meet their business requirements.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Using the following business scenario, this tutorial demonstrates these features and some other features in <ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph>.</source>
            <target state="new">Using the following business scenario, this tutorial demonstrates these features and some other features in <ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Business Scenario</source>
            <target state="new">Business Scenario</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Northwind Traders is a healthcare service provider that handles medical insurance claims for an insurance provider, Humongous Insurance.</source>
            <target state="new">Northwind Traders is a healthcare service provider that handles medical insurance claims for an insurance provider, Humongous Insurance.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Northwind sends insurance claims as flat-file messages to Humongous Insurance.</source>
            <target state="new">Northwind sends insurance claims as flat-file messages to Humongous Insurance.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Humongous Insurance processes these claims and stores them in-house using an on-premises SQL Server database.</source>
            <target state="new">Humongous Insurance processes these claims and stores them in-house using an on-premises SQL Server database.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Humongous Insurance wants to deploy this business process as an application on <ph id="1">&lt;token&gt;azure_1&lt;/token&gt;</ph>.</source>
            <target state="new">Humongous Insurance wants to deploy this business process as an application on <ph id="1">&lt;token&gt;azure_1&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Humongous Insurance decides to use the integration capabilities provided with <ph id="1">&lt;token&gt;af_integration_full&lt;/token&gt;</ph> to deploy this application on the cloud.</source>
            <target state="new">Humongous Insurance decides to use the integration capabilities provided with <ph id="1">&lt;token&gt;af_integration_full&lt;/token&gt;</ph> to deploy this application on the cloud.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Here are the series of steps that Humongous Insurance and Northwind Traders have to perform at their ends to develop, configure, and deploy the application.</source>
            <target state="new">Here are the series of steps that Humongous Insurance and Northwind Traders have to perform at their ends to develop, configure, and deploy the application.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Humongous Insurance creates an <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph> using <ph id="2">&lt;token&gt;af_integration&lt;/token&gt;</ph>.</source>
            <target state="new">Humongous Insurance creates an <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph> using <ph id="2">&lt;token&gt;af_integration&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Within this project, it does the following:</source>
            <target state="new">Within this project, it does the following:</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Uses a sample flat-file instance message that it receives from Northwind Traders (out of band, over e-mail), to create the flat-file message schema.</source>
            <target state="new">Uses a sample flat-file instance message that it receives from Northwind Traders (out of band, over e-mail), to create the flat-file message schema.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Humongous Insurance needs this schema to validate and process flat-file messages that it receives from Northwind.</source>
            <target state="new">Humongous Insurance needs this schema to validate and process flat-file messages that it receives from Northwind.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Adds an FTP source component to the project.</source>
            <target state="new">Adds an FTP source component to the project.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The FTP source represents the FTP server where Northwind Traders drops the flat-file message.</source>
            <target state="new">The FTP source represents the FTP server where Northwind Traders drops the flat-file message.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>Adds a one-way bridge to process the flat-file messages that it receives from Northwind Traders.</source>
            <target state="new">Adds a one-way bridge to process the flat-file messages that it receives from Northwind Traders.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Within the bridge, Humongous Insurance does the following:</source>
            <target state="new">Within the bridge, Humongous Insurance does the following:</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Uses a transform to convert the message received from Northwind to a format that is required to insert the message into a SQL Server database table where Humongous Insurance maintains all the insurance claims.</source>
            <target state="new">Uses a transform to convert the message received from Northwind to a format that is required to insert the message into a SQL Server database table where Humongous Insurance maintains all the insurance claims.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Performs <bpt id="1">&lt;legacyItalic&gt;</bpt>data enrichment<ept id="1">&lt;/legacyItalic&gt;</ept> on the incoming message.</source>
            <target state="new">Performs <bpt id="1">&lt;legacyItalic&gt;</bpt>data enrichment<ept id="1">&lt;/legacyItalic&gt;</ept> on the incoming message.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Through data enrichment, Humongous Insurance enriches the message to include information which was not part of the original message that Northwind Traders sent.</source>
            <target state="new">Through data enrichment, Humongous Insurance enriches the message to include information which was not part of the original message that Northwind Traders sent.</target>
          </trans-unit>
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>For example, in this scenario, the flat-file message from Northwind Traders only includes a <bpt id="1">&lt;legacyItalic&gt;</bpt>claim type<ept id="1">&lt;/legacyItalic&gt;</ept> information.</source>
            <target state="new">For example, in this scenario, the flat-file message from Northwind Traders only includes a <bpt id="1">&lt;legacyItalic&gt;</bpt>claim type<ept id="1">&lt;/legacyItalic&gt;</ept> information.</target>
          </trans-unit>
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>But Humongous Insurance must include the <bpt id="1">&lt;legacyItalic&gt;</bpt>claim type description<ept id="1">&lt;/legacyItalic&gt;</ept> as well in message that is inserted into the on-premise SQL Server database.</source>
            <target state="new">But Humongous Insurance must include the <bpt id="1">&lt;legacyItalic&gt;</bpt>claim type description<ept id="1">&lt;/legacyItalic&gt;</ept> as well in message that is inserted into the on-premise SQL Server database.</target>
          </trans-unit>
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>So, to achieve this data enrichment, Humongous Insurance looks up a <ph id="1">&lt;token&gt;ssSDS&lt;/token&gt;</ph> table (which it maintains to map claim type to claim description) to see which claim type description maps to the claim type in the incoming message and then updates the message that is finally inserted in the on-premises SQL Server database to include the claim type description.</source>
            <target state="new">So, to achieve this data enrichment, Humongous Insurance looks up a <ph id="1">&lt;token&gt;ssSDS&lt;/token&gt;</ph> table (which it maintains to map claim type to claim description) to see which claim type description maps to the claim type in the incoming message and then updates the message that is finally inserted in the on-premises SQL Server database to include the claim type description.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyItalic&gt;</bpt>Promotes<ept id="1">&lt;/legacyItalic&gt;</ept> certain elements in the message as properties that it can use to track the message as the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> processes it.</source>
            <target state="new"><bpt id="1">&lt;legacyItalic&gt;</bpt>Promotes<ept id="1">&lt;/legacyItalic&gt;</ept> certain elements in the message as properties that it can use to track the message as the <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> processes it.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Finally, Humongous adds a <ph id="1">&lt;token&gt;lobconnect&lt;/token&gt;</ph> component to the <ph id="2">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph> that represents the on-premises SQL Server where the data from the message has to be inserted.</source>
            <target state="new">Finally, Humongous adds a <ph id="1">&lt;token&gt;lobconnect&lt;/token&gt;</ph> component to the <ph id="2">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph> that represents the on-premises SQL Server where the data from the message has to be inserted.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Humongous Insurance builds and deploys this solution on <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">Humongous Insurance builds and deploys this solution on <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Once the solution is deployed, Northwind Traders drops a flat-file message for an insurance claim at the specified location on the FTP Server.</source>
            <target state="new">Once the solution is deployed, Northwind Traders drops a flat-file message for an insurance claim at the specified location on the FTP Server.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> consumes the message and inserts into the SQL Server database.</source>
            <target state="new">The <ph id="1">&lt;token&gt;one-way&lt;/token&gt;</ph> consumes the message and inserts into the SQL Server database.</target>
          </trans-unit>
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>The following illustration represents the same scenario.</source>
            <target state="new">The following illustration represents the same scenario.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>How to Use This Article</source>
            <target state="new">How to Use This Article</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>This tutorial is written around a sample, <bpt id="1">&lt;embeddedLabel&gt;</bpt>FlatFile_Bridge.zip<ept id="1">&lt;/embeddedLabel&gt;</ept>, which is available as part of the download from the <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>MSDN Code Gallery<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkID=249449&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">This tutorial is written around a sample, <bpt id="1">&lt;embeddedLabel&gt;</bpt>FlatFile_Bridge.zip<ept id="1">&lt;/embeddedLabel&gt;</ept>, which is available as part of the download from the <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>MSDN Code Gallery<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkID=249449&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>You could either use the sample and go through this tutorial to understand how the sample was built or use this tutorial to create your own application.</source>
            <target state="new">You could either use the sample and go through this tutorial to understand how the sample was built or use this tutorial to create your own application.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>This tutorial is targeted towards the second approach so that you understand how this application was built.</source>
            <target state="new">This tutorial is targeted towards the second approach so that you understand how this application was built.</target>
          </trans-unit>
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Also, as far as possible, the tutorial is consistent with the sample and uses the same names for artifacts (for example, schemas, transforms, and so on) as used in the sample.</source>
            <target state="new">Also, as far as possible, the tutorial is consistent with the sample and uses the same names for artifacts (for example, schemas, transforms, and so on) as used in the sample.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>Even though Microsoft recommends that you follow the tutorial to understand the concepts and procedures, if you wish to use the sample, do the following:</source>
            <target state="new">Even though Microsoft recommends that you follow the tutorial to understand the concepts and procedures, if you wish to use the sample, do the following:</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>Download the <bpt id="1">&lt;embeddedLabel&gt;</bpt>FlatFile_Bridge.zip<ept id="1">&lt;/embeddedLabel&gt;</ept> package, extract the <bpt id="2">&lt;embeddedLabel&gt;</bpt>FlatFile_Bridge<ept id="2">&lt;/embeddedLabel&gt;</ept> sample, and make relevant changes like providing your service namespace, issuer name, issuer key, updating the <ph id="3">&lt;token&gt;lobrelay&lt;/token&gt;</ph>, and FTP components to include your specific server details, and so on.</source>
            <target state="new">Download the <bpt id="1">&lt;embeddedLabel&gt;</bpt>FlatFile_Bridge.zip<ept id="1">&lt;/embeddedLabel&gt;</ept> package, extract the <bpt id="2">&lt;embeddedLabel&gt;</bpt>FlatFile_Bridge<ept id="2">&lt;/embeddedLabel&gt;</ept> sample, and make relevant changes like providing your service namespace, issuer name, issuer key, updating the <ph id="3">&lt;token&gt;lobrelay&lt;/token&gt;</ph>, and FTP components to include your specific server details, and so on.</target>
          </trans-unit>
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>After making required changes, build and deploy the application.</source>
            <target state="new">After making required changes, build and deploy the application.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>Drop a test message at the FTP location configured as part of the solution and verify that the application works as expected.</source>
            <target state="new">Drop a test message at the FTP location configured as part of the solution and verify that the application works as expected.</target>
          </trans-unit>
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>If the message is successfully processed, it is routed to the SQL Server and you can verify that new records are entered in the Claims table.</source>
            <target state="new">If the message is successfully processed, it is routed to the SQL Server and you can verify that new records are entered in the Claims table.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>In This Section</source>
            <target state="new">In This Section</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>Developing Enterprise Applications with Azure</source>
            <target state="new">Developing Enterprise Applications with Azure</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>