<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ja-JP" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANzcENwjAMQNFVMkAs2U4aYiZAnDiwgOPEUlFpJShSx6eXf3zfPY2W2WCMnCGTIzSsDQxJi4iTqsSQkJM5V6BaC2RWAxlTAhMbmZJhbxxD15anM8ADT0tIQXpnwCJUsBqaX2KgGF4K90cMxzK7j2O/frZtj+EU+Hzdfm9dnx9dv4vu87b+Af2eCxuiAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Step 3: Implement the WCF Contract</source>
            <target state="new">Step 3: Implement the WCF Contract</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Step 3: Implement the WCF Contract to use Service Bus</source>
            <target state="new">Step 3: Implement the WCF Contract to use Service Bus</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>This is the third of seven tasks required to create a basic <ph id="1">&lt;token&gt;indigo1&lt;/token&gt;</ph> service and a client that can call the service that uses <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">This is the third of seven tasks required to create a basic <ph id="1">&lt;token&gt;indigo1&lt;/token&gt;</ph> service and a client that can call the service that uses <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>For an overview of all seven tasks, see <ph id="1">&lt;link xlink:href="24332c3c-277f-46f2-949a-d4381b8bfb0b" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;AppFabric Service Bus Tutorial&lt;/link&gt;</ph>.</source>
            <target state="new">For an overview of all seven tasks, see <ph id="1">&lt;link xlink:href="24332c3c-277f-46f2-949a-d4381b8bfb0b" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;AppFabric Service Bus Tutorial&lt;/link&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The previous task is <ph id="1">&lt;link xlink:href="62374996-f88d-45aa-bfa4-17ff5a3fb62e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 2: Define a WCF Service Contract&lt;/link&gt;</ph>; the following task is <ph id="2">&lt;link xlink:href="df567361-3a9f-4d58-a3af-dd69b1dfaaff" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 4: Host and Run a Basic Web Service to Register with Service Bus&lt;/link&gt;</ph>.</source>
            <target state="new">The previous task is <ph id="1">&lt;link xlink:href="62374996-f88d-45aa-bfa4-17ff5a3fb62e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 2: Define a WCF Service Contract&lt;/link&gt;</ph>; the following task is <ph id="2">&lt;link xlink:href="df567361-3a9f-4d58-a3af-dd69b1dfaaff" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 4: Host and Run a Basic Web Service to Register with Service Bus&lt;/link&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Creating a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> service requires that you first create the contract, which is defined by using an interface.</source>
            <target state="new">Creating a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> service requires that you first create the contract, which is defined by using an interface.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> creating the interface, see <ph id="2">&lt;link xlink:href="62374996-f88d-45aa-bfa4-17ff5a3fb62e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 2: Define an AppFabric Service Bus Contract&lt;/link&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;crabout&lt;/token&gt;</ph> creating the interface, see <ph id="2">&lt;link xlink:href="62374996-f88d-45aa-bfa4-17ff5a3fb62e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 2: Define an AppFabric Service Bus Contract&lt;/link&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>The next step, shown in this topic, is to implement the interface.</source>
            <target state="new">The next step, shown in this topic, is to implement the interface.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>This involves creating a class named <ph id="1">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph> that implements the user-defined <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> interface.</source>
            <target state="new">This involves creating a class named <ph id="1">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph> that implements the user-defined <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> interface.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>After you implement the interface, you then configure the interface using an App.config configuration file.</source>
            <target state="new">After you implement the interface, you then configure the interface using an App.config configuration file.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>The configuration file contains necessary information for the application, such as the name of the service, the name of the contract, and the type of protocol that is used to communicate with <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">The configuration file contains necessary information for the application, such as the name of the service, the name of the contract, and the type of protocol that is used to communicate with <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The code used for these tasks is provided in the example following the procedure.</source>
            <target state="new">The code used for these tasks is provided in the example following the procedure.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>For a more general discussion about how to implement a service contract, see <ph id="1">&lt;link xlink:href="aefb6f56-47e3-4f24-ab0a-9bc07bf9885f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Implementing Service Contracts&lt;/link&gt;</ph> in the <ph id="2">&lt;token&gt;indigo1&lt;/token&gt;</ph> documentation.</source>
            <target state="new">For a more general discussion about how to implement a service contract, see <ph id="1">&lt;link xlink:href="aefb6f56-47e3-4f24-ab0a-9bc07bf9885f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Implementing Service Contracts&lt;/link&gt;</ph> in the <ph id="2">&lt;token&gt;indigo1&lt;/token&gt;</ph> documentation.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Expected time to completion: 10 minutes</source>
            <target state="new">Expected time to completion: 10 minutes</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>To implement a Service Bus contract</source>
            <target state="new">To implement a Service Bus contract</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Create a new class named <ph id="1">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph> directly underneath the definition of the <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> interface.</source>
            <target state="new">Create a new class named <ph id="1">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph> directly underneath the definition of the <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> interface.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph> class implements the <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> interface.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph> class implements the <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> interface.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Similar to other interface implementations, you can implement the definition in a different file.</source>
            <target state="new">Similar to other interface implementations, you can implement the definition in a different file.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>However, for this tutorial, the implementation is located in the same file as the interface definition and the <ph id="1">&lt;codeInline&gt;Main&lt;/codeInline&gt;</ph> method.</source>
            <target state="new">However, for this tutorial, the implementation is located in the same file as the interface definition and the <ph id="1">&lt;codeInline&gt;Main&lt;/codeInline&gt;</ph> method.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Apply the <ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.ServiceBehaviorAttribute&lt;/codeEntityReference&gt;</ph> attribute that indicates the service name and namespace.</source>
            <target state="new">Apply the <ph id="1">&lt;codeEntityReference&gt;T:System.ServiceModel.ServiceBehaviorAttribute&lt;/codeEntityReference&gt;</ph> attribute that indicates the service name and namespace.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Implement the <ph id="1">&lt;codeInline&gt;Echo&lt;/codeInline&gt;</ph> method defined in the <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> interface in the <ph id="3">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph> class.</source>
            <target state="new">Implement the <ph id="1">&lt;codeInline&gt;Echo&lt;/codeInline&gt;</ph> method defined in the <ph id="2">&lt;codeInline&gt;IEchoContract&lt;/codeInline&gt;</ph> interface in the <ph id="3">&lt;codeInline&gt;EchoService&lt;/codeInline&gt;</ph> class.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Click <bpt id="1">&lt;ui&gt;</bpt>Build<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Click <bpt id="1">&lt;ui&gt;</bpt>Build<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Then click <bpt id="1">&lt;ui&gt;</bpt>Build Solution<ept id="1">&lt;/ui&gt;</ept> to confirm the accuracy of your work.</source>
            <target state="new">Then click <bpt id="1">&lt;ui&gt;</bpt>Build Solution<ept id="1">&lt;/ui&gt;</ept> to confirm the accuracy of your work.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>To define the configuration for the service host</source>
            <target state="new">To define the configuration for the service host</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>The configuration file is very similar to a <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> configuration file, and includes the service name, endpoint (that is, the location <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> exposes for clients and hosts to communicate with each other), and the binding (the type of protocol that is used to communicate).</source>
            <target state="new">The configuration file is very similar to a <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> configuration file, and includes the service name, endpoint (that is, the location <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> exposes for clients and hosts to communicate with each other), and the binding (the type of protocol that is used to communicate).</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>The main difference is that this configured service endpoint refers to a <ph id="1">&lt;codeInline&gt;netTcpRelayBinding&lt;/codeInline&gt;</ph>, which is not part of the <ph id="2">&lt;token&gt;netfx35_short&lt;/token&gt;</ph>.</source>
            <target state="new">The main difference is that this configured service endpoint refers to a <ph id="1">&lt;codeInline&gt;netTcpRelayBinding&lt;/codeInline&gt;</ph>, which is not part of the <ph id="2">&lt;token&gt;netfx35_short&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetTcpRelayBinding&lt;/codeEntityReference&gt;</ph> is one of the bindings defined by <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetTcpRelayBinding&lt;/codeEntityReference&gt;</ph> is one of the bindings defined by <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>In <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, click <bpt id="2">&lt;ui&gt;</bpt>App.config<ept id="2">&lt;/ui&gt;</ept>, which currently contains the following XML elements:</source>
            <target state="new">In <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, click <bpt id="2">&lt;ui&gt;</bpt>App.config<ept id="2">&lt;/ui&gt;</ept>, which currently contains the following XML elements:</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Add a <ph id="1">&lt;codeInline&gt;%%amp;lt;system.serviceModel%%amp;gt;&lt;/codeInline&gt;</ph> XML element to the App.config file.</source>
            <target state="new">Add a <ph id="1">&lt;codeInline&gt;%%amp;lt;system.serviceModel%%amp;gt;&lt;/codeInline&gt;</ph> XML element to the App.config file.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>This is a <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> element that defines one or more services.</source>
            <target state="new">This is a <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> element that defines one or more services.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>This example uses it to define the service name and endpoint.</source>
            <target state="new">This example uses it to define the service name and endpoint.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Within the <ph id="1">&lt;codeInline&gt;%%amp;lt;system.serviceModel%%amp;gt;&lt;/codeInline&gt;</ph> tags, add a <ph id="2">&lt;codeInline&gt;%%amp;lt;services%%amp;gt;&lt;/codeInline&gt;</ph> element.</source>
            <target state="new">Within the <ph id="1">&lt;codeInline&gt;%%amp;lt;system.serviceModel%%amp;gt;&lt;/codeInline&gt;</ph> tags, add a <ph id="2">&lt;codeInline&gt;%%amp;lt;services%%amp;gt;&lt;/codeInline&gt;</ph> element.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>You can define multiple <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> applications in a single configuration file.</source>
            <target state="new">You can define multiple <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> applications in a single configuration file.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>However, this tutorial defines only one.</source>
            <target state="new">However, this tutorial defines only one.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Within the <ph id="1">&lt;codeInline&gt;%%amp;lt;services%%amp;gt;&lt;/codeInline&gt;</ph> element, add a <ph id="2">&lt;codeInline&gt;%%amp;lt;service%%amp;gt;&lt;/codeInline&gt;</ph> element to define the name of the service.</source>
            <target state="new">Within the <ph id="1">&lt;codeInline&gt;%%amp;lt;services%%amp;gt;&lt;/codeInline&gt;</ph> element, add a <ph id="2">&lt;codeInline&gt;%%amp;lt;service%%amp;gt;&lt;/codeInline&gt;</ph> element to define the name of the service.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Within the <ph id="1">&lt;codeInline&gt;%%amp;lt;service%%amp;gt;&lt;/codeInline&gt;</ph> element, define the location of the endpoint contract, and also the type of binding for the endpoint.</source>
            <target state="new">Within the <ph id="1">&lt;codeInline&gt;%%amp;lt;service%%amp;gt;&lt;/codeInline&gt;</ph> element, define the location of the endpoint contract, and also the type of binding for the endpoint.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>The endpoint defines where the client will look for the host application.</source>
            <target state="new">The endpoint defines where the client will look for the host application.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Later, the tutorial uses this step to create a URI that fully exposes the host through the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">Later, the tutorial uses this step to create a URI that fully exposes the host through the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>The binding declares that we are using TCP as the protocol to communicate with the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">The binding declares that we are using TCP as the protocol to communicate with the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Directly after the <ph id="1">&lt;codeInline&gt;%%amp;lt;services%%amp;gt;&lt;/codeInline&gt;</ph> element, add the following binding extension:</source>
            <target state="new">Directly after the <ph id="1">&lt;codeInline&gt;%%amp;lt;services%%amp;gt;&lt;/codeInline&gt;</ph> element, add the following binding extension:</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>From the <bpt id="1">&lt;ui&gt;</bpt>Build<ept id="1">&lt;/ui&gt;</ept> menu, click <bpt id="2">&lt;ui&gt;</bpt>Build Solution<ept id="2">&lt;/ui&gt;</ept> to confirm the accuracy of your work.</source>
            <target state="new">From the <bpt id="1">&lt;ui&gt;</bpt>Build<ept id="1">&lt;/ui&gt;</ept> menu, click <bpt id="2">&lt;ui&gt;</bpt>Build Solution<ept id="2">&lt;/ui&gt;</ept> to confirm the accuracy of your work.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>The following code example shows the implementation of the service contract.</source>
            <target state="new">The following code example shows the implementation of the service contract.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>The following example shows the basic format of the App.config file associated with the service host.</source>
            <target state="new">The following example shows the basic format of the App.config file associated with the service host.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Now that you have implemented the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> contract and configured your endpoints, proceed to <ph id="2">&lt;link xlink:href="df567361-3a9f-4d58-a3af-dd69b1dfaaff" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 4: Host and Run a Basic .NET Service&lt;/link&gt;</ph>.</source>
            <target state="new">Now that you have implemented the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> contract and configured your endpoints, proceed to <ph id="2">&lt;link xlink:href="df567361-3a9f-4d58-a3af-dd69b1dfaaff" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Step 4: Host and Run a Basic .NET Service&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>