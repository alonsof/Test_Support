<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ja-JP" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAAVzEsKwzAMRdGteAEWWLas2F1B6aiDbkD+CFLSBJIUsvy6kze48I5q6IV8hd6JgFAdFJcKVIfCOSuKZGtQYvfcGowWgP4jHCsoN6bGidMUrPEpMqcqUNo0LF885DrogIiFEuYeeVjWvAUeT2uuZVbt13nbt+0cd2uiNffvR9bXLuuxyDlv6w8fHIPhoQAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Data Table</source>
            <target state="new">Data Table</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Data Table Class</source>
            <target state="new">Data Table Class</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Data Table</source>
            <target state="new">Data Table</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>A dataset is data that has been uploaded to Azure <ph id="1">&lt;token&gt;ProductName&lt;/token&gt;</ph> so that it can be used in the modeling process.</source>
            <target state="new">A dataset is data that has been uploaded to Azure <ph id="1">&lt;token&gt;ProductName&lt;/token&gt;</ph> so that it can be used in the modeling process.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Even if you upload data in another format, or specify a storage format such as CSV, ARFF, or TSV, the data is implicitly converted to a <ph id="1">&lt;languageKeyword&gt;DataTable&lt;/languageKeyword&gt;</ph> object whenever used by a module in an experiment.</source>
            <target state="new">Even if you upload data in another format, or specify a storage format such as CSV, ARFF, or TSV, the data is implicitly converted to a <ph id="1">&lt;languageKeyword&gt;DataTable&lt;/languageKeyword&gt;</ph> object whenever used by a module in an experiment.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Column Types</source>
            <target state="new">Column Types</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>A <ph id="1">&lt;languageKeyword&gt;DataTable&lt;/languageKeyword&gt;</ph> consists of a collection of columns with associated metadata.</source>
            <target state="new">A <ph id="1">&lt;languageKeyword&gt;DataTable&lt;/languageKeyword&gt;</ph> consists of a collection of columns with associated metadata.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>These columns implement the <ph id="1">&lt;languageKeyword&gt;IArray&lt;/languageKeyword&gt;</ph> interface.</source>
            <target state="new">These columns implement the <ph id="1">&lt;languageKeyword&gt;IArray&lt;/languageKeyword&gt;</ph> interface.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Columns of data in <ph id="1">&lt;token&gt;ProductName&lt;/token&gt;</ph> are understood to be one-dimensional arrays – that is, <bpt id="2">&lt;newTerm&gt;</bpt>vectors<ept id="2">&lt;/newTerm&gt;</ept>.</source>
            <target state="new">Columns of data in <ph id="1">&lt;token&gt;ProductName&lt;/token&gt;</ph> are understood to be one-dimensional arrays – that is, <bpt id="2">&lt;newTerm&gt;</bpt>vectors<ept id="2">&lt;/newTerm&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>The .NET <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Array<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://msdn.microsoft.com/library/system.array.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>  class implements these generic interfaces:  <ph id="4">&lt;codeInline&gt;System.Collections.Generic.IList%%amp;lt;T%%amp;gt;&lt;/codeInline&gt;</ph>, <ph id="5">&lt;codeInline&gt;System.Collections.Generic.ICollection%%amp;lt;T%%amp;gt;&lt;/codeInline&gt;</ph>, and <ph id="6">&lt;codeInline&gt;System.Collections.Generic.IEnumerable%%amp;lt;T%%amp;gt;&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The .NET <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Array<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://msdn.microsoft.com/library/system.array.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>  class implements these generic interfaces:  <ph id="4">&lt;codeInline&gt;System.Collections.Generic.IList%%amp;lt;T%%amp;gt;&lt;/codeInline&gt;</ph>, <ph id="5">&lt;codeInline&gt;System.Collections.Generic.ICollection%%amp;lt;T%%amp;gt;&lt;/codeInline&gt;</ph>, and <ph id="6">&lt;codeInline&gt;System.Collections.Generic.IEnumerable%%amp;lt;T%%amp;gt;&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Columns of types <ph id="1">&lt;languageKeyword&gt;int&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;double&lt;/languageKeyword&gt;</ph>, and <ph id="3">&lt;languageKeyword&gt;Boolean&lt;/languageKeyword&gt;</ph> are typically represented as numeric dense arrays.</source>
            <target state="new">Columns of types <ph id="1">&lt;languageKeyword&gt;int&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;double&lt;/languageKeyword&gt;</ph>, and <ph id="3">&lt;languageKeyword&gt;Boolean&lt;/languageKeyword&gt;</ph> are typically represented as numeric dense arrays.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>If a dense column contains missing values, it will handled either as a missing values array or as a nullable object dense array.</source>
            <target state="new">If a dense column contains missing values, it will handled either as a missing values array or as a nullable object dense array.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Columns containing strings are handled as object dense arrays.</source>
            <target state="new">Columns containing strings are handled as object dense arrays.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>If there are missing values, the missing values are represented either as nulls or as the type <ph id="1">&lt;codeInline&gt;MissingValuesObjectArray%%amp;lt;string%%amp;gt;&lt;/codeInline&gt;</ph>.</source>
            <target state="new">If there are missing values, the missing values are represented either as nulls or as the type <ph id="1">&lt;codeInline&gt;MissingValuesObjectArray%%amp;lt;string%%amp;gt;&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Array Class (MSDN Library)<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://msdn.microsoft.com/library/system.array.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Array Class (MSDN Library)<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;https://msdn.microsoft.com/library/system.array.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Getting Columns in a DataTable</source>
            <target state="new">Getting Columns in a DataTable</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>You can get a column by calling the <ph id="1">&lt;codeInline&gt;GetColumn&lt;/codeInline&gt;</ph> method on the DataTable.</source>
            <target state="new">You can get a column by calling the <ph id="1">&lt;codeInline&gt;GetColumn&lt;/codeInline&gt;</ph> method on the DataTable.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;GetColumn&lt;/codeInline&gt;</ph> method has two overloads:</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;GetColumn&lt;/codeInline&gt;</ph> method has two overloads:</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;GetColumn(%%amp;lt;Int64%%amp;gt;)&lt;/codeInline&gt;</ph> gets a column by its index.</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;GetColumn(%%amp;lt;Int64%%amp;gt;)&lt;/codeInline&gt;</ph> gets a column by its index.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;GetColumn(%%amp;lt;string%%amp;gt;)&lt;/codeInline&gt;</ph> gets a column by its name.</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;GetColumn(%%amp;lt;string%%amp;gt;)&lt;/codeInline&gt;</ph> gets a column by its name.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>See Also</source>
            <target state="new">See Also</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>This section also describes the following interfaces for Azure Machine Learning:</source>
            <target state="new">This section also describes the following interfaces for Azure Machine Learning:</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>The ICluster interface defines the structure of clustering models.</source>
            <target state="new">The ICluster interface defines the structure of clustering models.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>The IFilter interface defines the structure of digital signal processing filters applied to an entire series of numerical values.</source>
            <target state="new">The IFilter interface defines the structure of digital signal processing filters applied to an entire series of numerical values.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Filters can be created and then saved and applied to a new series.</source>
            <target state="new">Filters can be created and then saved and applied to a new series.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>The ILearner interface provides a generic structure for defining and saving analytical models, excluding some special types such as clustering models.</source>
            <target state="new">The ILearner interface provides a generic structure for defining and saving analytical models, excluding some special types such as clustering models.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>The ITransform interface provides a generic structure for defining and saving transformations.</source>
            <target state="new">The ITransform interface provides a generic structure for defining and saving transformations.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>You can create an iTransform using <ph id="1">&lt;token&gt;ProductName&lt;/token&gt;</ph> and then apply the transformation to new datasets.</source>
            <target state="new">You can create an iTransform using <ph id="1">&lt;token&gt;ProductName&lt;/token&gt;</ph> and then apply the transformation to new datasets.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>