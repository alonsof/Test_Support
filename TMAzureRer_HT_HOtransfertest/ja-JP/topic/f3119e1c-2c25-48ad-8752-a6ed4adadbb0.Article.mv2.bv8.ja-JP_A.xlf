<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ja-JP" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANyssNwjAMANBVPIAt5eO0DhMgThxYwElsqai0EhSp48M7P/dsjVMnM2bi6IFakEY9RJ1q9ahaETRom5MYFVEj9plJSuhUWCczkZqnjOA5xmqxU+qpEIsOkrkk+p/BOnS0FhAiwlPpdkc418XdzuPy3vcDISEIwvX70u3x1u2z6rHs2w9f7ITgoQAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Import/Export Service Manifest File Format</source>
            <target state="new">Import/Export Service Manifest File Format</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>The drive manifest file describes the mapping between blobs in Azure Blob storage and files on drive comprising an import or export job.</source>
            <target state="new">The drive manifest file describes the mapping between blobs in Azure Blob storage and files on drive comprising an import or export job.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>For an import operation, the manifest file is created as a part of the drive preparation process, and is stored on the drive before the drive is sent to the Azure data center.</source>
            <target state="new">For an import operation, the manifest file is created as a part of the drive preparation process, and is stored on the drive before the drive is sent to the Azure data center.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>During an export operation, the manifest is created and stored on the drive by the Azure Import/Export service.</source>
            <target state="new">During an export operation, the manifest is created and stored on the drive by the Azure Import/Export service.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>For both import and export jobs, the drive manifest file is stored on the import or export drive; it is not transmitted to the service via any API operation.</source>
            <target state="new">For both import and export jobs, the drive manifest file is stored on the import or export drive; it is not transmitted to the service via any API operation.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The following describes the general format of a drive manifest file:</source>
            <target state="new">The following describes the general format of a drive manifest file:</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The data elements and attributes of the drive manifest XML format are specified in the following table.</source>
            <target state="new">The data elements and attributes of the drive manifest XML format are specified in the following table.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>XML Element</source>
            <target state="new">XML Element</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Root element</source>
            <target state="new">Root element</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The root element of the manifest file.</source>
            <target state="new">The root element of the manifest file.</target>
          </trans-unit>
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>All other elements in the file are beneath this element.</source>
            <target state="new">All other elements in the file are beneath this element.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Attribute, String</source>
            <target state="new">Attribute, String</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The version of the manifest file.</source>
            <target state="new">The version of the manifest file.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Nested XML element</source>
            <target state="new">Nested XML element</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Contains the manifest for each drive.</source>
            <target state="new">Contains the manifest for each drive.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>The unique drive identifier for the drive.</source>
            <target state="new">The unique drive identifier for the drive.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>The drive identifier is found by querying the drive for its serial number.</source>
            <target state="new">The drive identifier is found by querying the drive for its serial number.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>The drive serial number is usually printed on the outside of the drive as well.</source>
            <target state="new">The drive serial number is usually printed on the outside of the drive as well.</target>
          </trans-unit>
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;languageKeyword&gt;DriveID&lt;/languageKeyword&gt;</ph> element must appear before any <ph id="2">&lt;languageKeyword&gt;BlobList&lt;/languageKeyword&gt;</ph> element in the manifest file.</source>
            <target state="new">The <ph id="1">&lt;languageKeyword&gt;DriveID&lt;/languageKeyword&gt;</ph> element must appear before any <ph id="2">&lt;languageKeyword&gt;BlobList&lt;/languageKeyword&gt;</ph> element in the manifest file.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Required for import jobs if and only if <ph id="1">&lt;languageKeyword&gt;ContainerSas&lt;/languageKeyword&gt;</ph> is not specified.</source>
            <target state="new">Required for import jobs if and only if <ph id="1">&lt;languageKeyword&gt;ContainerSas&lt;/languageKeyword&gt;</ph> is not specified.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>The account key for the Azure storage account associated with the job.</source>
            <target state="new">The account key for the Azure storage account associated with the job.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>This element is omitted from the manifest for an export operation.</source>
            <target state="new">This element is omitted from the manifest for an export operation.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Required for import jobs if and only if <ph id="1">&lt;languageKeyword&gt;StorageAccountKey&lt;/languageKeyword&gt;</ph> is not specified.</source>
            <target state="new">Required for import jobs if and only if <ph id="1">&lt;languageKeyword&gt;StorageAccountKey&lt;/languageKeyword&gt;</ph> is not specified.</target>
          </trans-unit>
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>The container SAS for accessing the blobs associated with the job.</source>
            <target state="new">The container SAS for accessing the blobs associated with the job.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>See <ph id="1">&lt;link xlink:href="2f703ff1-d52b-43bd-81ec-90350a39e2af" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Job&lt;/link&gt;</ph> for its format.This element is omitted from the manifest for an export operation.</source>
            <target state="new">See <ph id="1">&lt;link xlink:href="2f703ff1-d52b-43bd-81ec-90350a39e2af" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Job&lt;/link&gt;</ph> for its format.This element is omitted from the manifest for an export operation.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Specifies the client which created the XML file.</source>
            <target state="new">Specifies the client which created the XML file.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>This value is not interpreted by the Import/Export service.</source>
            <target state="new">This value is not interpreted by the Import/Export service.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>Nested XML element</source>
            <target state="new">Nested XML element</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Contains a list of blobs that are part of the import or export job.</source>
            <target state="new">Contains a list of blobs that are part of the import or export job.</target>
          </trans-unit>
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Each blob in a blob list shares the same metadata and properties.</source>
            <target state="new">Each blob in a blob list shares the same metadata and properties.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Specifies the relative path of a file on the disk that contains the default metadata that will be set on blobs in the blob list for an import operation.</source>
            <target state="new">Specifies the relative path of a file on the disk that contains the default metadata that will be set on blobs in the blob list for an import operation.</target>
          </trans-unit>
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>This metadata can be optionally overridden on a blob-by-blob basis.</source>
            <target state="new">This metadata can be optionally overridden on a blob-by-blob basis.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>This element is omitted from the manifest for an export operation.</source>
            <target state="new">This element is omitted from the manifest for an export operation.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Attribute, String</source>
            <target state="new">Attribute, String</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Specifies the Base16-encoded MD5 hash value for the metadata file.</source>
            <target state="new">Specifies the Base16-encoded MD5 hash value for the metadata file.</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Specifies the relative path of a file on the disk that contains the default properties that will be set on blobs in the blob list for an import operation.</source>
            <target state="new">Specifies the relative path of a file on the disk that contains the default properties that will be set on blobs in the blob list for an import operation.</target>
          </trans-unit>
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>These properties can be optionally overridden on a blob-by-blob basis.</source>
            <target state="new">These properties can be optionally overridden on a blob-by-blob basis.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>This element is omitted from the manifest for an export operation.</source>
            <target state="new">This element is omitted from the manifest for an export operation.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>Attribute, String</source>
            <target state="new">Attribute, String</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>Specifies the Base16-encoded MD5 hash value for the properties file.</source>
            <target state="new">Specifies the Base16-encoded MD5 hash value for the properties file.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>Nested XML element</source>
            <target state="new">Nested XML element</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Contains information about each blob in each blob list.</source>
            <target state="new">Contains information about each blob in each blob list.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>The relative URI to the blob, beginning with the container name.</source>
            <target state="new">The relative URI to the blob, beginning with the container name.</target>
          </trans-unit>
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>If the blob is in root container, it must begin with <ph id="1">&lt;codeInline&gt;$root&lt;/codeInline&gt;</ph>.</source>
            <target state="new">If the blob is in root container, it must begin with <ph id="1">&lt;codeInline&gt;$root&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>Specifies the relative path to the file on the drive.</source>
            <target state="new">Specifies the relative path to the file on the drive.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>For export jobs, the blob path will be used for the file path if possible; <bpt id="1">&lt;legacyItalic&gt;</bpt>e.g.<ept id="1">&lt;/legacyItalic&gt;</ept>, <ph id="2">&lt;codeInline&gt;pictures/bob/wild/desert.jpg&lt;/codeInline&gt;</ph> will be exported to <ph id="3">&lt;codeInline&gt;\pictures\bob\wild\desert.jpg&lt;/codeInline&gt;</ph>.</source>
            <target state="new">For export jobs, the blob path will be used for the file path if possible; <bpt id="1">&lt;legacyItalic&gt;</bpt>e.g.<ept id="1">&lt;/legacyItalic&gt;</ept>, <ph id="2">&lt;codeInline&gt;pictures/bob/wild/desert.jpg&lt;/codeInline&gt;</ph> will be exported to <ph id="3">&lt;codeInline&gt;\pictures\bob\wild\desert.jpg&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>However, due to the limitations of NTFS names, a blob may be exported to a file with a path that doesn't resemble the blob path.</source>
            <target state="new">However, due to the limitations of NTFS names, a blob may be exported to a file with a path that doesn't resemble the blob path.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>Contains comments from the customer.</source>
            <target state="new">Contains comments from the customer.</target>
          </trans-unit>
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>This value is not interpreted by the Import/Export service.</source>
            <target state="new">This value is not interpreted by the Import/Export service.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>DateTime</source>
            <target state="new">DateTime</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>Optional for export jobs.</source>
            <target state="new">Optional for export jobs.</target>
          </trans-unit>
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Specifies the snapshot identifier for an exported blob snapshot.</source>
            <target state="new">Specifies the snapshot identifier for an exported blob snapshot.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>Integer</source>
            <target state="new">Integer</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>Specifies the total length of the blob in bytes.</source>
            <target state="new">Specifies the total length of the blob in bytes.</target>
          </trans-unit>
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>The value may be up to 200 GB for a block blob and up to 1 TB for a page blob.</source>
            <target state="new">The value may be up to 200 GB for a block blob and up to 1 TB for a page blob.</target>
          </trans-unit>
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>For a page blob, this value must be a multiple of 512.</source>
            <target state="new">For a page blob, this value must be a multiple of 512.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>Optional for import jobs, omitted for export jobs.</source>
            <target state="new">Optional for import jobs, omitted for export jobs.</target>
          </trans-unit>
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>This specifies how the Import/Export service should handle the case for an import job where a blob with the same name already exists.</source>
            <target state="new">This specifies how the Import/Export service should handle the case for an import job where a blob with the same name already exists.</target>
          </trans-unit>
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>If this value is omitted from the import manifest, the default value is <ph id="1">&lt;codeInline&gt;rename&lt;/codeInline&gt;</ph>.</source>
            <target state="new">If this value is omitted from the import manifest, the default value is <ph id="1">&lt;codeInline&gt;rename&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>The values for this element include:</source>
            <target state="new">The values for this element include:</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;no-overwrite&lt;/codeInline&gt;</ph>: If a destination blob is already present with the same name, the import operation will skip importing this file.</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;no-overwrite&lt;/codeInline&gt;</ph>: If a destination blob is already present with the same name, the import operation will skip importing this file.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;overwrite&lt;/codeInline&gt;</ph>: Any existing destination blob is overwritten completely by the newly imported file.</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;overwrite&lt;/codeInline&gt;</ph>: Any existing destination blob is overwritten completely by the newly imported file.</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;rename&lt;/codeInline&gt;</ph>: The new blob will uploaded with a modified name.</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;rename&lt;/codeInline&gt;</ph>: The new blob will uploaded with a modified name.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>The renaming rule is as follows:</source>
            <target state="new">The renaming rule is as follows:</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>If the blob name doesn't contain a dot, a new name is generated by appending <ph id="1">&lt;codeInline&gt;(2)&lt;/codeInline&gt;</ph> to the original blob name; if this new name also conflicts with an existing blob name, then <ph id="2">&lt;codeInline&gt;(3)&lt;/codeInline&gt;</ph> is appended in place of <ph id="3">&lt;codeInline&gt;(2)&lt;/codeInline&gt;</ph>; and so on.</source>
            <target state="new">If the blob name doesn't contain a dot, a new name is generated by appending <ph id="1">&lt;codeInline&gt;(2)&lt;/codeInline&gt;</ph> to the original blob name; if this new name also conflicts with an existing blob name, then <ph id="2">&lt;codeInline&gt;(3)&lt;/codeInline&gt;</ph> is appended in place of <ph id="3">&lt;codeInline&gt;(2)&lt;/codeInline&gt;</ph>; and so on.</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>If the blob name contains a dot, the portion following the last dot is considered the extension name.</source>
            <target state="new">If the blob name contains a dot, the portion following the last dot is considered the extension name.</target>
          </trans-unit>
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>Similar to the above procedure, <ph id="1">&lt;codeInline&gt;(2)&lt;/codeInline&gt;</ph> is inserted before the last dot to generate a new name; if the new name still conflicts with an existing blob name, then the service tries <ph id="2">&lt;codeInline&gt;(3)&lt;/codeInline&gt;</ph>, <ph id="3">&lt;codeInline&gt;(4)&lt;/codeInline&gt;</ph>, and so on, until a non-conflicting name is found.</source>
            <target state="new">Similar to the above procedure, <ph id="1">&lt;codeInline&gt;(2)&lt;/codeInline&gt;</ph> is inserted before the last dot to generate a new name; if the new name still conflicts with an existing blob name, then the service tries <ph id="2">&lt;codeInline&gt;(3)&lt;/codeInline&gt;</ph>, <ph id="3">&lt;codeInline&gt;(4)&lt;/codeInline&gt;</ph>, and so on, until a non-conflicting name is found.</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>Some examples:</source>
            <target state="new">Some examples:</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>The blob <ph id="1">&lt;codeInline&gt;BlobNameWithoutDot&lt;/codeInline&gt;</ph> will be renamed to:</source>
            <target state="new">The blob <ph id="1">&lt;codeInline&gt;BlobNameWithoutDot&lt;/codeInline&gt;</ph> will be renamed to:</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>The blob <ph id="1">&lt;codeInline&gt;Seattle.jpg&lt;/codeInline&gt;</ph> will be renamed to:</source>
            <target state="new">The blob <ph id="1">&lt;codeInline&gt;Seattle.jpg&lt;/codeInline&gt;</ph> will be renamed to:</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>Nested XML element</source>
            <target state="new">Nested XML element</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>Required for a page blob.</source>
            <target state="new">Required for a page blob.</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>For an import operation, specifies a list of byte ranges of a file to be imported.</source>
            <target state="new">For an import operation, specifies a list of byte ranges of a file to be imported.</target>
          </trans-unit>
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>Each page range is described by an offset and length in the source file that describes the page range, together with an MD5 hash of the region.</source>
            <target state="new">Each page range is described by an offset and length in the source file that describes the page range, together with an MD5 hash of the region.</target>
          </trans-unit>
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;languageKeyword&gt;Hash&lt;/languageKeyword&gt;</ph> attribute of a page range is required.</source>
            <target state="new">The <ph id="1">&lt;languageKeyword&gt;Hash&lt;/languageKeyword&gt;</ph> attribute of a page range is required.</target>
          </trans-unit>
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>The service will validate that the hash of the data in the blob matches the computed MD5 hash from the page range.</source>
            <target state="new">The service will validate that the hash of the data in the blob matches the computed MD5 hash from the page range.</target>
          </trans-unit>
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>Any number of page ranges may be used to describe a file for an import, with the total size up to 1 TB.</source>
            <target state="new">Any number of page ranges may be used to describe a file for an import, with the total size up to 1 TB.</target>
          </trans-unit>
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>All page ranges must be ordered by offset and no overlaps are allowed.</source>
            <target state="new">All page ranges must be ordered by offset and no overlaps are allowed.</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>For an export operation, specifies a set of byte ranges of a blob that have been exported to the drive.</source>
            <target state="new">For an export operation, specifies a set of byte ranges of a blob that have been exported to the drive.</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>The page ranges together may cover only sub-ranges of a blob or file.</source>
            <target state="new">The page ranges together may cover only sub-ranges of a blob or file.</target>
          </trans-unit>
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>The remaining part of the file not covered by any page range is expected and its content can be undefined.</source>
            <target state="new">The remaining part of the file not covered by any page range is expected and its content can be undefined.</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>XML element</source>
            <target state="new">XML element</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>Represents a page range.</source>
            <target state="new">Represents a page range.</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>Attribute, Integer</source>
            <target state="new">Attribute, Integer</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>Specifies the offset in the transfer file and the blob where the specified page range begins.</source>
            <target state="new">Specifies the offset in the transfer file and the blob where the specified page range begins.</target>
          </trans-unit>
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>This value must be a multiple of 512.</source>
            <target state="new">This value must be a multiple of 512.</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>Attribute, Integer</source>
            <target state="new">Attribute, Integer</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>Specifies the length of the page range.</source>
            <target state="new">Specifies the length of the page range.</target>
          </trans-unit>
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>This value must be a multiple of 512 and no more than 4 MB.</source>
            <target state="new">This value must be a multiple of 512 and no more than 4 MB.</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>Attribute, String</source>
            <target state="new">Attribute, String</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>Specifies the Base16-encoded MD5 hash value for the page range.</source>
            <target state="new">Specifies the Base16-encoded MD5 hash value for the page range.</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>Nested XML element</source>
            <target state="new">Nested XML element</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>Required for a block blob with named blocks.</source>
            <target state="new">Required for a block blob with named blocks.</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>For an import operation, the block list specifies a set of blocks that will be imported into Azure Storage.</source>
            <target state="new">For an import operation, the block list specifies a set of blocks that will be imported into Azure Storage.</target>
          </trans-unit>
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>For an export operation, the block list specifies where each block has been stored in the file on the export disk.</source>
            <target state="new">For an export operation, the block list specifies where each block has been stored in the file on the export disk.</target>
          </trans-unit>
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>Each block is described by an offset in the file and a block length; each block is furthermore named by a block ID attribute, and contains an MD5 hash for the block.</source>
            <target state="new">Each block is described by an offset in the file and a block length; each block is furthermore named by a block ID attribute, and contains an MD5 hash for the block.</target>
          </trans-unit>
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>Up to 50,000 blocks may be used to describe a blob.</source>
            <target state="new">Up to 50,000 blocks may be used to describe a blob.</target>
          </trans-unit>
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>All blocks must be ordered by offset, and together should cover the complete range of the file, <bpt id="1">&lt;legacyItalic&gt;</bpt>i.e.<ept id="1">&lt;/legacyItalic&gt;</ept>, there must be no gap between blocks.</source>
            <target state="new">All blocks must be ordered by offset, and together should cover the complete range of the file, <bpt id="1">&lt;legacyItalic&gt;</bpt>i.e.<ept id="1">&lt;/legacyItalic&gt;</ept>, there must be no gap between blocks.</target>
          </trans-unit>
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>If the blob is no more than 64 MB, the block IDs for each block must be either all absent or all present.</source>
            <target state="new">If the blob is no more than 64 MB, the block IDs for each block must be either all absent or all present.</target>
          </trans-unit>
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>Block IDs are required to be Base64-encoded strings.</source>
            <target state="new">Block IDs are required to be Base64-encoded strings.</target>
          </trans-unit>
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>See <ph id="1">&lt;link xlink:href="de63a7ed-c489-4034-b21a-246854d7a745" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Block (REST API)&lt;/link&gt;</ph> for further requirements for block IDs.</source>
            <target state="new">See <ph id="1">&lt;link xlink:href="de63a7ed-c489-4034-b21a-246854d7a745" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Block (REST API)&lt;/link&gt;</ph> for further requirements for block IDs.</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source>XML element</source>
            <target state="new">XML element</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>Represents a block.</source>
            <target state="new">Represents a block.</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>Attribute, Integer</source>
            <target state="new">Attribute, Integer</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>Specifies the offset where the specified block begins.</source>
            <target state="new">Specifies the offset where the specified block begins.</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>Attribute, Integer</source>
            <target state="new">Attribute, Integer</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>Specifies the number of bytes in the block; this value must be no more than 4MB.</source>
            <target state="new">Specifies the number of bytes in the block; this value must be no more than 4MB.</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source>Attribute, String</source>
            <target state="new">Attribute, String</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>Specifies a string representing the block ID for the block.</source>
            <target state="new">Specifies a string representing the block ID for the block.</target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source>Attribute, String</source>
            <target state="new">Attribute, String</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>Specifies the Base16-encoded MD5 hash of the block.</source>
            <target state="new">Specifies the Base16-encoded MD5 hash of the block.</target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source>Specifies the relative path of a metadata file.</source>
            <target state="new">Specifies the relative path of a metadata file.</target>
          </trans-unit>
          <trans-unit id="130" translate="yes" xml:space="preserve">
            <source>During an import, the metadata is set on the destination blob.</source>
            <target state="new">During an import, the metadata is set on the destination blob.</target>
          </trans-unit>
          <trans-unit id="131" translate="yes" xml:space="preserve">
            <source>During an export operation, the blob's metadata is stored in the metadata file on the drive.</source>
            <target state="new">During an export operation, the blob's metadata is stored in the metadata file on the drive.</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="132" translate="yes" xml:space="preserve">
            <source>Attribute, String</source>
            <target state="new">Attribute, String</target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="133" translate="yes" xml:space="preserve">
            <source>Specifies the Base16-encoded MD5 hash of the blob's metadata file.</source>
            <target state="new">Specifies the Base16-encoded MD5 hash of the blob's metadata file.</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="134" translate="yes" xml:space="preserve">
            <source>String</source>
            <target state="new">String</target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="135" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="136" translate="yes" xml:space="preserve">
            <source>Specifies the relative path of a properties file.</source>
            <target state="new">Specifies the relative path of a properties file.</target>
          </trans-unit>
          <trans-unit id="137" translate="yes" xml:space="preserve">
            <source>During an import, the properties are set on the destination blob.</source>
            <target state="new">During an import, the properties are set on the destination blob.</target>
          </trans-unit>
          <trans-unit id="138" translate="yes" xml:space="preserve">
            <source>During an export operation, the blob properties are stored in the properties file on the drive.</source>
            <target state="new">During an export operation, the blob properties are stored in the properties file on the drive.</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="139" translate="yes" xml:space="preserve">
            <source>Attribute, String</source>
            <target state="new">Attribute, String</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="140" translate="yes" xml:space="preserve">
            <source>Specifies the Base16-encoded MD5 hash of the blob's properties file.</source>
            <target state="new">Specifies the Base16-encoded MD5 hash of the blob's properties file.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>