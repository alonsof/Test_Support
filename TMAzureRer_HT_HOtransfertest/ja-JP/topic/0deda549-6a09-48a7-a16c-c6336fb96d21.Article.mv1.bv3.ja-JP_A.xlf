<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ja-JP" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAAdykEKg0AMQNGrzAEmkDgxNT1B6aqLXiAZJ2CxCtaCx68U/u79iNKcuwqtMQNTIDgODhXJRDXITHNyI++ZHQSbAp8CGqZQohR3deqQc8Kxjdazghie12AXMJIKVUqRcJWxo5zOXgb3R07HPEW0Y79u67r/oeR0+75teW62fGbbp3X5Aeli4tOhAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="content">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Stops a cluster node.</source>
            <target state="new">Stops a cluster node.</target>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>The source <ph id="1">&lt;codeEntityReference&gt;T:System.Fabric.FabricClient.ClusterManagementClient&lt;/codeEntityReference&gt;</ph> on which this action is invoked.</source>
            <target state="new">The source <ph id="1">&lt;codeEntityReference&gt;T:System.Fabric.FabricClient.ClusterManagementClient&lt;/codeEntityReference&gt;</ph> on which this action is invoked.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>The node name of the node to stop.</source>
            <target state="new">The node name of the node to stop.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>The node instance ID of the node to stop.</source>
            <target state="new">The node instance ID of the node to stop.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>If this is not specified, or is set to 0, this is ignored.</source>
            <target state="new">If this is not specified, or is set to 0, this is ignored.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>If this is set to -1, the system will internally determine this value.</source>
            <target state="new">If this is set to -1, the system will internally determine this value.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>If set to Verify, the system will check that the node stopped, and the API will not return until it has.</source>
            <target state="new">If set to Verify, the system will check that the node stopped, and the API will not return until it has.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>If set to DoNotVerify, the API returns once the node stop has been initiated.</source>
            <target state="new">If set to DoNotVerify, the API returns once the node stop has been initiated.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>A task with information representing the target node.</source>
            <target state="new">A task with information representing the target node.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeEntityReference&gt;P:System.Fabric.FabricException.ErrorCode&lt;/codeEntityReference&gt;</ph> property will indicate the reason.</source>
            <target state="new">The <ph id="1">&lt;codeEntityReference&gt;P:System.Fabric.FabricException.ErrorCode&lt;/codeEntityReference&gt;</ph> property will indicate the reason.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>If the ErrorCode is InvalidArgument, nodeName is invalid.</source>
            <target state="new">If the ErrorCode is InvalidArgument, nodeName is invalid.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>If the ErrorCode is InstanceIdMismatch, the nodeInstance provided does not match the currently running instance.</source>
            <target state="new">If the ErrorCode is InstanceIdMismatch, the nodeInstance provided does not match the currently running instance.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>The operation timed out.</source>
            <target state="new">The operation timed out.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>An argument with a value of null was passed in.</source>
            <target state="new">An argument with a value of null was passed in.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>A cluster node is a process, not an virtual or physical machine.</source>
            <target state="new">A cluster node is a process, not an virtual or physical machine.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Stops a cluster node.</source>
            <target state="new">Stops a cluster node.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>The source <ph id="1">&lt;codeEntityReference&gt;T:System.Fabric.FabricClient.ClusterManagementClient&lt;/codeEntityReference&gt;</ph> on which this action is invoked.</source>
            <target state="new">The source <ph id="1">&lt;codeEntityReference&gt;T:System.Fabric.FabricClient.ClusterManagementClient&lt;/codeEntityReference&gt;</ph> on which this action is invoked.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The node name of the node to stop.</source>
            <target state="new">The node name of the node to stop.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>The node instance ID of the node to stop.</source>
            <target state="new">The node instance ID of the node to stop.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>If this is not specified, or is set to 0, this is ignored.</source>
            <target state="new">If this is not specified, or is set to 0, this is ignored.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>If this is set to -1, the system will internally determine this value.</source>
            <target state="new">If this is set to -1, the system will internally determine this value.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>If set to Verify, the system will check that the node stopped, and the API will not return until it has.</source>
            <target state="new">If set to Verify, the system will check that the node stopped, and the API will not return until it has.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>If set to DoNotVerify, the API returns once the node stop has been initiated.</source>
            <target state="new">If set to DoNotVerify, the API returns once the node stop has been initiated.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>The cancellation token.</source>
            <target state="new">The cancellation token.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>A task with information representing the target node.</source>
            <target state="new">A task with information representing the target node.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeEntityReference&gt;P:System.Fabric.FabricException.ErrorCode&lt;/codeEntityReference&gt;</ph> property will indicate the reason.</source>
            <target state="new">The <ph id="1">&lt;codeEntityReference&gt;P:System.Fabric.FabricException.ErrorCode&lt;/codeEntityReference&gt;</ph> property will indicate the reason.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>If the ErrorCode is InvalidArgument, nodeName is invalid.</source>
            <target state="new">If the ErrorCode is InvalidArgument, nodeName is invalid.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>If the ErrorCode is InstanceIdMismatch, the nodeInstance provided does not match the currently running instance.</source>
            <target state="new">If the ErrorCode is InstanceIdMismatch, the nodeInstance provided does not match the currently running instance.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>The operation timed out.</source>
            <target state="new">The operation timed out.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>An argument with a value of null was passed in.</source>
            <target state="new">An argument with a value of null was passed in.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>A cluster node is a process, not an virtual or physical machine.</source>
            <target state="new">A cluster node is a process, not an virtual or physical machine.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Stops a cluster node.</source>
            <target state="new">Stops a cluster node.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The source <ph id="1">&lt;codeEntityReference&gt;T:System.Fabric.FabricClient.ClusterManagementClient&lt;/codeEntityReference&gt;</ph> on which this action is invoked.</source>
            <target state="new">The source <ph id="1">&lt;codeEntityReference&gt;T:System.Fabric.FabricClient.ClusterManagementClient&lt;/codeEntityReference&gt;</ph> on which this action is invoked.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>The node name of the node to stop.</source>
            <target state="new">The node name of the node to stop.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>The node instance ID of the node to stop.</source>
            <target state="new">The node instance ID of the node to stop.</target>
          </trans-unit>
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>If this is not specified, or is set to 0, this is ignored.</source>
            <target state="new">If this is not specified, or is set to 0, this is ignored.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>If this is set to -1, the system will internally determine this value.</source>
            <target state="new">If this is set to -1, the system will internally determine this value.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>If set to Verify, the system will check that the node stopped, and the API will not return until it has.</source>
            <target state="new">If set to Verify, the system will check that the node stopped, and the API will not return until it has.</target>
          </trans-unit>
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>If set to DoNotVerify, the API returns once the node stop has been initiated.</source>
            <target state="new">If set to DoNotVerify, the API returns once the node stop has been initiated.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>The timeout for this API call.</source>
            <target state="new">The timeout for this API call.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>The cancellation token.</source>
            <target state="new">The cancellation token.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>A task with information representing the target node</source>
            <target state="new">A task with information representing the target node</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeEntityReference&gt;P:System.Fabric.FabricException.ErrorCode&lt;/codeEntityReference&gt;</ph> property will indicate the reason.</source>
            <target state="new">The <ph id="1">&lt;codeEntityReference&gt;P:System.Fabric.FabricException.ErrorCode&lt;/codeEntityReference&gt;</ph> property will indicate the reason.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>If the ErrorCode is InvalidArgument, nodeName is invalid.</source>
            <target state="new">If the ErrorCode is InvalidArgument, nodeName is invalid.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>If the ErrorCode is InstanceIdMismatch, the nodeInstance provided does not match the currently running instance.</source>
            <target state="new">If the ErrorCode is InstanceIdMismatch, the nodeInstance provided does not match the currently running instance.</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>The operation timed out.</source>
            <target state="new">The operation timed out.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>An argument with a value of null was passed in.</source>
            <target state="new">An argument with a value of null was passed in.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>A cluster node is a process, not an virtual or physical machine.</source>
            <target state="new">A cluster node is a process, not an virtual or physical machine.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>