<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ko-KR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAAVy1EKwjAMANCr5AAJpG1oG08g+CdeIC0NDOcKc8KOr/6/555Gk9hpDBGS4EyNa6POwbKqBzNFEBXjVDPFzE7i3amNXMn/W5XVoiNktZA1KqXalESKk/X6U8VS9FQG80AICM9JtzvCuS7u4zwu+5wHQkSoCNfPy7bHbtt7tWOZ2xd66sqKoQAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Azure</source>
            <target state="new">Azure</target>
            <context-group>
              <context context-type="x-metadataname">applies_to_product</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>ACS Retry Guidelines</source>
            <target state="new">ACS Retry Guidelines</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;firstref_acs&lt;/token&gt;</ph> supports a number of different token issuance and management endpoints to which clients can send token requests.</source>
            <target state="new"><ph id="1">&lt;token&gt;firstref_acs&lt;/token&gt;</ph> supports a number of different token issuance and management endpoints to which clients can send token requests.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>This topic defines guidelines for implementing retry logic when token requests fail.</source>
            <target state="new">This topic defines guidelines for implementing retry logic when token requests fail.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Error-Handling Scenarios</source>
            <target state="new">Error-Handling Scenarios</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Token request failures that return HTTP 500-series error codes typically respond to retries.</source>
            <target state="new">Token request failures that return HTTP 500-series error codes typically respond to retries.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>In some scenarios, the client is an application or service that makes automated requests to <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph>.</source>
            <target state="new">In some scenarios, the client is an application or service that makes automated requests to <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>In other scenarios, such as web-based federation that uses the WS-Federation protocol, the client is a web browser and the end-user must retry the operation manually.</source>
            <target state="new">In other scenarios, such as web-based federation that uses the WS-Federation protocol, the client is a web browser and the end-user must retry the operation manually.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>This topic covers error-handling scenarios in which the client is an application or service.</source>
            <target state="new">This topic covers error-handling scenarios in which the client is an application or service.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>These scenarios include:</source>
            <target state="new">These scenarios include:</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Management operations that use the <ph id="1">&lt;link xlink:href="f69b173a-fcf8-4f59-864a-09b05541d3df" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;ACS Management Service&lt;/link&gt;</ph></source>
            <target state="new">Management operations that use the <ph id="1">&lt;link xlink:href="f69b173a-fcf8-4f59-864a-09b05541d3df" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;ACS Management Service&lt;/link&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Token requests for Web Services using the OAuth WRAP protocol (see <ph id="1">&lt;link xlink:href="c735424a-3def-46ee-a9a1-846753e45ea0" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;How To: Request a Token from ACS via the OAuth WRAP Protocol&lt;/link&gt;</ph>)</source>
            <target state="new">Token requests for Web Services using the OAuth WRAP protocol (see <ph id="1">&lt;link xlink:href="c735424a-3def-46ee-a9a1-846753e45ea0" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;How To: Request a Token from ACS via the OAuth WRAP Protocol&lt;/link&gt;</ph>)</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Token requests for Web Services using the OAuth 2.0 protocol (see <ph id="1">&lt;link xlink:href="5616fe6e-d347-448a-ab51-c1f8740f230b" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Code Sample: OAuth 2.0 Certificate Authentication&lt;/link&gt;</ph>)</source>
            <target state="new">Token requests for Web Services using the OAuth 2.0 protocol (see <ph id="1">&lt;link xlink:href="5616fe6e-d347-448a-ab51-c1f8740f230b" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Code Sample: OAuth 2.0 Certificate Authentication&lt;/link&gt;</ph>)</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Retry Guidelines</source>
            <target state="new">Retry Guidelines</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The following guidelines explain how to implement retry logic in the error-handling scenarios.</source>
            <target state="new">The following guidelines explain how to implement retry logic in the error-handling scenarios.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Guideline #1: Implement retry logic based on HTTP 500-series error responses</source>
            <target state="new">Guideline #1: Implement retry logic based on HTTP 500-series error responses</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Retry logic is strongly recommended when <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph> returns HTTP 500-series errors.</source>
            <target state="new">Retry logic is strongly recommended when <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph> returns HTTP 500-series errors.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The following list includes examples of typical HTTP 500-series errors.</source>
            <target state="new">The following list includes examples of typical HTTP 500-series errors.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>HTTP Error 500 - Internal Server Error</source>
            <target state="new">HTTP Error 500 - Internal Server Error</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>HTTP Error 502 - Bad Gateway</source>
            <target state="new">HTTP Error 502 - Bad Gateway</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>HTTP Error 503 - Service Unavailable</source>
            <target state="new">HTTP Error 503 - Service Unavailable</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>HTTP Error 504 – Gateway Timeout</source>
            <target state="new">HTTP Error 504 – Gateway Timeout</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Although individual HTTP codes can be enumerated in the retry logic, it is sufficient to invoke retry logic if any HTTP 500-series error is returned.</source>
            <target state="new">Although individual HTTP codes can be enumerated in the retry logic, it is sufficient to invoke retry logic if any HTTP 500-series error is returned.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Retry logic should be triggered by HTTP error codes, such as HTTP 504 (External server timeout), and not by <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph> error codes, such as ACS90005.</source>
            <target state="new">Retry logic should be triggered by HTTP error codes, such as HTTP 504 (External server timeout), and not by <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph> error codes, such as ACS90005.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph> error codes are informational and subject to change.</source>
            <target state="new"><ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph> error codes are informational and subject to change.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Typically, retry logic is not recommended when HTTP 400-series error codes are returned.</source>
            <target state="new">Typically, retry logic is not recommended when HTTP 400-series error codes are returned.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>A 400-series HTTP error response code from <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph> means the request is invalid and needs to be revised.</source>
            <target state="new">A 400-series HTTP error response code from <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph> means the request is invalid and needs to be revised.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>One exception is error code 429 ("Too many requests"), which indicates that the namespace has exceeded the token request rate limit for an extended period.</source>
            <target state="new">One exception is error code 429 ("Too many requests"), which indicates that the namespace has exceeded the token request rate limit for an extended period.</target>
          </trans-unit>
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>For 429 errors, retries with a backoff timer can resolve the immediate token request backlog until the administrator has time to review and revise the namespace workload distribution.</source>
            <target state="new">For 429 errors, retries with a backoff timer can resolve the immediate token request backlog until the administrator has time to review and revise the namespace workload distribution.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="22b73867-4825-4c3f-927b-0ddd148d0566" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;ACS Service Limitations&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="22b73867-4825-4c3f-927b-0ddd148d0566" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;ACS Service Limitations&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Guideline #2: Retries should use a back-off timer for optimal flow control</source>
            <target state="new">Guideline #2: Retries should use a back-off timer for optimal flow control</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>When a client receives an HTTP 500-series error, the client should wait for a specified period of time before retrying the request.</source>
            <target state="new">When a client receives an HTTP 500-series error, the client should wait for a specified period of time before retrying the request.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>For best results, it is recommended that this period of time increase with each subsequent retry.</source>
            <target state="new">For best results, it is recommended that this period of time increase with each subsequent retry.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>This approach allows transient errors to be resolved quickly while optimizing the request rate for transient network or server issues that take longer to resolve.</source>
            <target state="new">This approach allows transient errors to be resolved quickly while optimizing the request rate for transient network or server issues that take longer to resolve.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>For example, use an exponential back-off timer where the delay before retry increases exponentially with each instance, such as Retry 1: 1 second, Retry 2: 2 seconds, Retry 3: 4 seconds, and so on.</source>
            <target state="new">For example, use an exponential back-off timer where the delay before retry increases exponentially with each instance, such as Retry 1: 1 second, Retry 2: 2 seconds, Retry 3: 4 seconds, and so on.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Adjust the number of retries and the time between each retry based on your user experience requirements.</source>
            <target state="new">Adjust the number of retries and the time between each retry based on your user experience requirements.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>However, we recommend up to five retries over a period of five minutes.</source>
            <target state="new">However, we recommend up to five retries over a period of five minutes.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Failures caused by a timeout take longer to resolve.</source>
            <target state="new">Failures caused by a timeout take longer to resolve.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Guideline #3: Verify that the item does not exist before attempting to create or delete it</source>
            <target state="new">Guideline #3: Verify that the item does not exist before attempting to create or delete it</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>When performing create or delete operations with the <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph> Management Service, such as creating a new relying party application or deleting a rule, the retry logic should query if the item exists before performing the operation.In some circumstances, such as a transient network failure that occurs while delivering the server response, a creation or deletion operation can succeed even when the client gets an error response.</source>
            <target state="new">When performing create or delete operations with the <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph> Management Service, such as creating a new relying party application or deleting a rule, the retry logic should query if the item exists before performing the operation.In some circumstances, such as a transient network failure that occurs while delivering the server response, a creation or deletion operation can succeed even when the client gets an error response.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>If a create operation is retried without checking for the existence of the item, duplicate items can being created.</source>
            <target state="new">If a create operation is retried without checking for the existence of the item, duplicate items can being created.</target>
          </trans-unit>
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>, Also, the system might return an HTTP 400 error if the item must be unique.</source>
            <target state="new">, Also, the system might return an HTTP 400 error if the item must be unique.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>If a delete operation is retried without checking for the existence of the item, the system might return an HTTP 400 error when it cannot find the item.</source>
            <target state="new">If a delete operation is retried without checking for the existence of the item, the system might return an HTTP 400 error when it cannot find the item.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>