<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ko-KR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANylEKgzAMANCr5AANtGl07U4w2N/YBZKagMxZUAcef36/555NmRqaMSMnj6ixKLaYZKzVk0gNMFTWMqnipBSR6QqaR0PPKq2R56ZjgNbK5FITcraMbJSwMA1ozrckdbBKFCAF+HR8vgKcy+xu53Hfej8CXFYCPH5fWd+brPsix9zXP+foZcihAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Message Headers and Properties</source>
            <target state="new">Message Headers and Properties</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>This section describes message headers and properties.</source>
            <target state="new">This section describes message headers and properties.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Message headers</source>
            <target state="new">Message headers</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>One HTTP header named <ph id="1">&lt;codeInline&gt;BrokerProperties&lt;/codeInline&gt;</ph> contains all the <ph id="2">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph> headers.</source>
            <target state="new">One HTTP header named <ph id="1">&lt;codeInline&gt;BrokerProperties&lt;/codeInline&gt;</ph> contains all the <ph id="2">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph> headers.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The properties are JSON-formatted.</source>
            <target state="new">The properties are JSON-formatted.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>This makes it easy to extend the <ph id="1">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph> properties.</source>
            <target state="new">This makes it easy to extend the <ph id="1">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph> properties.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Also, it aligns to the web programming model by leveraging the web-friendly JSON format.</source>
            <target state="new">Also, it aligns to the web programming model by leveraging the web-friendly JSON format.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>This makes it easy to produce and consume message properties with less string parsing.</source>
            <target state="new">This makes it easy to produce and consume message properties with less string parsing.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>The following is an example of <ph id="1">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph> headers:</source>
            <target state="new">The following is an example of <ph id="1">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph> headers:</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>The following table illustrates how <ph id="1">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph> properties are mapped to HTTP headers.</source>
            <target state="new">The following table illustrates how <ph id="1">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph> properties are mapped to HTTP headers.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph> (SBMP) Parts</source>
            <target state="new"><ph id="1">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph> (SBMP) Parts</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Type</source>
            <target state="new">Type</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>HTTP header</source>
            <target state="new">HTTP header</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Accessibility</source>
            <target state="new">Accessibility</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>HTTP Req/Res</source>
            <target state="new">HTTP Req/Res</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>ContentType</source>
            <target state="new">ContentType</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Content-Type</source>
            <target state="new">Content-Type</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>get, set</source>
            <target state="new">get, set</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Req, Res</source>
            <target state="new">Req, Res</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>CorrelationId</source>
            <target state="new">CorrelationId</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>BrokerProperties{CorrelationId}</source>
            <target state="new">BrokerProperties{CorrelationId}</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>get, set</source>
            <target state="new">get, set</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Req, Res</source>
            <target state="new">Req, Res</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>SessionID</source>
            <target state="new">SessionID</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>BrokerProperties {SessionId}</source>
            <target state="new">BrokerProperties {SessionId}</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>get, set</source>
            <target state="new">get, set</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Req, Res</source>
            <target state="new">Req, Res</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>DeliveryCount</source>
            <target state="new">DeliveryCount</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>int</source>
            <target state="new">int</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>BrokerProperties {DeliveryCount }</source>
            <target state="new">BrokerProperties {DeliveryCount }</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>get</source>
            <target state="new">get</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Res</source>
            <target state="new">Res</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>LockedUntilUtc</source>
            <target state="new">LockedUntilUtc</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>DateTime</source>
            <target state="new">DateTime</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>BrokerProperties{LockedUntil}</source>
            <target state="new">BrokerProperties{LockedUntil}</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>get</source>
            <target state="new">get</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Res</source>
            <target state="new">Res</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>LockToken</source>
            <target state="new">LockToken</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Guid</source>
            <target state="new">Guid</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>BrokerProperties{LockToken}</source>
            <target state="new">BrokerProperties{LockToken}</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>get</source>
            <target state="new">get</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Res</source>
            <target state="new">Res</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>MessageId</source>
            <target state="new">MessageId</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>BrokerProperties{MessageId}</source>
            <target state="new">BrokerProperties{MessageId}</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>get, set</source>
            <target state="new">get, set</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>Res</source>
            <target state="new">Res</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>Label</source>
            <target state="new">Label</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>BrokerProperties {Label}</source>
            <target state="new">BrokerProperties {Label}</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>get, set</source>
            <target state="new">get, set</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>Req, Res</source>
            <target state="new">Req, Res</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>ReplyTo</source>
            <target state="new">ReplyTo</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>BrokerProperties {ReplyTo}</source>
            <target state="new">BrokerProperties {ReplyTo}</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>get, set</source>
            <target state="new">get, set</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>Req, Res</source>
            <target state="new">Req, Res</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>EnqueuedTimeUtc</source>
            <target state="new">EnqueuedTimeUtc</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>DateTime</source>
            <target state="new">DateTime</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>Date</source>
            <target state="new">Date</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>get</source>
            <target state="new">get</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>Res</source>
            <target state="new">Res</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>SequenceNumber</source>
            <target state="new">SequenceNumber</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>long</source>
            <target state="new">long</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>BrokerProperties {SequenceNumber}</source>
            <target state="new">BrokerProperties {SequenceNumber}</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>get</source>
            <target state="new">get</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>Res</source>
            <target state="new">Res</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>TimeToLive</source>
            <target state="new">TimeToLive</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>TimeSpan</source>
            <target state="new">TimeSpan</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>BrokerProperties collection {TimeToLive}</source>
            <target state="new">BrokerProperties collection {TimeToLive}</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>get, set</source>
            <target state="new">get, set</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>Req, Res</source>
            <target state="new">Req, Res</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>To</source>
            <target state="new">To</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>BrokerProperties {To}</source>
            <target state="new">BrokerProperties {To}</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>get, set</source>
            <target state="new">get, set</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>Req, Res</source>
            <target state="new">Req, Res</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>ScheduledEnqueueTimeUtc</source>
            <target state="new">ScheduledEnqueueTimeUtc</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>DateTime</source>
            <target state="new">DateTime</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>BrokerProperties {ScheduledEnqueueTimeUtc}</source>
            <target state="new">BrokerProperties {ScheduledEnqueueTimeUtc}</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>get, set</source>
            <target state="new">get, set</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>Req, Res</source>
            <target state="new">Req, Res</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>ReplyToSessionId</source>
            <target state="new">ReplyToSessionId</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>string</source>
            <target state="new">string</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>BrokerProperties {ReplyToSessionId}</source>
            <target state="new">BrokerProperties {ReplyToSessionId}</target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>get, set</source>
            <target state="new">get, set</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>Req, Res</source>
            <target state="new">Req, Res</target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>Notes</source>
            <target state="new">Notes</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;languageKeyword&gt;DateTime&lt;/languageKeyword&gt;</ph> headers are formatted as defined by RFC2616: <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept>.</source>
            <target state="new"><ph id="1">&lt;languageKeyword&gt;DateTime&lt;/languageKeyword&gt;</ph> headers are formatted as defined by RFC2616: <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>For example, “Sun, 06 Nov 1994 08:49:37 GMT”.</source>
            <target state="new">For example, “Sun, 06 Nov 1994 08:49:37 GMT”.</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>BrokerProperties {TimeToLive}<ept id="1">&lt;/embeddedLabel&gt;</ept> is the number of seconds of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>TimeSpan (double)<ept id="2">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>BrokerProperties {TimeToLive}<ept id="1">&lt;/embeddedLabel&gt;</ept> is the number of seconds of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>TimeSpan (double)<ept id="2">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;languageKeyword&gt;ExpiresAtUtc&lt;/languageKeyword&gt;</ph> does not have a corresponding HTTP header because it can be derived from <ph id="2">&lt;languageKeyword&gt;Date&lt;/languageKeyword&gt;</ph> and <ph id="3">&lt;languageKeyword&gt;BrokerProperties {TimeToLive}&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;languageKeyword&gt;ExpiresAtUtc&lt;/languageKeyword&gt;</ph> does not have a corresponding HTTP header because it can be derived from <ph id="2">&lt;languageKeyword&gt;Date&lt;/languageKeyword&gt;</ph> and <ph id="3">&lt;languageKeyword&gt;BrokerProperties {TimeToLive}&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>Message headers with a <bpt id="1">&lt;embeddedLabel&gt;</bpt>get<ept id="1">&lt;/embeddedLabel&gt;</ept> accessor can only appear in the HTTP response (for example, received message).</source>
            <target state="new">Message headers with a <bpt id="1">&lt;embeddedLabel&gt;</bpt>get<ept id="1">&lt;/embeddedLabel&gt;</ept> accessor can only appear in the HTTP response (for example, received message).</target>
          </trans-unit>
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>When these headers are present in the HTTP request (that is, sent message), they are silently ignored.</source>
            <target state="new">When these headers are present in the HTTP request (that is, sent message), they are silently ignored.</target>
          </trans-unit>
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>Unrecognized HTTP headers are also silently ignored.</source>
            <target state="new">Unrecognized HTTP headers are also silently ignored.</target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>If the value is malformed, an appropriate HTTP status code is returned to the client.</source>
            <target state="new">If the value is malformed, an appropriate HTTP status code is returned to the client.</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>Message properties</source>
            <target state="new">Message properties</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>Message properties are user-defined key-value pairs contained in <ph id="1">&lt;codeInline&gt;message.Properties&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Message properties are user-defined key-value pairs contained in <ph id="1">&lt;codeInline&gt;message.Properties&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>For the SBMP thick client, the values are restricted to <ph id="1">&lt;languageKeyword&gt;byte&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;sbyte&lt;/languageKeyword&gt;</ph>, <ph id="3">&lt;languageKeyword&gt;char&lt;/languageKeyword&gt;</ph>, <ph id="4">&lt;languageKeyword&gt;short&lt;/languageKeyword&gt;</ph>, <ph id="5">&lt;languageKeyword&gt;ushort&lt;/languageKeyword&gt;</ph>, <ph id="6">&lt;languageKeyword&gt;int&lt;/languageKeyword&gt;</ph>, <ph id="7">&lt;languageKeyword&gt;uint&lt;/languageKeyword&gt;</ph>, <ph id="8">&lt;languageKeyword&gt;long&lt;/languageKeyword&gt;</ph>, <ph id="9">&lt;languageKeyword&gt;ulong&lt;/languageKeyword&gt;</ph>, <ph id="10">&lt;languageKeyword&gt;float&lt;/languageKeyword&gt;</ph>, <ph id="11">&lt;languageKeyword&gt;double&lt;/languageKeyword&gt;</ph>, <ph id="12">&lt;languageKeyword&gt;decimal&lt;/languageKeyword&gt;</ph>, <ph id="13">&lt;languageKeyword&gt;bool&lt;/languageKeyword&gt;</ph>, <ph id="14">&lt;languageKeyword&gt;Guid&lt;/languageKeyword&gt;</ph>, <ph id="15">&lt;languageKeyword&gt;string&lt;/languageKeyword&gt;</ph>, <ph id="16">&lt;languageKeyword&gt;Uri&lt;/languageKeyword&gt;</ph>, <ph id="17">&lt;languageKeyword&gt;DateTime&lt;/languageKeyword&gt;</ph>, <ph id="18">&lt;languageKeyword&gt;DateTimeOffset&lt;/languageKeyword&gt;</ph>, and <ph id="19">&lt;languageKeyword&gt;TimeSpan&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">For the SBMP thick client, the values are restricted to <ph id="1">&lt;languageKeyword&gt;byte&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;sbyte&lt;/languageKeyword&gt;</ph>, <ph id="3">&lt;languageKeyword&gt;char&lt;/languageKeyword&gt;</ph>, <ph id="4">&lt;languageKeyword&gt;short&lt;/languageKeyword&gt;</ph>, <ph id="5">&lt;languageKeyword&gt;ushort&lt;/languageKeyword&gt;</ph>, <ph id="6">&lt;languageKeyword&gt;int&lt;/languageKeyword&gt;</ph>, <ph id="7">&lt;languageKeyword&gt;uint&lt;/languageKeyword&gt;</ph>, <ph id="8">&lt;languageKeyword&gt;long&lt;/languageKeyword&gt;</ph>, <ph id="9">&lt;languageKeyword&gt;ulong&lt;/languageKeyword&gt;</ph>, <ph id="10">&lt;languageKeyword&gt;float&lt;/languageKeyword&gt;</ph>, <ph id="11">&lt;languageKeyword&gt;double&lt;/languageKeyword&gt;</ph>, <ph id="12">&lt;languageKeyword&gt;decimal&lt;/languageKeyword&gt;</ph>, <ph id="13">&lt;languageKeyword&gt;bool&lt;/languageKeyword&gt;</ph>, <ph id="14">&lt;languageKeyword&gt;Guid&lt;/languageKeyword&gt;</ph>, <ph id="15">&lt;languageKeyword&gt;string&lt;/languageKeyword&gt;</ph>, <ph id="16">&lt;languageKeyword&gt;Uri&lt;/languageKeyword&gt;</ph>, <ph id="17">&lt;languageKeyword&gt;DateTime&lt;/languageKeyword&gt;</ph>, <ph id="18">&lt;languageKeyword&gt;DateTimeOffset&lt;/languageKeyword&gt;</ph>, and <ph id="19">&lt;languageKeyword&gt;TimeSpan&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="94">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>For REST/HTTP, <ph id="1">&lt;languageKeyword&gt;Uri&lt;/languageKeyword&gt;</ph> and <ph id="2">&lt;languageKeyword&gt;DateTimeOffset&lt;/languageKeyword&gt;</ph> are not supported (if they are in the <ph id="3">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph>, they are not included in the HTTP headers).</source>
            <target state="new">For REST/HTTP, <ph id="1">&lt;languageKeyword&gt;Uri&lt;/languageKeyword&gt;</ph> and <ph id="2">&lt;languageKeyword&gt;DateTimeOffset&lt;/languageKeyword&gt;</ph> are not supported (if they are in the <ph id="3">&lt;languageKeyword&gt;BrokeredMessage&lt;/languageKeyword&gt;</ph>, they are not included in the HTTP headers).</target>
          </trans-unit>
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>GUID types are converted to strings and <ph id="1">&lt;languageKeyword&gt;TimeSpan&lt;/languageKeyword&gt;</ph> types are converted to “total seconds.”</source>
            <target state="new">GUID types are converted to strings and <ph id="1">&lt;languageKeyword&gt;TimeSpan&lt;/languageKeyword&gt;</ph> types are converted to “total seconds.”</target>
          </trans-unit>
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>Due to these conversions, the type fidelity will be lost.</source>
            <target state="new">Due to these conversions, the type fidelity will be lost.</target>
          </trans-unit>
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>Any property name that corresponds to the restricted HTTP header (for example, <ph id="1">&lt;languageKeyword&gt;Connection&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;Expect&lt;/languageKeyword&gt;</ph>, and so on), is also excluded.</source>
            <target state="new">Any property name that corresponds to the restricted HTTP header (for example, <ph id="1">&lt;languageKeyword&gt;Connection&lt;/languageKeyword&gt;</ph>, <ph id="2">&lt;languageKeyword&gt;Expect&lt;/languageKeyword&gt;</ph>, and so on), is also excluded.</target>
          </trans-unit>
        </group>
        <group id="95">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>Each key-value pair in <ph id="1">&lt;codeInline&gt;message.Properties&lt;/codeInline&gt;</ph> will be mapped to an HTTP header in the following format.</source>
            <target state="new">Each key-value pair in <ph id="1">&lt;codeInline&gt;message.Properties&lt;/codeInline&gt;</ph> will be mapped to an HTTP header in the following format.</target>
          </trans-unit>
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;parameterReference&gt;prop&lt;/parameterReference&gt;</ph> is the key name, and <ph id="2">&lt;parameterReference&gt;value&lt;/parameterReference&gt;</ph> is the string representation of the value:</source>
            <target state="new"><ph id="1">&lt;parameterReference&gt;prop&lt;/parameterReference&gt;</ph> is the key name, and <ph id="2">&lt;parameterReference&gt;value&lt;/parameterReference&gt;</ph> is the string representation of the value:</target>
          </trans-unit>
        </group>
        <group id="96">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>The type of value is inferred.</source>
            <target state="new">The type of value is inferred.</target>
          </trans-unit>
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>If it is surrounded with double quotes, then:</source>
            <target state="new">If it is surrounded with double quotes, then:</target>
          </trans-unit>
        </group>
        <group id="97">
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>If the content has the form of an RFC2616 date time, then the broker treats it as a <ph id="1">&lt;languageKeyword&gt;System.DateTime&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">If the content has the form of an RFC2616 date time, then the broker treats it as a <ph id="1">&lt;languageKeyword&gt;System.DateTime&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="98">
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>Otherwise, the broker removes the quotes and treats the content as a <ph id="1">&lt;languageKeyword&gt;System.String&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">Otherwise, the broker removes the quotes and treats the content as a <ph id="1">&lt;languageKeyword&gt;System.String&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="99">
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>If it is not surrounded with double quotes, then:</source>
            <target state="new">If it is not surrounded with double quotes, then:</target>
          </trans-unit>
        </group>
        <group id="100">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>If the content is true or false (case-sensitive!), then the broker treats it as a <ph id="1">&lt;languageKeyword&gt;System.Boolean&lt;/languageKeyword&gt;</ph> with the corresponding value.</source>
            <target state="new">If the content is true or false (case-sensitive!), then the broker treats it as a <ph id="1">&lt;languageKeyword&gt;System.Boolean&lt;/languageKeyword&gt;</ph> with the corresponding value.</target>
          </trans-unit>
        </group>
        <group id="101">
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>If the content can be parsed as an integer, then the broker treats it as a System.Int64.</source>
            <target state="new">If the content can be parsed as an integer, then the broker treats it as a System.Int64.</target>
          </trans-unit>
        </group>
        <group id="102">
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>If the content can be parsed as a floating-point number, then the broker treats it as a <ph id="1">&lt;languageKeyword&gt;System.Double&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">If the content can be parsed as a floating-point number, then the broker treats it as a <ph id="1">&lt;languageKeyword&gt;System.Double&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="103">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source>Otherwise, the broker rejects the message.</source>
            <target state="new">Otherwise, the broker rejects the message.</target>
          </trans-unit>
        </group>
        <group id="104">
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
        </group>
        <group id="105">
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>Message body</source>
            <target state="new">Message body</target>
          </trans-unit>
        </group>
        <group id="106">
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>No conversions are performed between the HTTP request/response body stream and the <ph id="1">&lt;languageKeyword&gt;BrokerMessage.BodyStream&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">No conversions are performed between the HTTP request/response body stream and the <ph id="1">&lt;languageKeyword&gt;BrokerMessage.BodyStream&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>Also, the <ph id="1">&lt;codeInline&gt;Content-Type&lt;/codeInline&gt;</ph> header from the HTTP request is preserved and returned to the message receiver to allow the application to correctly interpret the bytes in the body.</source>
            <target state="new">Also, the <ph id="1">&lt;codeInline&gt;Content-Type&lt;/codeInline&gt;</ph> header from the HTTP request is preserved and returned to the message receiver to allow the application to correctly interpret the bytes in the body.</target>
          </trans-unit>
        </group>
        <group id="107">
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>If the message is created with the SBMP thick client without a custom xml object serializer, the content type will default to “application/msbin1”, which is the <ph id="1">&lt;languageKeyword&gt;DataContractBinarySerializer&lt;/languageKeyword&gt;</ph>, unless the application explicitly changes it (for example, <ph id="2">&lt;codeInline&gt;message.ContectType=”application/mytype”&lt;/codeInline&gt;</ph>) after the message is created.</source>
            <target state="new">If the message is created with the SBMP thick client without a custom xml object serializer, the content type will default to “application/msbin1”, which is the <ph id="1">&lt;languageKeyword&gt;DataContractBinarySerializer&lt;/languageKeyword&gt;</ph>, unless the application explicitly changes it (for example, <ph id="2">&lt;codeInline&gt;message.ContectType=”application/mytype”&lt;/codeInline&gt;</ph>) after the message is created.</target>
          </trans-unit>
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source>This content type value is returned to the HTTP consumer.</source>
            <target state="new">This content type value is returned to the HTTP consumer.</target>
          </trans-unit>
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>It is the responsibility of the application to decide how to deserialize the bytes in the body.</source>
            <target state="new">It is the responsibility of the application to decide how to deserialize the bytes in the body.</target>
          </trans-unit>
        </group>
        <group id="108">
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> binding sets the <ph id="3">&lt;languageKeyword&gt;ContentType&lt;/languageKeyword&gt;</ph> to the message encoder’s <ph id="4">&lt;languageKeyword&gt;ContentType&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">The <ph id="1">&lt;token&gt;indigo2&lt;/token&gt;</ph> <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> binding sets the <ph id="3">&lt;languageKeyword&gt;ContentType&lt;/languageKeyword&gt;</ph> to the message encoder’s <ph id="4">&lt;languageKeyword&gt;ContentType&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>For example, if a text message encoder is used, the <ph id="1">&lt;languageKeyword&gt;Content-Type&lt;/languageKeyword&gt;</ph> is expected to be <ph id="2">&lt;codeInline&gt;“application/soap+xml”&lt;/codeInline&gt;</ph>.</source>
            <target state="new">For example, if a text message encoder is used, the <ph id="1">&lt;languageKeyword&gt;Content-Type&lt;/languageKeyword&gt;</ph> is expected to be <ph id="2">&lt;codeInline&gt;“application/soap+xml”&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="109">
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source>Message conversion</source>
            <target state="new">Message conversion</target>
          </trans-unit>
        </group>
        <group id="110">
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>Conversion between an HTTP request/response and a message is performed at the HTTP messaging runtime provider.</source>
            <target state="new">Conversion between an HTTP request/response and a message is performed at the HTTP messaging runtime provider.</target>
          </trans-unit>
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source>The conversion methods are augmented to include the header/properties mapping in the table earlier in this section, and to preserve the content-type of the message.</source>
            <target state="new">The conversion methods are augmented to include the header/properties mapping in the table earlier in this section, and to preserve the content-type of the message.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>