<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ko-KR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAAdzFsKwjAQQNGtZAEZyKSTR12B4J+4gZkkA8WaQK3Q5Vv9PperOjUhX6A1IiBUB+KyQHHIcZ4VmWdrGFE0IUINrgKR8FkxAolKxdqC4mRN8pKjhvCzCJRqBEmxQDlHDnOoIao1aM1zwO1uzbEuqu3YL9sY+x+8NdfPi/tj4/5eeV9G/wIcQjy+oQAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="content">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>The ChaosTestScenario is a long running scenario which keeps inducing failover and faults into the cluster up until the TimetoRun has expired.</source>
            <target state="new">The ChaosTestScenario is a long running scenario which keeps inducing failover and faults into the cluster up until the TimetoRun has expired.</target>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>The test will induce upto 'maxConcurrentFaults' every iteration and then will validate the health and availability of all the services in the cluster before moving on to the next iteration of faults.</source>
            <target state="new">The test will induce upto 'maxConcurrentFaults' every iteration and then will validate the health and availability of all the services in the cluster before moving on to the next iteration of faults.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>If at any point the services are not available or healthy by 'maxClusterStabilizationTimeout' the test will fail with a FabricValidationException.</source>
            <target state="new">If at any point the services are not available or healthy by 'maxClusterStabilizationTimeout' the test will fail with a FabricValidationException.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>For every iteration the concurrent faults that are induced into the system ensure safety such that the faults together will not cause any service to become unavailable or lose any data.</source>
            <target state="new">For every iteration the concurrent faults that are induced into the system ensure safety such that the faults together will not cause any service to become unavailable or lose any data.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>This assumes no faults induced from the outside or any unexpected failures which if they happen (concurrent with the chaos test faults) can cause data availability loss.</source>
            <target state="new">This assumes no faults induced from the outside or any unexpected failures which if they happen (concurrent with the chaos test faults) can cause data availability loss.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>This is a very good test to run against your test or staging clusters which test workloads are running to ensure that faults in the system do not result in any sort of availability loss or other unexpected service issues.</source>
            <target state="new">This is a very good test to run against your test or staging clusters which test workloads are running to ensure that faults in the system do not result in any sort of availability loss or other unexpected service issues.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>