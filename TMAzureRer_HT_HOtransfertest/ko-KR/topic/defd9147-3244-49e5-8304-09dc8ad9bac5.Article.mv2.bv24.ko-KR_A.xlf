<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ko-KR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAAVzFEKwjAMgOGr9AANpGu6Np5A8E28QNomMJwr6IQd3wn/48dvFrXS1ECVCCgYQsVSoWGQmdmCCHvX2WKx3iATKlBPCUpWhkq1abKU04ynUuscKEOc/i/WU0UkQO6tSOcqLXkXvHsOuN29O9bFTI/98h5j9246I++u35dsj7dsn1X2ZWw/0b4Dw6IAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Creating a Secure Connection</source>
            <target state="new">Creating a Secure Connection</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Securing and Authenticating a Service Bus Connection</source>
            <target state="new">Securing and Authenticating a Service Bus Connection</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>This section describes specific processes for using authentication on <ph id="1">&lt;token&gt;sb1&lt;/token&gt;</ph>.</source>
            <target state="new">This section describes specific processes for using authentication on <ph id="1">&lt;token&gt;sb1&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Applications that use <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> are required to perform security tasks at two points.</source>
            <target state="new">Applications that use <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> are required to perform security tasks at two points.</target>
          </trans-unit>
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>First, services exposed for use by <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> are <bpt id="2">&lt;newTerm&gt;</bpt>resources<ept id="2">&lt;/newTerm&gt;</ept>.</source>
            <target state="new">First, services exposed for use by <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> are <bpt id="2">&lt;newTerm&gt;</bpt>resources<ept id="2">&lt;/newTerm&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Therefore, access to them -- whether for configuration and registration purposes or for invoking service functionality -- requires authentication and authorization using tokens.</source>
            <target state="new">Therefore, access to them -- whether for configuration and registration purposes or for invoking service functionality -- requires authentication and authorization using tokens.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Second, when permission to interact with the service has been granted by <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, the service has its own security considerations that are associated with the authentication, authorization, encryption, and signatures required by the message exchange itself.</source>
            <target state="new">Second, when permission to interact with the service has been granted by <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, the service has its own security considerations that are associated with the authentication, authorization, encryption, and signatures required by the message exchange itself.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>This second set of security issues has nothing to do with the functionality of <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>; it is purely a consideration of the service and its clients.</source>
            <target state="new">This second set of security issues has nothing to do with the functionality of <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>; it is purely a consideration of the service and its clients.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>In the first case, the authentication and authorization to use a service exposed by <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> are controlled either by a Shared Access Signature (SAS) token (or by a token issued by the <ph id="2">&lt;token&gt;ac2&lt;/token&gt;</ph> Service, not recommended), and can be programmatically accessed through the <ph id="3">&lt;token&gt;sb2&lt;/token&gt;</ph> API.</source>
            <target state="new">In the first case, the authentication and authorization to use a service exposed by <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> are controlled either by a Shared Access Signature (SAS) token (or by a token issued by the <ph id="2">&lt;token&gt;ac2&lt;/token&gt;</ph> Service, not recommended), and can be programmatically accessed through the <ph id="3">&lt;token&gt;sb2&lt;/token&gt;</ph> API.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>There are three types of authentication currently available:</source>
            <target state="new">There are three types of authentication currently available:</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeEntityReference&gt;Overload:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider&lt;/codeEntityReference&gt;</ph>, which is used to define a SAS token provider credential.</source>
            <target state="new"><ph id="1">&lt;codeEntityReference&gt;Overload:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider&lt;/codeEntityReference&gt;</ph>, which is used to define a SAS token provider credential.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;Overload:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider&lt;/codeEntityReference&gt;</ph>, which can be used to interact with SAML 2.0 authentication systems.</source>
            <target state="new"><ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;Overload:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider&lt;/codeEntityReference&gt;</ph>, which can be used to interact with SAML 2.0 authentication systems.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;Overload:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider&lt;/codeEntityReference&gt;</ph>, which uses the OAuth Web Resource Authorization Protocol (WRAP)and Simple Web Tokens (SWT).</source>
            <target state="new"><ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;Overload:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider&lt;/codeEntityReference&gt;</ph>, which uses the OAuth Web Resource Authorization Protocol (WRAP)and Simple Web Tokens (SWT).</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Every <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> relay binding has a security binding element – for example, the <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement&lt;/codeEntityReference&gt;</ph> class performs the security functions for the <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetTcpRelayBinding&lt;/codeEntityReference&gt;</ph> – that contains the following security values that you can specify either programmatically or in a configuration file.</source>
            <target state="new">Every <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> relay binding has a security binding element – for example, the <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement&lt;/codeEntityReference&gt;</ph> class performs the security functions for the <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetTcpRelayBinding&lt;/codeEntityReference&gt;</ph> – that contains the following security values that you can specify either programmatically or in a configuration file.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Short for <bpt id="1">&lt;newTerm&gt;</bpt>end-to-end security mode<ept id="1">&lt;/newTerm&gt;</ept>, this value defines the security across the message exchange through <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">Short for <bpt id="1">&lt;newTerm&gt;</bpt>end-to-end security mode<ept id="1">&lt;/newTerm&gt;</ept>, this value defines the security across the message exchange through <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>The programmatic value depends on the specific relay binding; for example, the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;T:Microsoft.ServiceBus.EndToEndSecurityMode&lt;/codeEntityReference&gt;</ph> class supports the <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetTcpRelayBinding&lt;/codeEntityReference&gt;</ph> binding, and the <ph id="3">&lt;codeEntityReference qualifyHint="true"&gt;T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode&lt;/codeEntityReference&gt;</ph> value performs this service together with the <ph id="4">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.WebHttpRelayBinding&lt;/codeEntityReference&gt;</ph> binding.</source>
            <target state="new">The programmatic value depends on the specific relay binding; for example, the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;T:Microsoft.ServiceBus.EndToEndSecurityMode&lt;/codeEntityReference&gt;</ph> class supports the <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetTcpRelayBinding&lt;/codeEntityReference&gt;</ph> binding, and the <ph id="3">&lt;codeEntityReference qualifyHint="true"&gt;T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode&lt;/codeEntityReference&gt;</ph> value performs this service together with the <ph id="4">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.WebHttpRelayBinding&lt;/codeEntityReference&gt;</ph> binding.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>When used with the <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetTcpRelayBinding&lt;/codeEntityReference&gt;</ph> binding, this property can be set to <ph id="2">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.None&lt;/codeEntityReference&gt;</ph>, <ph id="3">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Message&lt;/codeEntityReference&gt;</ph>, <ph id="4">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Transport&lt;/codeEntityReference&gt;</ph>, or <ph id="5">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.TransportWithMessageCredential&lt;/codeEntityReference&gt;</ph>.</source>
            <target state="new">When used with the <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetTcpRelayBinding&lt;/codeEntityReference&gt;</ph> binding, this property can be set to <ph id="2">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.None&lt;/codeEntityReference&gt;</ph>, <ph id="3">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Message&lt;/codeEntityReference&gt;</ph>, <ph id="4">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Transport&lt;/codeEntityReference&gt;</ph>, or <ph id="5">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.TransportWithMessageCredential&lt;/codeEntityReference&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>The default is <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Transport&lt;/codeEntityReference&gt;</ph>, which means that the transport-specific security settings are enabled.</source>
            <target state="new">The default is <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Transport&lt;/codeEntityReference&gt;</ph>, which means that the transport-specific security settings are enabled.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>If you use any setting that includes <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Message&lt;/codeEntityReference&gt;</ph> or <ph id="2">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Transport&lt;/codeEntityReference&gt;</ph>, you must set additional properties.</source>
            <target state="new">If you use any setting that includes <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Message&lt;/codeEntityReference&gt;</ph> or <ph id="2">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Transport&lt;/codeEntityReference&gt;</ph>, you must set additional properties.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>In general, the <ph id="1">&lt;languageKeyword&gt;Mode&lt;/languageKeyword&gt;</ph> value follows the standard <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> security programming model.</source>
            <target state="new">In general, the <ph id="1">&lt;languageKeyword&gt;Mode&lt;/languageKeyword&gt;</ph> value follows the standard <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> security programming model.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Message</source>
            <target state="new">Message</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Defines security on a per-message basis if you set end-to-end message security to <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Message&lt;/codeEntityReference&gt;</ph> or <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.TransportWithMessageCredential&lt;/codeEntityReference&gt;</ph>.</source>
            <target state="new">Defines security on a per-message basis if you set end-to-end message security to <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.Message&lt;/codeEntityReference&gt;</ph> or <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;F:Microsoft.ServiceBus.EndToEndSecurityMode.TransportWithMessageCredential&lt;/codeEntityReference&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Setting one of those values for the <ph id="1">&lt;languageKeyword&gt;Mode&lt;/languageKeyword&gt;</ph> property requires that this property also be set to specify the type of credentials that are used, and also to the algorithm that is used to help secure the credentials.</source>
            <target state="new">Setting one of those values for the <ph id="1">&lt;languageKeyword&gt;Mode&lt;/languageKeyword&gt;</ph> property requires that this property also be set to specify the type of credentials that are used, and also to the algorithm that is used to help secure the credentials.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>As with <ph id="1">&lt;languageKeyword&gt;Mode&lt;/languageKeyword&gt;</ph>, the message security setting follows the <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> programming model.</source>
            <target state="new">As with <ph id="1">&lt;languageKeyword&gt;Mode&lt;/languageKeyword&gt;</ph>, the message security setting follows the <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> programming model.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>This property is a wrapper for security properties unique to a given binding’s transport binding element.</source>
            <target state="new">This property is a wrapper for security properties unique to a given binding’s transport binding element.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>For example, the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;T:Microsoft.ServiceBus.RelayedOnewayTransportSecurity&lt;/codeEntityReference&gt;</ph> class exposes and implements the <ph id="2">&lt;codeEntityReference qualifyHint="true"&gt;P:Microsoft.ServiceBus.RelayedOnewayTransportSecurity.ProtectionLevel&lt;/codeEntityReference&gt;</ph> setting on the <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetEventRelayBinding&lt;/codeEntityReference&gt;</ph> and <ph id="4">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetOnewayRelayBinding&lt;/codeEntityReference&gt;</ph> bindings.</source>
            <target state="new">For example, the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;T:Microsoft.ServiceBus.RelayedOnewayTransportSecurity&lt;/codeEntityReference&gt;</ph> class exposes and implements the <ph id="2">&lt;codeEntityReference qualifyHint="true"&gt;P:Microsoft.ServiceBus.RelayedOnewayTransportSecurity.ProtectionLevel&lt;/codeEntityReference&gt;</ph> setting on the <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetEventRelayBinding&lt;/codeEntityReference&gt;</ph> and <ph id="4">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.NetOnewayRelayBinding&lt;/codeEntityReference&gt;</ph> bindings.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>In contrast, the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;T:Microsoft.ServiceBus.HttpRelayTransportSecurity&lt;/codeEntityReference&gt;</ph> type sets proxy credentials for the <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.BasicHttpRelayBinding&lt;/codeEntityReference&gt;</ph> and <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.WS2007HttpRelayBinding&lt;/codeEntityReference&gt;</ph> bindings.</source>
            <target state="new">In contrast, the <ph id="1">&lt;codeEntityReference qualifyHint="true"&gt;T:Microsoft.ServiceBus.HttpRelayTransportSecurity&lt;/codeEntityReference&gt;</ph> type sets proxy credentials for the <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.BasicHttpRelayBinding&lt;/codeEntityReference&gt;</ph> and <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.WS2007HttpRelayBinding&lt;/codeEntityReference&gt;</ph> bindings.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>As with the previous properties, <ph id="1">&lt;languageKeyword&gt;Transport&lt;/languageKeyword&gt;</ph> security generally follows the <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> security model.</source>
            <target state="new">As with the previous properties, <ph id="1">&lt;languageKeyword&gt;Transport&lt;/languageKeyword&gt;</ph> security generally follows the <ph id="2">&lt;token&gt;indigo2&lt;/token&gt;</ph> security model.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Controls whether clients of a service are required to present a security token issued by <ph id="1">&lt;token&gt;ac2&lt;/token&gt;</ph> to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> when it sends messages.</source>
            <target state="new">Controls whether clients of a service are required to present a security token issued by <ph id="1">&lt;token&gt;ac2&lt;/token&gt;</ph> to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> when it sends messages.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Therefore, this security property is unique to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, and is the focus of topics in this section of the documentation.</source>
            <target state="new">Therefore, this security property is unique to <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph>, and is the focus of topics in this section of the documentation.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Services are always required to authenticate with <ph id="1">&lt;token&gt;ac2&lt;/token&gt;</ph> and present an authorization token to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>; otherwise, they cannot register endpoints, which engages <ph id="3">&lt;token&gt;sb2&lt;/token&gt;</ph> resources.</source>
            <target state="new">Services are always required to authenticate with <ph id="1">&lt;token&gt;ac2&lt;/token&gt;</ph> and present an authorization token to <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>; otherwise, they cannot register endpoints, which engages <ph id="3">&lt;token&gt;sb2&lt;/token&gt;</ph> resources.</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>However, clients are required to authenticate with <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> only if the <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.RelayClientAuthenticationType&lt;/codeEntityReference&gt;</ph> is set to <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken&lt;/codeEntityReference&gt;</ph>.</source>
            <target state="new">However, clients are required to authenticate with <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> only if the <ph id="2">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.RelayClientAuthenticationType&lt;/codeEntityReference&gt;</ph> is set to <ph id="3">&lt;codeEntityReference qualifyHint="false"&gt;F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken&lt;/codeEntityReference&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Setting <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.RelayClientAuthenticationType&lt;/codeEntityReference&gt;</ph> to <ph id="2">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.RelayClientAuthenticationType.None&lt;/codeEntityReference&gt;</ph> waives the requirement of a token.</source>
            <target state="new">Setting <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.RelayClientAuthenticationType&lt;/codeEntityReference&gt;</ph> to <ph id="2">&lt;codeEntityReference qualifyHint="true"&gt;F:Microsoft.ServiceBus.RelayClientAuthenticationType.None&lt;/codeEntityReference&gt;</ph> waives the requirement of a token.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>If you are providing your own authentication or if you do not need authentication, you may want to opt out of authentication on the client (sender) in the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> leg of the communication.</source>
            <target state="new">If you are providing your own authentication or if you do not need authentication, you may want to opt out of authentication on the client (sender) in the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> leg of the communication.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>The default value is <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken&lt;/codeEntityReference&gt;</ph>.</source>
            <target state="new">The default value is <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken&lt;/codeEntityReference&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>In addition, every binding contains the <ph id="1">&lt;languageKeyword&gt;Scheme&lt;/languageKeyword&gt;</ph> property, which defines the scheme used to encode information.</source>
            <target state="new">In addition, every binding contains the <ph id="1">&lt;languageKeyword&gt;Scheme&lt;/languageKeyword&gt;</ph> property, which defines the scheme used to encode information.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>For HTTP-based bindings (such as <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.BasicHttpRelayBinding&lt;/codeEntityReference&gt;</ph>, the default scheme is HTTPS, which includes its own security protocols.</source>
            <target state="new">For HTTP-based bindings (such as <ph id="1">&lt;codeEntityReference qualifyHint="false"&gt;T:Microsoft.ServiceBus.BasicHttpRelayBinding&lt;/codeEntityReference&gt;</ph>, the default scheme is HTTPS, which includes its own security protocols.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>