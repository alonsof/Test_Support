<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ko-KR" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANzMsJwzAMANBVNIAEsS3Ldico9Fa6gPyD0DSGNIWMX98fr3fXMttCrTETm75QXmKmshiVlLpRTQhiiqYilqxYQxyCkoo68klczzGLVI8QJKZqQ6CouU1lpwpx1lI5V3bsfUUwCO9BjyfCta29t+u8HWOcCBZhJvffR/fXoft303Md+x/nIj5CoQAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Cross domain policies</source>
            <target state="new">Cross domain policies</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>API Management cross domain policies</source>
            <target state="new">API Management cross domain policies</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>This topic provides a reference for the following API Management policies.</source>
            <target state="new">This topic provides a reference for the following API Management policies.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>For information on adding and configuring policies, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Policies in API Management<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkID=398186&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">For information on adding and configuring policies, see <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Policies in API Management<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?LinkID=398186&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Cross domain policies</source>
            <target state="new">Cross domain policies</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;link xlink:href="7689d277-8abe-472a-a78c-e6d4bd43455d#AllowCrossDomainCalls" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Allow cross-domain calls&lt;/link&gt;</ph> - Makes the API accessible from Adobe Flash and Microsoft Silverlight browser-based clients.</source>
            <target state="new"><ph id="1">&lt;link xlink:href="7689d277-8abe-472a-a78c-e6d4bd43455d#AllowCrossDomainCalls" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Allow cross-domain calls&lt;/link&gt;</ph> - Makes the API accessible from Adobe Flash and Microsoft Silverlight browser-based clients.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;link xlink:href="7689d277-8abe-472a-a78c-e6d4bd43455d#CORS" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;CORS&lt;/link&gt;</ph> - Adds cross-origin resource sharing (CORS) support to an operation or an API to allow cross-domain calls from browser-based clients.</source>
            <target state="new"><ph id="1">&lt;link xlink:href="7689d277-8abe-472a-a78c-e6d4bd43455d#CORS" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;CORS&lt;/link&gt;</ph> - Adds cross-origin resource sharing (CORS) support to an operation or an API to allow cross-domain calls from browser-based clients.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;link xlink:href="7689d277-8abe-472a-a78c-e6d4bd43455d#JSONP" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;JSONP&lt;/link&gt;</ph> - Adds JSON with padding (JSONP) support to an operation or an API to allow cross-domain calls from JavaScript browser-based clients.</source>
            <target state="new"><ph id="1">&lt;link xlink:href="7689d277-8abe-472a-a78c-e6d4bd43455d#JSONP" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;JSONP&lt;/link&gt;</ph> - Adds JSON with padding (JSONP) support to an operation or an API to allow cross-domain calls from JavaScript browser-based clients.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Allow cross-domain calls</source>
            <target state="new">Allow cross-domain calls</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Use the <ph id="1">&lt;codeInline&gt;cross-domain&lt;/codeInline&gt;</ph> policy to make the API accessible from Adobe Flash and Microsoft Silverlight browser-based clients.</source>
            <target state="new">Use the <ph id="1">&lt;codeInline&gt;cross-domain&lt;/codeInline&gt;</ph> policy to make the API accessible from Adobe Flash and Microsoft Silverlight browser-based clients.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Policy statement</source>
            <target state="new">Policy statement</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Elements</source>
            <target state="new">Elements</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>cross-domain</source>
            <target state="new">cross-domain</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Root element.</source>
            <target state="new">Root element.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Child elements must conform to the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Adobe cross-domain policy file specification<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">Child elements must conform to the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>Adobe cross-domain policy file specification<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Usage</source>
            <target state="new">Usage</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>This policy can be used in the following policy <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>sections<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#sections&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>scopes<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#scopes&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">This policy can be used in the following policy <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>sections<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#sections&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>scopes<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#scopes&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Policy sections:<ept id="1">&lt;/legacyBold&gt;</ept> inbound</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Policy sections:<ept id="1">&lt;/legacyBold&gt;</ept> inbound</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Policy scopes:<ept id="1">&lt;/legacyBold&gt;</ept> global</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Policy scopes:<ept id="1">&lt;/legacyBold&gt;</ept> global</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>CORS</source>
            <target state="new">CORS</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;cors&lt;/codeInline&gt;</ph> policy adds cross-origin resource sharing (CORS) support to an operation or an API to allow cross-domain calls from browser-based clients.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;cors&lt;/codeInline&gt;</ph> policy adds cross-origin resource sharing (CORS) support to an operation or an API to allow cross-domain calls from browser-based clients.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>CORS allows a browser and a server to interact and determine whether or not to allow specific cross-origin requests (i.e. XMLHttpRequests calls made from JavaScript on a web page to other domains).</source>
            <target state="new">CORS allows a browser and a server to interact and determine whether or not to allow specific cross-origin requests (i.e. XMLHttpRequests calls made from JavaScript on a web page to other domains).</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>This allows for more flexibility than only allowing same-origin requests, but is more secure than allowing all cross-origin requests.</source>
            <target state="new">This allows for more flexibility than only allowing same-origin requests, but is more secure than allowing all cross-origin requests.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Policy statement</source>
            <target state="new">Policy statement</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>This example demonstrates how to support pre-flight requests, such as those with custom headers or methods other than GET and POST.</source>
            <target state="new">This example demonstrates how to support pre-flight requests, such as those with custom headers or methods other than GET and POST.</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>To support custom headers and additional HTTP verbs, use the <ph id="1">&lt;codeInline&gt;allowed-methods&lt;/codeInline&gt;</ph> and <ph id="2">&lt;codeInline&gt;allowed-headers&lt;/codeInline&gt;</ph> sections as shown in the following example.</source>
            <target state="new">To support custom headers and additional HTTP verbs, use the <ph id="1">&lt;codeInline&gt;allowed-methods&lt;/codeInline&gt;</ph> and <ph id="2">&lt;codeInline&gt;allowed-headers&lt;/codeInline&gt;</ph> sections as shown in the following example.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Elements</source>
            <target state="new">Elements</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Default</source>
            <target state="new">Default</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>cors</source>
            <target state="new">cors</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Root element.</source>
            <target state="new">Root element.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>N/A</source>
            <target state="new">N/A</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>allowed-origins</source>
            <target state="new">allowed-origins</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Contains <ph id="1">&lt;codeInline&gt;origin&lt;/codeInline&gt;</ph> elements that describe the allowed origins for cross-domain requests.</source>
            <target state="new">Contains <ph id="1">&lt;codeInline&gt;origin&lt;/codeInline&gt;</ph> elements that describe the allowed origins for cross-domain requests.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;codeInline&gt;allowed-origins&lt;/codeInline&gt;</ph> can contain either a single <ph id="2">&lt;codeInline&gt;origin&lt;/codeInline&gt;</ph> element that specifies <ph id="3">&lt;codeInline&gt;*&lt;/codeInline&gt;</ph> to allow any origin, or one or more <ph id="4">&lt;codeInline&gt;origin&lt;/codeInline&gt;</ph> elements that contain a URI.</source>
            <target state="new"><ph id="1">&lt;codeInline&gt;allowed-origins&lt;/codeInline&gt;</ph> can contain either a single <ph id="2">&lt;codeInline&gt;origin&lt;/codeInline&gt;</ph> element that specifies <ph id="3">&lt;codeInline&gt;*&lt;/codeInline&gt;</ph> to allow any origin, or one or more <ph id="4">&lt;codeInline&gt;origin&lt;/codeInline&gt;</ph> elements that contain a URI.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>N/A</source>
            <target state="new">N/A</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>origin</source>
            <target state="new">origin</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>The value can be either <ph id="1">&lt;codeInline&gt;*&lt;/codeInline&gt;</ph> to allow all origins, or a URI that specifies a single origin.</source>
            <target state="new">The value can be either <ph id="1">&lt;codeInline&gt;*&lt;/codeInline&gt;</ph> to allow all origins, or a URI that specifies a single origin.</target>
          </trans-unit>
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>The URI must include a scheme, host, and port.</source>
            <target state="new">The URI must include a scheme, host, and port.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>If the port is omitted in a URI, port 80 is used for HTTP and port 443 is used for HTTPS.</source>
            <target state="new">If the port is omitted in a URI, port 80 is used for HTTP and port 443 is used for HTTPS.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>allowed-methods</source>
            <target state="new">allowed-methods</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>This element is required if methods other than GET or POST are allowed.</source>
            <target state="new">This element is required if methods other than GET or POST are allowed.</target>
          </trans-unit>
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>Contains <ph id="1">&lt;codeInline&gt;method&lt;/codeInline&gt;</ph> elements that specify the supported HTTP verbs.</source>
            <target state="new">Contains <ph id="1">&lt;codeInline&gt;method&lt;/codeInline&gt;</ph> elements that specify the supported HTTP verbs.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>If this section is not present, GET and POST are supported.</source>
            <target state="new">If this section is not present, GET and POST are supported.</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>method</source>
            <target state="new">method</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>Specifies an HTTP verb.</source>
            <target state="new">Specifies an HTTP verb.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>At least one <ph id="1">&lt;codeInline&gt;method&lt;/codeInline&gt;</ph> element is required if the <ph id="2">&lt;codeInline&gt;allowed-methods&lt;/codeInline&gt;</ph> section is present.</source>
            <target state="new">At least one <ph id="1">&lt;codeInline&gt;method&lt;/codeInline&gt;</ph> element is required if the <ph id="2">&lt;codeInline&gt;allowed-methods&lt;/codeInline&gt;</ph> section is present.</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>N/A</source>
            <target state="new">N/A</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>allowed-headers</source>
            <target state="new">allowed-headers</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>This element contains <ph id="1">&lt;codeInline&gt;header&lt;/codeInline&gt;</ph> elements specifying names of the headers that can be included in the request.</source>
            <target state="new">This element contains <ph id="1">&lt;codeInline&gt;header&lt;/codeInline&gt;</ph> elements specifying names of the headers that can be included in the request.</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>N/A</source>
            <target state="new">N/A</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>expose-headers</source>
            <target state="new">expose-headers</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>This element contains <ph id="1">&lt;codeInline&gt;header&lt;/codeInline&gt;</ph> elements specifying names of the headers that will be accessible by the client.</source>
            <target state="new">This element contains <ph id="1">&lt;codeInline&gt;header&lt;/codeInline&gt;</ph> elements specifying names of the headers that will be accessible by the client.</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>N/A</source>
            <target state="new">N/A</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>header</source>
            <target state="new">header</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>Specifies a header name.</source>
            <target state="new">Specifies a header name.</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>At least one <ph id="1">&lt;codeInline&gt;header&lt;/codeInline&gt;</ph> element is required in <ph id="2">&lt;codeInline&gt;allowed-headers&lt;/codeInline&gt;</ph> or <ph id="3">&lt;codeInline&gt;expose-headers&lt;/codeInline&gt;</ph> if the section is present.</source>
            <target state="new">At least one <ph id="1">&lt;codeInline&gt;header&lt;/codeInline&gt;</ph> element is required in <ph id="2">&lt;codeInline&gt;allowed-headers&lt;/codeInline&gt;</ph> or <ph id="3">&lt;codeInline&gt;expose-headers&lt;/codeInline&gt;</ph> if the section is present.</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>N/A</source>
            <target state="new">N/A</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>Attributes</source>
            <target state="new">Attributes</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>Default</source>
            <target state="new">Default</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>allow-credentials</source>
            <target state="new">allow-credentials</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;Access-Control-Allow-Credentials&lt;/codeInline&gt;</ph> header in the preflight response will be set to the value of this attribute and affect the client’s ability to submit credentials in cross-domain requests.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;Access-Control-Allow-Credentials&lt;/codeInline&gt;</ph> header in the preflight response will be set to the value of this attribute and affect the client’s ability to submit credentials in cross-domain requests.</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>false</source>
            <target state="new">false</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>preflight-result-max-age</source>
            <target state="new">preflight-result-max-age</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;Access-Control-Max-Age&lt;/codeInline&gt;</ph> header in the preflight response will be set to the value of this attribute and affect the user agent’s ability to cache pre-flight response.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;Access-Control-Max-Age&lt;/codeInline&gt;</ph> header in the preflight response will be set to the value of this attribute and affect the user agent’s ability to cache pre-flight response.</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>No</source>
            <target state="new">No</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>0</source>
            <target state="new">0</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>Usage</source>
            <target state="new">Usage</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>This policy can be used in the following policy <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>sections<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#sections&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>scopes<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#scopes&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">This policy can be used in the following policy <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>sections<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#sections&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>scopes<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#scopes&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Policy sections:<ept id="1">&lt;/legacyBold&gt;</ept> inbound</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Policy sections:<ept id="1">&lt;/legacyBold&gt;</ept> inbound</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Policy scopes:<ept id="1">&lt;/legacyBold&gt;</ept> API, operation</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Policy scopes:<ept id="1">&lt;/legacyBold&gt;</ept> API, operation</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>JSONP</source>
            <target state="new">JSONP</target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;codeInline&gt;jsonp&lt;/codeInline&gt;</ph> policy adds JSON with padding (JSONP) support to an operation or an API to allow cross-domain calls from JavaScript browser-based clients.</source>
            <target state="new">The <ph id="1">&lt;codeInline&gt;jsonp&lt;/codeInline&gt;</ph> policy adds JSON with padding (JSONP) support to an operation or an API to allow cross-domain calls from JavaScript browser-based clients.</target>
          </trans-unit>
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>JSONP is a method used in JavaScript programs to request data from a server in a different domain.</source>
            <target state="new">JSONP is a method used in JavaScript programs to request data from a server in a different domain.</target>
          </trans-unit>
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>JSONP bypasses the limitation enforced by most web browsers where access to web pages must be in the same domain.</source>
            <target state="new">JSONP bypasses the limitation enforced by most web browsers where access to web pages must be in the same domain.</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>Policy statement</source>
            <target state="new">Policy statement</target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>If you call the method without the callback parameter ?cb=XXX it will return plain JSON (without a function call wrapper).</source>
            <target state="new">If you call the method without the callback parameter ?cb=XXX it will return plain JSON (without a function call wrapper).</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>If you add the callback parameter <ph id="1">&lt;codeInline&gt;?cb=XXX&lt;/codeInline&gt;</ph> it will return a JSONP result, wrapping the original JSON results around the callback function like <ph id="2">&lt;codeInline&gt;XYZ('%%amp;lt;json result goes here%%amp;gt;');&lt;/codeInline&gt;</ph></source>
            <target state="new">If you add the callback parameter <ph id="1">&lt;codeInline&gt;?cb=XXX&lt;/codeInline&gt;</ph> it will return a JSONP result, wrapping the original JSON results around the callback function like <ph id="2">&lt;codeInline&gt;XYZ('%%amp;lt;json result goes here%%amp;gt;');&lt;/codeInline&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>Elements</source>
            <target state="new">Elements</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>jsonp</source>
            <target state="new">jsonp</target>
          </trans-unit>
        </group>
        <group id="94">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>Root element.</source>
            <target state="new">Root element.</target>
          </trans-unit>
        </group>
        <group id="95">
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="96">
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>Attributes</source>
            <target state="new">Attributes</target>
          </trans-unit>
        </group>
        <group id="97">
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
        </group>
        <group id="98">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="99">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
        </group>
        <group id="100">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>Default</source>
            <target state="new">Default</target>
          </trans-unit>
        </group>
        <group id="101">
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>callback-parameter-name</source>
            <target state="new">callback-parameter-name</target>
          </trans-unit>
        </group>
        <group id="102">
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>The cross-domain JavaScript function call prefixed with the fully qualified domain name where the function resides.</source>
            <target state="new">The cross-domain JavaScript function call prefixed with the fully qualified domain name where the function resides.</target>
          </trans-unit>
        </group>
        <group id="103">
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>Yes</source>
            <target state="new">Yes</target>
          </trans-unit>
        </group>
        <group id="104">
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>N/A</source>
            <target state="new">N/A</target>
          </trans-unit>
        </group>
        <group id="105">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>Usage</source>
            <target state="new">Usage</target>
          </trans-unit>
        </group>
        <group id="106">
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>This policy can be used in the following policy <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>sections<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#sections&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>scopes<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#scopes&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">This policy can be used in the following policy <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>sections<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#sections&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept> and <bpt id="4">&lt;externalLink&gt;</bpt><bpt id="5">&lt;linkText&gt;</bpt>scopes<ept id="5">&lt;/linkText&gt;</ept><ph id="6">&lt;linkUri&gt;http://azure.microsoft.com/documentation/articles/api-management-howto-policies/#scopes&lt;/linkUri&gt;</ph><ept id="4">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="107">
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Policy sections:<ept id="1">&lt;/legacyBold&gt;</ept> outbound</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Policy sections:<ept id="1">&lt;/legacyBold&gt;</ept> outbound</target>
          </trans-unit>
        </group>
        <group id="108">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;legacyBold&gt;</bpt>Policy scopes:<ept id="1">&lt;/legacyBold&gt;</ept> global, product, API, operation</source>
            <target state="new"><bpt id="1">&lt;legacyBold&gt;</bpt>Policy scopes:<ept id="1">&lt;/legacyBold&gt;</ept> global, product, API, operation</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>