<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="it-IT" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANzFEOgyAMANCrcACatFCw7ATbvxcoSBMTp4nDxOPPj/f7zGKvHBr0zgxMhlBRKjQkzaUYqRbvFIW1pQhGFIClB5DSEJp0CmjCMWXvmmSWEjssUxLgKSlUpgJq2DIuS0j5uci7dcBn9u7eVrN+j9d5HMO74N30eF9f3edT99+mYz32P0D7TPaiAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Put Block List</source>
            <target state="new">Put Block List</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Put Block List</source>
            <target state="new">Put Block List</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> operation writes a blob by specifying the list of block IDs that make up the blob.</source>
            <target state="new">The <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> operation writes a blob by specifying the list of block IDs that make up the blob.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>In order to be written as part of a blob, a block must have been successfully written to the server in a prior <ph id="1">&lt;link xlink:href="de63a7ed-c489-4034-b21a-246854d7a745" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Block&lt;/link&gt;</ph> operation.</source>
            <target state="new">In order to be written as part of a blob, a block must have been successfully written to the server in a prior <ph id="1">&lt;link xlink:href="de63a7ed-c489-4034-b21a-246854d7a745" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Block&lt;/link&gt;</ph> operation.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>You can call <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> to update a blob by uploading only those blocks that have changed, then committing the new and existing blocks together.</source>
            <target state="new">You can call <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> to update a blob by uploading only those blocks that have changed, then committing the new and existing blocks together.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>You can do this by specifying whether to commit a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded version of the block, whichever list it may belong to.</source>
            <target state="new">You can do this by specifying whether to commit a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded version of the block, whichever list it may belong to.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Request</source>
            <target state="new">Request</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> request may be constructed as follows.</source>
            <target state="new">The <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> request may be constructed as follows.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>HTTPS is recommended.</source>
            <target state="new">HTTPS is recommended.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Replace <bpt id="1">&lt;placeholder&gt;</bpt>myaccount<ept id="1">&lt;/placeholder&gt;</ept> with the name of your storage account:</source>
            <target state="new">Replace <bpt id="1">&lt;placeholder&gt;</bpt>myaccount<ept id="1">&lt;/placeholder&gt;</ept> with the name of your storage account:</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>PUT Method Request URI</source>
            <target state="new">PUT Method Request URI</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>HTTP Version</source>
            <target state="new">HTTP Version</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>HTTP/1.1</source>
            <target state="new">HTTP/1.1</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Emulated Storage Service URI</source>
            <target state="new">Emulated Storage Service URI</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>When making a request against the emulated storage service, specify the emulator hostname and Blob service port as <ph id="1">&lt;codeInline&gt;127.0.0.1:10000&lt;/codeInline&gt;</ph>, followed by the emulated storage account name:</source>
            <target state="new">When making a request against the emulated storage service, specify the emulator hostname and Blob service port as <ph id="1">&lt;codeInline&gt;127.0.0.1:10000&lt;/codeInline&gt;</ph>, followed by the emulated storage account name:</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>PUT Method Request URI</source>
            <target state="new">PUT Method Request URI</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>HTTP Version</source>
            <target state="new">HTTP Version</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>HTTP/1.1</source>
            <target state="new">HTTP/1.1</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Note that the storage emulator only supports blob sizes up to 2 GB.</source>
            <target state="new">Note that the storage emulator only supports blob sizes up to 2 GB.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>For more information, see <bpt id="1">&lt;legacyLink xlink:href="f0e3acde-f019-4148-9544-34cf2ff27211" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>Using the Azure Storage Emulator for Development and Testing<ept id="1">&lt;/legacyLink&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="1">&lt;legacyLink xlink:href="f0e3acde-f019-4148-9544-34cf2ff27211" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;</bpt>Using the Azure Storage Emulator for Development and Testing<ept id="1">&lt;/legacyLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>URI Parameters</source>
            <target state="new">URI Parameters</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>The following additional parameters may be specified on the request URI.</source>
            <target state="new">The following additional parameters may be specified on the request URI.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Parameter</source>
            <target state="new">Parameter</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;parameterReference&gt;timeout&lt;/parameterReference&gt;</ph> parameter is expressed in seconds.</source>
            <target state="new">The <ph id="1">&lt;parameterReference&gt;timeout&lt;/parameterReference&gt;</ph> parameter is expressed in seconds.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="9ae411fa-1495-42a0-bc26-c41ebca9d5b8" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Setting Timeouts for Blob Service Operations&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="9ae411fa-1495-42a0-bc26-c41ebca9d5b8" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Setting Timeouts for Blob Service Operations&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Request Headers</source>
            <target state="new">Request Headers</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>The following table describes required and optional request headers.</source>
            <target state="new">The following table describes required and optional request headers.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Request Header</source>
            <target state="new">Request Header</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Specifies the authentication scheme, account name, and signature.</source>
            <target state="new">Specifies the authentication scheme, account name, and signature.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="96cec7bc-63cc-4227-920a-dddd850433c9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Authentication Schemes&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="96cec7bc-63cc-4227-920a-dddd850433c9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Authentication Schemes&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;parameterReference&gt;Date&lt;/parameterReference&gt;</ph> or <ph id="2">&lt;parameterReference&gt;x-ms-date&lt;/parameterReference&gt;</ph></source>
            <target state="new"><ph id="1">&lt;parameterReference&gt;Date&lt;/parameterReference&gt;</ph> or <ph id="2">&lt;parameterReference&gt;x-ms-date&lt;/parameterReference&gt;</ph></target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Specifies the Coordinated Universal Time (UTC) for the request.</source>
            <target state="new">Specifies the Coordinated Universal Time (UTC) for the request.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="96cec7bc-63cc-4227-920a-dddd850433c9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Authentication Schemes&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="96cec7bc-63cc-4227-920a-dddd850433c9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Authentication Schemes&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Required for all authenticated requests.</source>
            <target state="new">Required for all authenticated requests.</target>
          </trans-unit>
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Specifies the version of the operation to use for this request.</source>
            <target state="new">Specifies the version of the operation to use for this request.</target>
          </trans-unit>
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="cc4fba5c-7015-40bf-a29c-b6f0c684ff3c" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Storage Service Versioning&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="cc4fba5c-7015-40bf-a29c-b6f0c684ff3c" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Storage Service Versioning&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Required.</source>
            <target state="new">Required.</target>
          </trans-unit>
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>The length of the request content in bytes.</source>
            <target state="new">The length of the request content in bytes.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Note that this header refers to the content length of the list of blocks, not of the blob itself.</source>
            <target state="new">Note that this header refers to the content length of the list of blocks, not of the blob itself.</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>An MD5 hash of the request content.</source>
            <target state="new">An MD5 hash of the request content.</target>
          </trans-unit>
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>This hash is used to verify the integrity of the request content during transport.</source>
            <target state="new">This hash is used to verify the integrity of the request content during transport.</target>
          </trans-unit>
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>If the two hashes do not match, the operation will fail with error code 400 (Bad Request).</source>
            <target state="new">If the two hashes do not match, the operation will fail with error code 400 (Bad Request).</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>Note that this header is associated with the request content, and not with the content of the blob itself.</source>
            <target state="new">Note that this header is associated with the request content, and not with the content of the blob itself.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>Sets the blob’s cache control.</source>
            <target state="new">Sets the blob’s cache control.</target>
          </trans-unit>
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>If specified, this property is stored with the blob and returned with a read request.</source>
            <target state="new">If specified, this property is stored with the blob and returned with a read request.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>If this property is not specified with the request, then it is cleared for the blob if the request is successful.</source>
            <target state="new">If this property is not specified with the request, then it is cleared for the blob if the request is successful.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>Sets the blob’s content type.</source>
            <target state="new">Sets the blob’s content type.</target>
          </trans-unit>
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>If specified, this property is stored with the blob and returned with a read request.</source>
            <target state="new">If specified, this property is stored with the blob and returned with a read request.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>If the content type is not specified, then it is set to the default type, which is <ph id="1">&lt;languageKeyword&gt;application/octet-stream&lt;/languageKeyword&gt;</ph>.</source>
            <target state="new">If the content type is not specified, then it is set to the default type, which is <ph id="1">&lt;languageKeyword&gt;application/octet-stream&lt;/languageKeyword&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>Sets the blob’s content encoding.</source>
            <target state="new">Sets the blob’s content encoding.</target>
          </trans-unit>
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>If specified, this property is stored with the blob and returned with a read request.</source>
            <target state="new">If specified, this property is stored with the blob and returned with a read request.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>If this property is not specified with the request, then it is cleared for the blob if the request is successful.</source>
            <target state="new">If this property is not specified with the request, then it is cleared for the blob if the request is successful.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>Set the blob’s content language.</source>
            <target state="new">Set the blob’s content language.</target>
          </trans-unit>
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>If specified, this property is stored with the blob and returned with a read request.</source>
            <target state="new">If specified, this property is stored with the blob and returned with a read request.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>this property is not specified with the request, then it is cleared for the blob if the request is successful.</source>
            <target state="new">this property is not specified with the request, then it is cleared for the blob if the request is successful.</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>An MD5 hash of the blob content.</source>
            <target state="new">An MD5 hash of the blob content.</target>
          </trans-unit>
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</source>
            <target state="new">Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;link xlink:href="a3e943b4-5745-4e64-9d6f-728bbefbd5ee" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Blob&lt;/link&gt;</ph> operation returns the value of this header in the Content-MD5 response header.</source>
            <target state="new">The <ph id="1">&lt;link xlink:href="a3e943b4-5745-4e64-9d6f-728bbefbd5ee" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Blob&lt;/link&gt;</ph> operation returns the value of this header in the Content-MD5 response header.</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>If this property is not specified with the request, then it is cleared for the blob if the request is successful.</source>
            <target state="new">If this property is not specified with the request, then it is cleared for the blob if the request is successful.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>User-defined name-value pairs associated with the blob.</source>
            <target state="new">User-defined name-value pairs associated with the blob.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>C# identifiers<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://msdn.microsoft.com/library/aa664670%28VS.71%29.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>C# identifiers<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://msdn.microsoft.com/library/aa664670%28VS.71%29.aspx&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>Required if the blob has an active lease.</source>
            <target state="new">Required if the blob has an active lease.</target>
          </trans-unit>
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>To perform this operation on a blob with an active lease, specify the valid lease ID for this header.</source>
            <target state="new">To perform this operation on a blob with an active lease, specify the valid lease ID for this header.</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</source>
            <target state="new">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</target>
          </trans-unit>
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>Using this header is highly recommended for correlating client-side activities with requests received by the server.</source>
            <target state="new">Using this header is highly recommended for correlating client-side activities with requests received by the server.</target>
          </trans-unit>
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="1727932c-8a3b-4502-86ac-c89931d54bac" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;About Storage Analytics Logging&lt;/link&gt;</ph> and <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>Azure Logging: Using Logs to Track Storage Requests<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://blogs.msdn.com/b/windowsazurestorage/archive/2011/08/03/windows-azure-storage-logging-using-logs-to-track-storage-requests.aspx&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="1727932c-8a3b-4502-86ac-c89931d54bac" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;About Storage Analytics Logging&lt;/link&gt;</ph> and <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>Azure Logging: Using Logs to Track Storage Requests<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://blogs.msdn.com/b/windowsazurestorage/archive/2011/08/03/windows-azure-storage-logging-using-logs-to-track-storage-requests.aspx&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>Optional.</source>
            <target state="new">Optional.</target>
          </trans-unit>
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>Sets the blob’s <ph id="1">&lt;parameterReference&gt;Content-Disposition&lt;/parameterReference&gt;</ph> header.</source>
            <target state="new">Sets the blob’s <ph id="1">&lt;parameterReference&gt;Content-Disposition&lt;/parameterReference&gt;</ph> header.</target>
          </trans-unit>
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>Available for versions 2013-08-15 and later.</source>
            <target state="new">Available for versions 2013-08-15 and later.</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;parameterReference&gt;Content-Disposition&lt;/parameterReference&gt;</ph> header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata.</source>
            <target state="new">The <ph id="1">&lt;parameterReference&gt;Content-Disposition&lt;/parameterReference&gt;</ph> header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata.</target>
          </trans-unit>
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>For example, if set to <ph id="1">&lt;codeInline&gt;attachment&lt;/codeInline&gt;</ph>, it indicates that the user-agent should not display the response, but instead show a Save As dialog.</source>
            <target state="new">For example, if set to <ph id="1">&lt;codeInline&gt;attachment&lt;/codeInline&gt;</ph>, it indicates that the user-agent should not display the response, but instead show a Save As dialog.</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>The response from the <ph id="1">&lt;link xlink:href="a3e943b4-5745-4e64-9d6f-728bbefbd5ee" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Blob (REST API)&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="56a87f11-8f6b-44c8-b46f-7531d359875e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Blob Properties (REST API)&lt;/link&gt;</ph> operations includes the content-disposition header.</source>
            <target state="new">The response from the <ph id="1">&lt;link xlink:href="a3e943b4-5745-4e64-9d6f-728bbefbd5ee" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Blob (REST API)&lt;/link&gt;</ph> and <ph id="2">&lt;link xlink:href="56a87f11-8f6b-44c8-b46f-7531d359875e" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Get Blob Properties (REST API)&lt;/link&gt;</ph> operations includes the content-disposition header.</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>This operation also supports the use of conditional headers to commit the block list only if a specified condition is met.</source>
            <target state="new">This operation also supports the use of conditional headers to commit the block list only if a specified condition is met.</target>
          </trans-unit>
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="36087161-9e7c-47e4-904c-3392cc35a8e9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Specifying Conditional Headers for Blob Storage Operations&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="36087161-9e7c-47e4-904c-3392cc35a8e9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Specifying Conditional Headers for Blob Storage Operations&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>Request Body</source>
            <target state="new">Request Body</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>In the request body, you can specify which block list the Blob service should check for the requested block.</source>
            <target state="new">In the request body, you can specify which block list the Blob service should check for the requested block.</target>
          </trans-unit>
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>In this way you can update an existing blob by inserting, replacing, or deleting individual blocks, rather than re-uploading the entire blob.</source>
            <target state="new">In this way you can update an existing blob by inserting, replacing, or deleting individual blocks, rather than re-uploading the entire blob.</target>
          </trans-unit>
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>Once you've uploaded the block or blocks that have changed, you can commit a new version of the blob by committing the new blocks together with the existing blocks that you wish to keep.</source>
            <target state="new">Once you've uploaded the block or blocks that have changed, you can commit a new version of the blob by committing the new blocks together with the existing blocks that you wish to keep.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>To update a blob, you can specify that the service should look for a block ID in the committed block list, in the uncommitted block list, or in the uncommitted block list first and then in the committed block list.</source>
            <target state="new">To update a blob, you can specify that the service should look for a block ID in the committed block list, in the uncommitted block list, or in the uncommitted block list first and then in the committed block list.</target>
          </trans-unit>
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>To indicate which approach to use, specify the block ID within the appropriate XML element within the request body, as follows:</source>
            <target state="new">To indicate which approach to use, specify the block ID within the appropriate XML element within the request body, as follows:</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>Specify the block ID within the <ph id="1">&lt;languageKeyword&gt;Committed&lt;/languageKeyword&gt;</ph> element to indicate that the Blob service should search only the committed block list for the named block.</source>
            <target state="new">Specify the block ID within the <ph id="1">&lt;languageKeyword&gt;Committed&lt;/languageKeyword&gt;</ph> element to indicate that the Blob service should search only the committed block list for the named block.</target>
          </trans-unit>
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>If the block is not found in the committed block list, it will not be written as part of the blob, and the Blob service will return status code 400 (Bad Request).</source>
            <target state="new">If the block is not found in the committed block list, it will not be written as part of the blob, and the Blob service will return status code 400 (Bad Request).</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>Specify the block ID within the <ph id="1">&lt;languageKeyword&gt;Uncommitted&lt;/languageKeyword&gt;</ph> element to indicate that the Blob service should search only the uncommitted block list for the named block.</source>
            <target state="new">Specify the block ID within the <ph id="1">&lt;languageKeyword&gt;Uncommitted&lt;/languageKeyword&gt;</ph> element to indicate that the Blob service should search only the uncommitted block list for the named block.</target>
          </trans-unit>
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>If the block is not found in the uncommitted block list, it will not be written as part of the blob, and the Blob service will return status code 400 (Bad Request).</source>
            <target state="new">If the block is not found in the uncommitted block list, it will not be written as part of the blob, and the Blob service will return status code 400 (Bad Request).</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>Specify the block ID within the <ph id="1">&lt;languageKeyword&gt;Latest&lt;/languageKeyword&gt;</ph> element to indicate that the Blob service should first search the uncommitted block list.</source>
            <target state="new">Specify the block ID within the <ph id="1">&lt;languageKeyword&gt;Latest&lt;/languageKeyword&gt;</ph> element to indicate that the Blob service should first search the uncommitted block list.</target>
          </trans-unit>
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>If the block is found in the uncommitted list, that version of the block is the latest and should be written to the blob.</source>
            <target state="new">If the block is found in the uncommitted list, that version of the block is the latest and should be written to the blob.</target>
          </trans-unit>
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>If the block is not found in the uncommitted list, then the service should search the committed block list for the named block and write that block to the blob if it is found.</source>
            <target state="new">If the block is not found in the uncommitted list, then the service should search the committed block list for the named block and write that block to the blob if it is found.</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>The request body for this version of <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> uses following XML format:</source>
            <target state="new">The request body for this version of <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> uses following XML format:</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>Sample Request</source>
            <target state="new">Sample Request</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>To demonstrate <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph>, assume you have uploaded three blocks that you now wish to commit.</source>
            <target state="new">To demonstrate <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph>, assume you have uploaded three blocks that you now wish to commit.</target>
          </trans-unit>
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>The following example commits a new blob by indicating that the latest version of each block listed should be used.</source>
            <target state="new">The following example commits a new blob by indicating that the latest version of each block listed should be used.</target>
          </trans-unit>
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>It's not necessary to know whether these blocks have already been committed.</source>
            <target state="new">It's not necessary to know whether these blocks have already been committed.</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>Next, assume that you wish to update the blob.</source>
            <target state="new">Next, assume that you wish to update the blob.</target>
          </trans-unit>
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>The new blob will have the following changes:</source>
            <target state="new">The new blob will have the following changes:</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>A new block with ID <ph id="1">&lt;codeInline&gt;ANAAAA==&lt;/codeInline&gt;</ph>.</source>
            <target state="new">A new block with ID <ph id="1">&lt;codeInline&gt;ANAAAA==&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>This block must first be uploaded with a call to <ph id="1">&lt;link xlink:href="de63a7ed-c489-4034-b21a-246854d7a745" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Block&lt;/link&gt;</ph> and will appear in the uncommitted block list until the call to <ph id="2">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph>.</source>
            <target state="new">This block must first be uploaded with a call to <ph id="1">&lt;link xlink:href="de63a7ed-c489-4034-b21a-246854d7a745" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Block&lt;/link&gt;</ph> and will appear in the uncommitted block list until the call to <ph id="2">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>An updated version of the block with ID <ph id="1">&lt;codeInline&gt;AZAAAA==&lt;/codeInline&gt;</ph>.</source>
            <target state="new">An updated version of the block with ID <ph id="1">&lt;codeInline&gt;AZAAAA==&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>This block must first be uploaded with a call to <ph id="1">&lt;link xlink:href="de63a7ed-c489-4034-b21a-246854d7a745" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Block&lt;/link&gt;</ph> and will appear in the uncommitted block list until the call to <ph id="2">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph>.</source>
            <target state="new">This block must first be uploaded with a call to <ph id="1">&lt;link xlink:href="de63a7ed-c489-4034-b21a-246854d7a745" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Block&lt;/link&gt;</ph> and will appear in the uncommitted block list until the call to <ph id="2">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>Removal of the block with the ID <ph id="1">&lt;codeInline&gt;AAAAAA==&lt;/codeInline&gt;</ph>.</source>
            <target state="new">Removal of the block with the ID <ph id="1">&lt;codeInline&gt;AAAAAA==&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>Given that this block is not included in the next call to <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph>, the block will effectively be removed from the blob.</source>
            <target state="new">Given that this block is not included in the next call to <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph>, the block will effectively be removed from the blob.</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>The following example shows the call to <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> that updates the blob:</source>
            <target state="new">The following example shows the call to <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> that updates the blob:</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>Response</source>
            <target state="new">Response</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>The response includes an HTTP status code and a set of response headers.</source>
            <target state="new">The response includes an HTTP status code and a set of response headers.</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source>Status Code</source>
            <target state="new">Status Code</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>A successful operation returns status code 201 (Created).</source>
            <target state="new">A successful operation returns status code 201 (Created).</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>For information about status codes, see <ph id="1">&lt;link xlink:href="4421ac96-38eb-4ea3-8104-f9975c3bf153" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Status and Error Codes&lt;/link&gt;</ph>.</source>
            <target state="new">For information about status codes, see <ph id="1">&lt;link xlink:href="4421ac96-38eb-4ea3-8104-f9975c3bf153" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Status and Error Codes&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>Response Headers</source>
            <target state="new">Response Headers</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>The response for this operation includes the following headers.</source>
            <target state="new">The response for this operation includes the following headers.</target>
          </trans-unit>
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>The response may also include additional standard HTTP headers.</source>
            <target state="new">The response may also include additional standard HTTP headers.</target>
          </trans-unit>
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source>All standard headers conform to the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>HTTP/1.1 protocol specification<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?linkid=150478&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</source>
            <target state="new">All standard headers conform to the <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>HTTP/1.1 protocol specification<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?linkid=150478&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>Response</source>
            <target state="new">Response</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source>Descriptions</source>
            <target state="new">Descriptions</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>The entity tag contains a value that the client can use to perform conditional <ph id="1">&lt;unmanagedCodeEntityReference&gt;GET/PUT&lt;/unmanagedCodeEntityReference&gt;</ph> operations by using the <ph id="2">&lt;parameterReference&gt;If-Match&lt;/parameterReference&gt;</ph> request header.</source>
            <target state="new">The entity tag contains a value that the client can use to perform conditional <ph id="1">&lt;unmanagedCodeEntityReference&gt;GET/PUT&lt;/unmanagedCodeEntityReference&gt;</ph> operations by using the <ph id="2">&lt;parameterReference&gt;If-Match&lt;/parameterReference&gt;</ph> request header.</target>
          </trans-unit>
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source>If the request version is 2011-08-18 or newer, the ETag value will be in quotes.</source>
            <target state="new">If the request version is 2011-08-18 or newer, the ETag value will be in quotes.</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>The date/time that the blob was last modified.</source>
            <target state="new">The date/time that the blob was last modified.</target>
          </trans-unit>
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source>The date format follows RFC 1123.</source>
            <target state="new">The date format follows RFC 1123.</target>
          </trans-unit>
          <trans-unit id="130" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="d4f67d84-a51c-4ff7-8bd0-0ae206c9e3c9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Representation of Date/Time Values&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="d4f67d84-a51c-4ff7-8bd0-0ae206c9e3c9" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Representation of Date/Time Values&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="131" translate="yes" xml:space="preserve">
            <source>Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last modified time of the blob.</source>
            <target state="new">Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last modified time of the blob.</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="132" translate="yes" xml:space="preserve">
            <source>This header is returned so that the client can check for message content integrity.</source>
            <target state="new">This header is returned so that the client can check for message content integrity.</target>
          </trans-unit>
          <trans-unit id="133" translate="yes" xml:space="preserve">
            <source>This header refers to the content of the request, meaning, in this case, the list of blocks, and not the content of the blob itself.</source>
            <target state="new">This header refers to the content of the request, meaning, in this case, the list of blocks, and not the content of the blob itself.</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="134" translate="yes" xml:space="preserve">
            <source>This header uniquely identifies the request that was made and can be used for troubleshooting the request.</source>
            <target state="new">This header uniquely identifies the request that was made and can be used for troubleshooting the request.</target>
          </trans-unit>
          <trans-unit id="135" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="b20a45d8-7453-487c-b492-69dc5a5b6d2d" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Troubleshooting API Operations&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="b20a45d8-7453-487c-b492-69dc5a5b6d2d" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Troubleshooting API Operations&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="136" translate="yes" xml:space="preserve">
            <source>Indicates the version of the Blob service used to execute the request.</source>
            <target state="new">Indicates the version of the Blob service used to execute the request.</target>
          </trans-unit>
          <trans-unit id="137" translate="yes" xml:space="preserve">
            <source>This header is returned for requests made against version 2009-09-19 and later.</source>
            <target state="new">This header is returned for requests made against version 2009-09-19 and later.</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="138" translate="yes" xml:space="preserve">
            <source>A UTC date/time value generated by the service that indicates the time at which the response was initiated.</source>
            <target state="new">A UTC date/time value generated by the service that indicates the time at which the response was initiated.</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="139" translate="yes" xml:space="preserve">
            <source>Sample Response</source>
            <target state="new">Sample Response</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="140" translate="yes" xml:space="preserve">
            <source>Authorization</source>
            <target state="new">Authorization</target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="141" translate="yes" xml:space="preserve">
            <source>This operation can be called by the account owner and by anyone with a Shared Access Signature that has permission to write to this blob or its container.</source>
            <target state="new">This operation can be called by the account owner and by anyone with a Shared Access Signature that has permission to write to this blob or its container.</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="142" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> operation enforces the order in which blocks are to be combined to create a blob.</source>
            <target state="new">The <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> operation enforces the order in which blocks are to be combined to create a blob.</target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="143" translate="yes" xml:space="preserve">
            <source>The same block ID can be specified more than one time in the list of blocks.</source>
            <target state="new">The same block ID can be specified more than one time in the list of blocks.</target>
          </trans-unit>
          <trans-unit id="144" translate="yes" xml:space="preserve">
            <source>If a block ID is specified more than one time, it will represent the range of bytes in each of those locations in the block list for the final committed blob.</source>
            <target state="new">If a block ID is specified more than one time, it will represent the range of bytes in each of those locations in the block list for the final committed blob.</target>
          </trans-unit>
          <trans-unit id="145" translate="yes" xml:space="preserve">
            <source>If a block ID appears more than once in the list, both instances of the block ID must be specified within the same block list.</source>
            <target state="new">If a block ID appears more than once in the list, both instances of the block ID must be specified within the same block list.</target>
          </trans-unit>
          <trans-unit id="146" translate="yes" xml:space="preserve">
            <source>In other words, both instances must be specified within the <ph id="1">&lt;languageKeyword&gt;Committed&lt;/languageKeyword&gt;</ph> element, the <ph id="2">&lt;languageKeyword&gt;Uncommitted&lt;/languageKeyword&gt;</ph> element, or the <ph id="3">&lt;languageKeyword&gt;Latest&lt;/languageKeyword&gt;</ph> element.</source>
            <target state="new">In other words, both instances must be specified within the <ph id="1">&lt;languageKeyword&gt;Committed&lt;/languageKeyword&gt;</ph> element, the <ph id="2">&lt;languageKeyword&gt;Uncommitted&lt;/languageKeyword&gt;</ph> element, or the <ph id="3">&lt;languageKeyword&gt;Latest&lt;/languageKeyword&gt;</ph> element.</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="147" translate="yes" xml:space="preserve">
            <source>With <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph>, you can modify an existing blob by inserting, updating, or deleting individual blocks, without uploading the whole blob again.</source>
            <target state="new">With <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph>, you can modify an existing blob by inserting, updating, or deleting individual blocks, without uploading the whole blob again.</target>
          </trans-unit>
          <trans-unit id="148" translate="yes" xml:space="preserve">
            <source>You can specify block IDs from both the current committed block list and the uncommitted block list to create a new blob or update the content of an existing blob.</source>
            <target state="new">You can specify block IDs from both the current committed block list and the uncommitted block list to create a new blob or update the content of an existing blob.</target>
          </trans-unit>
          <trans-unit id="149" translate="yes" xml:space="preserve">
            <source>In this way you can update a blob by specifying a few new blocks from the uncommitted block list, and the rest from the committed block list, which are already part of the existing blob.</source>
            <target state="new">In this way you can update a blob by specifying a few new blocks from the uncommitted block list, and the rest from the committed block list, which are already part of the existing blob.</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="150" translate="yes" xml:space="preserve">
            <source>If a block ID is specified in the <ph id="1">&lt;languageKeyword&gt;Latest&lt;/languageKeyword&gt;</ph> element, and the same block ID exists in both the committed and uncommitted block lists, <ph id="2">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> commits the block from the uncommitted block list.</source>
            <target state="new">If a block ID is specified in the <ph id="1">&lt;languageKeyword&gt;Latest&lt;/languageKeyword&gt;</ph> element, and the same block ID exists in both the committed and uncommitted block lists, <ph id="2">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> commits the block from the uncommitted block list.</target>
          </trans-unit>
          <trans-unit id="151" translate="yes" xml:space="preserve">
            <source>If the block ID exists in the committed block list but not in the uncommitted block list, then <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> commits the block from the committed block list.</source>
            <target state="new">If the block ID exists in the committed block list but not in the uncommitted block list, then <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> commits the block from the committed block list.</target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="152" translate="yes" xml:space="preserve">
            <source>The maximum number of blocks that may be committed is 50,000, and the maximum size of a blob that may be committed via the <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> operation is 200 GB.</source>
            <target state="new">The maximum number of blocks that may be committed is 50,000, and the maximum size of a blob that may be committed via the <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> operation is 200 GB.</target>
          </trans-unit>
          <trans-unit id="153" translate="yes" xml:space="preserve">
            <source>If you attempt to commit more than 50,000 blocks, the service returns status code 413 (Request Entity Too Large).</source>
            <target state="new">If you attempt to commit more than 50,000 blocks, the service returns status code 413 (Request Entity Too Large).</target>
          </trans-unit>
          <trans-unit id="154" translate="yes" xml:space="preserve">
            <source>The service also returns additional information about the error in the response, including the maximum number of blocks permitted.</source>
            <target state="new">The service also returns additional information about the error in the response, including the maximum number of blocks permitted.</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="155" translate="yes" xml:space="preserve">
            <source>The maximum number of uncommitted blocks that may be associated with a blob is 100,000, and the maximum size of the uncommitted block list is 400 GB.</source>
            <target state="new">The maximum number of uncommitted blocks that may be associated with a blob is 100,000, and the maximum size of the uncommitted block list is 400 GB.</target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="156" translate="yes" xml:space="preserve">
            <source>When you call <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> to update an existing blob, the blob's existing properties and metadata are overwritten.</source>
            <target state="new">When you call <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> to update an existing blob, the blob's existing properties and metadata are overwritten.</target>
          </trans-unit>
          <trans-unit id="157" translate="yes" xml:space="preserve">
            <source>However, any existing snapshots are retained with the blob.</source>
            <target state="new">However, any existing snapshots are retained with the blob.</target>
          </trans-unit>
          <trans-unit id="158" translate="yes" xml:space="preserve">
            <source>You can use the conditional request headers to perform the operation only if a specified condition is met.</source>
            <target state="new">You can use the conditional request headers to perform the operation only if a specified condition is met.</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="159" translate="yes" xml:space="preserve">
            <source>If the <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> operation fails due to a missing block, you will need to upload the missing block.</source>
            <target state="new">If the <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> operation fails due to a missing block, you will need to upload the missing block.</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="160" translate="yes" xml:space="preserve">
            <source>Any uncommitted blocks will be garbage collected if there are no successful calls to <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block&lt;/unmanagedCodeEntityReference&gt;</ph> or <ph id="2">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> on the blob within a week following the last successful <ph id="3">&lt;unmanagedCodeEntityReference&gt;Put Block&lt;/unmanagedCodeEntityReference&gt;</ph> operation.</source>
            <target state="new">Any uncommitted blocks will be garbage collected if there are no successful calls to <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block&lt;/unmanagedCodeEntityReference&gt;</ph> or <ph id="2">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> on the blob within a week following the last successful <ph id="3">&lt;unmanagedCodeEntityReference&gt;Put Block&lt;/unmanagedCodeEntityReference&gt;</ph> operation.</target>
          </trans-unit>
          <trans-unit id="161" translate="yes" xml:space="preserve">
            <source>If <ph id="1">&lt;link xlink:href="b213c30f-8d30-4718-ba77-2030f3009719" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Blob&lt;/link&gt;</ph> is called on the blob, any uncommitted blocks will be garbage collected.</source>
            <target state="new">If <ph id="1">&lt;link xlink:href="b213c30f-8d30-4718-ba77-2030f3009719" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Put Blob&lt;/link&gt;</ph> is called on the blob, any uncommitted blocks will be garbage collected.</target>
          </trans-unit>
        </group>
        <group id="94">
          <trans-unit id="162" translate="yes" xml:space="preserve">
            <source>If the blob has an active lease, the client must specify a valid lease ID on the request in order to commit the block list.</source>
            <target state="new">If the blob has an active lease, the client must specify a valid lease ID on the request in order to commit the block list.</target>
          </trans-unit>
          <trans-unit id="163" translate="yes" xml:space="preserve">
            <source>If the client does not specify a lease ID, or specifies an invalid lease ID, the Blob service returns status code 412 (Precondition Failed).</source>
            <target state="new">If the client does not specify a lease ID, or specifies an invalid lease ID, the Blob service returns status code 412 (Precondition Failed).</target>
          </trans-unit>
          <trans-unit id="164" translate="yes" xml:space="preserve">
            <source>If the client specifies a lease ID but the blob does not have an active lease, the Blob service also returns status code 412 (Precondition Failed).</source>
            <target state="new">If the client specifies a lease ID but the blob does not have an active lease, the Blob service also returns status code 412 (Precondition Failed).</target>
          </trans-unit>
          <trans-unit id="165" translate="yes" xml:space="preserve">
            <source>If the client specifies a lease ID on a blob that does not yet exist, the Blob service will return status code 412 (Precondition Failed) for requests made against version 2013-08-15 and later; for prior versions the Blob service will return status code 201 (Created).</source>
            <target state="new">If the client specifies a lease ID on a blob that does not yet exist, the Blob service will return status code 412 (Precondition Failed) for requests made against version 2013-08-15 and later; for prior versions the Blob service will return status code 201 (Created).</target>
          </trans-unit>
        </group>
        <group id="95">
          <trans-unit id="166" translate="yes" xml:space="preserve">
            <source>If the blob has an active lease and you call <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> to update the blob, the lease is maintained on the updated blob.</source>
            <target state="new">If the blob has an active lease and you call <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> to update the blob, the lease is maintained on the updated blob.</target>
          </trans-unit>
        </group>
        <group id="96">
          <trans-unit id="167" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> applies only to block blobs.</source>
            <target state="new"><ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> applies only to block blobs.</target>
          </trans-unit>
          <trans-unit id="168" translate="yes" xml:space="preserve">
            <source>Calling <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> on a page blob results in status code 400 (Bad Request).</source>
            <target state="new">Calling <ph id="1">&lt;unmanagedCodeEntityReference&gt;Put Block List&lt;/unmanagedCodeEntityReference&gt;</ph> on a page blob results in status code 400 (Bad Request).</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>