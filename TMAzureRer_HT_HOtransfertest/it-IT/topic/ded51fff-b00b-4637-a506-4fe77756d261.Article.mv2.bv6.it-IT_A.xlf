<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="it-IT" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANzNsJwzAMQNFVPIAEkp9xJ2j/s4D8EATSBFIHMn4N9/NwVV0v3lbs3Xv0rISFloKVWGLOyiIZTO2SyLJHRzSVLhUlZEZxEkNrwqUsYFpvgVV1Hqigjy5NRXH6nlIKsdnIYGbbwM8K5tk31f6M13WeA4wFE8G8768c6yXHb5exnccf8/CbFaEAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Step 3: Create Management Credentials</source>
            <target state="new">Step 3: Create Management Credentials</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>This is the third of nine tasks required to create a basic REST-style queue and publication/subscription application that uses <ph id="1">&lt;token&gt;sb1&lt;/token&gt;</ph>.</source>
            <target state="new">This is the third of nine tasks required to create a basic REST-style queue and publication/subscription application that uses <ph id="1">&lt;token&gt;sb1&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>The next step is to write a method that processes the <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph>, and SAS key that you entered in the previous step, and returns a SAS token.</source>
            <target state="new">The next step is to write a method that processes the <ph id="1">&lt;token&gt;servicensd&lt;/token&gt;</ph>, and SAS key that you entered in the previous step, and returns a SAS token.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>This example creates a SAS token that is valid for one hour.</source>
            <target state="new">This example creates a SAS token that is valid for one hour.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>To create a GetSASToken() method</source>
            <target state="new">To create a GetSASToken() method</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Paste the following code after the <ph id="1">&lt;codeInline&gt;Main()&lt;/codeInline&gt;</ph> method in the <ph id="2">&lt;codeInline&gt;Program&lt;/codeInline&gt;</ph> class:</source>
            <target state="new">Paste the following code after the <ph id="1">&lt;codeInline&gt;Main()&lt;/codeInline&gt;</ph> method in the <ph id="2">&lt;codeInline&gt;Program&lt;/codeInline&gt;</ph> class:</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>