<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="it-IT" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANysEJwzAMAMBVNIAEli0nVido/11AtmUIpAmkKWT85nePGyN5ldjIXYSER6AaSqUW2CbVwWaKUDlra/eKHIwk80TqWqjNIbbek/eQEYomi9VnKk2ZxMqtUo28ZOmTJRbpCIywnPR6I1zrMoZf5+PY9xMhIiSE5+9j2/uw7bvauezbH+bL9lehAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Representations</source>
            <target state="new">Representations</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Request Versioning</source>
            <target state="new">Request Versioning</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Clients must pass the x-ms-version header in the request.</source>
            <target state="new">Clients must pass the x-ms-version header in the request.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Supported versions are:</source>
            <target state="new">Supported versions are:</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Authorization</source>
            <target state="new">Authorization</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Requests must be authenticated using an OAuth 2 bearer token issued by Azure Active Directory.</source>
            <target state="new">Requests must be authenticated using an OAuth 2 bearer token issued by Azure Active Directory.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The resource (audience) for which the AAD token must be acquired is <bpt id="1">&lt;embeddedLabel&gt;</bpt>https://batchapps.core.windows.net/<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">The resource (audience) for which the AAD token must be acquired is <bpt id="1">&lt;embeddedLabel&gt;</bpt>https://batchapps.core.windows.net/<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Operation IDs</source>
            <target state="new">Operation IDs</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Responses include a x-ms-request-id that identifies requests.</source>
            <target state="new">Responses include a x-ms-request-id that identifies requests.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>If you need to contact Microsoft Support, you can provide this ID to help us locate operation logs.</source>
            <target state="new">If you need to contact Microsoft Support, you can provide this ID to help us locate operation logs.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Note that we do not support querying operation status via a ‘get operation response’ style API.</source>
            <target state="new">Note that we do not support querying operation status via a ‘get operation response’ style API.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>XML and JSON Message Bodies</source>
            <target state="new">XML and JSON Message Bodies</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>For all non-blob requests and responses, the body is represented as XML or JSON text.</source>
            <target state="new">For all non-blob requests and responses, the body is represented as XML or JSON text.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>In the documentation, we describe the body format as an abstract hierarchy.</source>
            <target state="new">In the documentation, we describe the body format as an abstract hierarchy.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Repeated elements are identified with an asterisk.</source>
            <target state="new">Repeated elements are identified with an asterisk.</target>
          </trans-unit>
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Here is a simple (fictional) example:</source>
            <target state="new">Here is a simple (fictional) example:</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>XML</source>
            <target state="new">XML</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>In XML, the abstract structure is represented as a hierarchy of elements.</source>
            <target state="new">In XML, the abstract structure is represented as a hierarchy of elements.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>In each case, the element name matches the name in the documentation.</source>
            <target state="new">In each case, the element name matches the name in the documentation.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Attributes are not used; everything is represented as elements.</source>
            <target state="new">Attributes are not used; everything is represented as elements.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>So an example of the above schema might look like this:</source>
            <target state="new">So an example of the above schema might look like this:</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>JSON</source>
            <target state="new">JSON</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>In JSON, the abstract structure is represented as a hierarchy of properties.</source>
            <target state="new">In JSON, the abstract structure is represented as a hierarchy of properties.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Property names are camel-cased, i.e. small initial letter, but capitals at the beginning of subsequent words.</source>
            <target state="new">Property names are camel-cased, i.e. small initial letter, but capitals at the beginning of subsequent words.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Individual ‘object’ containers are not named; each set of properties is just a bag of key-value pairs as is normal for JSON.</source>
            <target state="new">Individual ‘object’ containers are not named; each set of properties is just a bag of key-value pairs as is normal for JSON.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Collection properties are represented as JSON arrays.</source>
            <target state="new">Collection properties are represented as JSON arrays.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>So an example of the above schema might look like this:</source>
            <target state="new">So an example of the above schema might look like this:</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Time Representation</source>
            <target state="new">Time Representation</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Time values are always UTC and are formatted using the ISO8601 extended format.</source>
            <target state="new">Time values are always UTC and are formatted using the ISO8601 extended format.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>In some cases, responses may omit seconds and fractional seconds.</source>
            <target state="new">In some cases, responses may omit seconds and fractional seconds.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Clients should handle omitted seconds correctly (serialization libraries will typically handle this for you).</source>
            <target state="new">Clients should handle omitted seconds correctly (serialization libraries will typically handle this for you).</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>For example:</source>
            <target state="new">For example:</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The same format is used in XML and JSON.</source>
            <target state="new">The same format is used in XML and JSON.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>If the client wants to accept user input or display output in the user’s local time, it is the client’s responsibility to translate between that and UTC.</source>
            <target state="new">If the client wants to accept user input or display output in the user’s local time, it is the client’s responsibility to translate between that and UTC.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Link Representation</source>
            <target state="new">Link Representation</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>When a response document contains a link to another resource, this is structured as an XML element or JSON object with the following format:</source>
            <target state="new">When a response document contains a link to another resource, this is structured as an XML element or JSON object with the following format:</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>The relation (Rel field) specifies the nature of the relationship to the linked resource.</source>
            <target state="new">The relation (Rel field) specifies the nature of the relationship to the linked resource.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>For example, when accessing a job resource, a link with a Rel of Output refers to the job preview , and a link with a Rel of Preview refers to the job preview.</source>
            <target state="new">For example, when accessing a job resource, a link with a Rel of Output refers to the job preview , and a link with a Rel of Preview refers to the job preview.</target>
          </trans-unit>
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Refer to the resource documentation for possible Rel values in a given resource.</source>
            <target state="new">Refer to the resource documentation for possible Rel values in a given resource.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>The reference (Href field) is a URI which can be used to access the linked resource (typically to get its content, though some linked resources may support other HTTP verbs).</source>
            <target state="new">The reference (Href field) is a URI which can be used to access the linked resource (typically to get its content, though some linked resources may support other HTTP verbs).</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>The title is a description of the linked resource, such as a filename.</source>
            <target state="new">The title is a description of the linked resource, such as a filename.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>As noted above, in JSON the container is anonymous and property names are camel-cased, so a link is represented as:</source>
            <target state="new">As noted above, in JSON the container is anonymous and property names are camel-cased, so a link is represented as:</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>By contrast, in XML the <ph id="1">&lt;codeInline&gt;%%amp;lt;LinkRelation%%amp;gt;&lt;/codeInline&gt;</ph> element appears explicitly.</source>
            <target state="new">By contrast, in XML the <ph id="1">&lt;codeInline&gt;%%amp;lt;LinkRelation%%amp;gt;&lt;/codeInline&gt;</ph> element appears explicitly.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>