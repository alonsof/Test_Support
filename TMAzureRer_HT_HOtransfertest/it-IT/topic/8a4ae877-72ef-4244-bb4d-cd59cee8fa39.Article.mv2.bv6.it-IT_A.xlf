<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="it-IT" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANzMENwyAMAMBVGABLBpwAnaD9ZwFjbClSmkgtlTJ++d7jzJI2igKqREDBEBqWBoKB11otMFfvaiBZCkZYmhYgrggsHUFKzgn7miyv3hUm1imQoxpQnGFr1EH6UkW1GKd5Be/2Aa/Nu/vYzfQej891De+idzN5/t58bh8+vweP/Tr/qBh/yKEAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Availability Element</source>
            <target state="new">Availability Element</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>This topic and its sub-topics provides the JSON format that is supported by the older versions of Azure PowerShell.</source>
            <target state="new">This topic and its sub-topics provides the JSON format that is supported by the older versions of Azure PowerShell.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>If you are using the July 2015 Release version of Azure PowerShell or later, see <ph id="1">&lt;link xlink:href="a8cb2c3f-3cb3-4356-829c-de65fd511c23" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Availability Element&lt;/link&gt;</ph> for the latest JSON format.</source>
            <target state="new">If you are using the July 2015 Release version of Azure PowerShell or later, see <ph id="1">&lt;link xlink:href="a8cb2c3f-3cb3-4356-829c-de65fd511c23" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Availability Element&lt;/link&gt;</ph> for the latest JSON format.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>You can convert the JSON from old format to new format by using the tool: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>JSON Upgrade Tool<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?linkid=618507&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept></source>
            <target state="new">You can convert the JSON from old format to new format by using the tool: <bpt id="1">&lt;externalLink&gt;</bpt><bpt id="2">&lt;linkText&gt;</bpt>JSON Upgrade Tool<ept id="2">&lt;/linkText&gt;</ept><ph id="3">&lt;linkUri&gt;http://go.microsoft.com/fwlink/?linkid=618507&lt;/linkUri&gt;</ph><ept id="1">&lt;/externalLink&gt;</ept></target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Availability<ept id="1">&lt;/embeddedLabel&gt;</ept> section in a JSON file that defines an Azure Data Factory table defines the cadence in which a slice of the table is produced.</source>
            <target state="new">The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Availability<ept id="1">&lt;/embeddedLabel&gt;</ept> section in a JSON file that defines an Azure Data Factory table defines the cadence in which a slice of the table is produced.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>The following properties are supported for Availability</source>
            <target state="new">The following properties are supported for Availability</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Available Property</source>
            <target state="new">Available Property</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>frequency</source>
            <target state="new">frequency</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Specifies the time unit for data slice production.<bpt id="1">&lt;embeddedLabel&gt;</bpt>Supported frequency:<ept id="1">&lt;/embeddedLabel&gt;</ept>Minute, Hour, Day, Week, Month </source>
            <target state="new">Specifies the time unit for data slice production.<bpt id="1">&lt;embeddedLabel&gt;</bpt>Supported frequency:<ept id="1">&lt;/embeddedLabel&gt;</ept>Minute, Hour, Day, Week, Month </target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>If you need the data slices to be produced on an hourly basis, you set <bpt id="1">&lt;embeddedLabel&gt;</bpt>Frequency<ept id="1">&lt;/embeddedLabel&gt;</ept> to <bpt id="2">&lt;embeddedLabel&gt;</bpt>Hour<ept id="2">&lt;/embeddedLabel&gt;</ept>, and <bpt id="3">&lt;embeddedLabel&gt;</bpt>interval<ept id="3">&lt;/embeddedLabel&gt;</ept> to <bpt id="4">&lt;embeddedLabel&gt;</bpt>1<ept id="4">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">If you need the data slices to be produced on an hourly basis, you set <bpt id="1">&lt;embeddedLabel&gt;</bpt>Frequency<ept id="1">&lt;/embeddedLabel&gt;</ept> to <bpt id="2">&lt;embeddedLabel&gt;</bpt>Hour<ept id="2">&lt;/embeddedLabel&gt;</ept>, and <bpt id="3">&lt;embeddedLabel&gt;</bpt>interval<ept id="3">&lt;/embeddedLabel&gt;</ept> to <bpt id="4">&lt;embeddedLabel&gt;</bpt>1<ept id="4">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>If you specify Frequency as Minute, we recommend that you set the interval to at least 15.</source>
            <target state="new">If you specify Frequency as Minute, we recommend that you set the interval to at least 15.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>interval</source>
            <target state="new">interval</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Specifies how often the slice is produced.</source>
            <target state="new">Specifies how often the slice is produced.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>waitOnExternal</source>
            <target state="new">waitOnExternal</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Specifies the waiting time for external data to be available.</source>
            <target state="new">Specifies the waiting time for external data to be available.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>This property is used only with external tables (tables not produced by Azure Data Factory).</source>
            <target state="new">This property is used only with external tables (tables not produced by Azure Data Factory).</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Example:</source>
            <target state="new">Example:</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source> See <ph id="1">&lt;link xlink:href="65fc85c9-2714-4d31-be7f-bec6f7e1ad8f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;External Tables&lt;/link&gt;</ph> for details including descriptions of properties in the <bpt id="2">&lt;embeddedLabel&gt;</bpt>availability<ept id="2">&lt;/embeddedLabel&gt;</ept> section.</source>
            <target state="new"> See <ph id="1">&lt;link xlink:href="65fc85c9-2714-4d31-be7f-bec6f7e1ad8f" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;External Tables&lt;/link&gt;</ph> for details including descriptions of properties in the <bpt id="2">&lt;embeddedLabel&gt;</bpt>availability<ept id="2">&lt;/embeddedLabel&gt;</ept> section.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>style</source>
            <target state="new">style</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Specifies whether the slice should be produced at the start/end of the interval.</source>
            <target state="new">Specifies whether the slice should be produced at the start/end of the interval.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>StartOfInterval</source>
            <target state="new">StartOfInterval</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>EndOfInterval</source>
            <target state="new">EndOfInterval</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>If Frequency is set to Month and style is set to EndOfInterval, the slice is produced on the last day of month.</source>
            <target state="new">If Frequency is set to Month and style is set to EndOfInterval, the slice is produced on the last day of month.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>If the style is set to StartOfInterval, the slice is produced on the first day of moth.</source>
            <target state="new">If the style is set to StartOfInterval, the slice is produced on the first day of moth.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>If Frequency is set to Day and style is set to EndOfInterval, the slice is produced in the last hour of the day.</source>
            <target state="new">If Frequency is set to Day and style is set to EndOfInterval, the slice is produced in the last hour of the day.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>If Frequency is set to Hour and style is set to EndOfInterval, the slice is produced at the end of the interval.</source>
            <target state="new">If Frequency is set to Hour and style is set to EndOfInterval, the slice is produced at the end of the interval.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>For example, for a slice for 1 PM – 2 PM period, the slice is produced at 2 PM.</source>
            <target state="new">For example, for a slice for 1 PM – 2 PM period, the slice is produced at 2 PM.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>anchorDateTime</source>
            <target state="new">anchorDateTime</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Specifies when the slice would be produced with in the time frame.</source>
            <target state="new">Specifies when the slice would be produced with in the time frame.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>For example, if the slice is produced daily, you can specify what time of the day the time of the day the slice is produced (for example: 8 AM or 8 PM).</source>
            <target state="new">For example, if the slice is produced daily, you can specify what time of the day the time of the day the slice is produced (for example: 8 AM or 8 PM).</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Example:</source>
            <target state="new">Example:</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Example:<ept id="1">&lt;/embeddedLabel&gt;</ept> for a weekly schedule, You can specify anchor time of Tuesday Nov. 4, 2014, 3 AM.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Example:<ept id="1">&lt;/embeddedLabel&gt;</ept> for a weekly schedule, You can specify anchor time of Tuesday Nov. 4, 2014, 3 AM.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>This means that the scheduling will happen every Tuesday at 3 AM.</source>
            <target state="new">This means that the scheduling will happen every Tuesday at 3 AM.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Example 2:<ept id="1">&lt;/embeddedLabel&gt;</ept> For a daily schedule, if you set anchorDateTime = 10/20/2014 6 AM means that the scheduling will happen every day at 6 AM.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Example 2:<ept id="1">&lt;/embeddedLabel&gt;</ept> For a daily schedule, if you set anchorDateTime = 10/20/2014 6 AM means that the scheduling will happen every day at 6 AM.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Example 3:<ept id="1">&lt;/embeddedLabel&gt;</ept> For a monthly schedule and interval = 12, (every 12 months) AnchorDateTime = 03/02/2014 means every year on March 2nd.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Example 3:<ept id="1">&lt;/embeddedLabel&gt;</ept> For a monthly schedule and interval = 12, (every 12 months) AnchorDateTime = 03/02/2014 means every year on March 2nd.</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>If the AnchorDateTime has date parts that are more granular than the interval, then the more granular parts will be ignored.</source>
            <target state="new">If the AnchorDateTime has date parts that are more granular than the interval, then the more granular parts will be ignored.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>For example, if the <bpt id="1">&lt;embeddedLabel&gt;</bpt>interval<ept id="1">&lt;/embeddedLabel&gt;</ept> is <bpt id="2">&lt;embeddedLabel&gt;</bpt>hourly<ept id="2">&lt;/embeddedLabel&gt;</ept> (frequency: hour and interval: 1) and the <bpt id="3">&lt;embeddedLabel&gt;</bpt>AnchorDateTime<ept id="3">&lt;/embeddedLabel&gt;</ept> contains <bpt id="4">&lt;embeddedLabel&gt;</bpt>minutes and seconds<ept id="4">&lt;/embeddedLabel&gt;</ept>, then the <bpt id="5">&lt;embeddedLabel&gt;</bpt>minutes and seconds<ept id="5">&lt;/embeddedLabel&gt;</ept> parts of the AnchorDateTime will be ignored.</source>
            <target state="new">For example, if the <bpt id="1">&lt;embeddedLabel&gt;</bpt>interval<ept id="1">&lt;/embeddedLabel&gt;</ept> is <bpt id="2">&lt;embeddedLabel&gt;</bpt>hourly<ept id="2">&lt;/embeddedLabel&gt;</ept> (frequency: hour and interval: 1) and the <bpt id="3">&lt;embeddedLabel&gt;</bpt>AnchorDateTime<ept id="3">&lt;/embeddedLabel&gt;</ept> contains <bpt id="4">&lt;embeddedLabel&gt;</bpt>minutes and seconds<ept id="4">&lt;/embeddedLabel&gt;</ept>, then the <bpt id="5">&lt;embeddedLabel&gt;</bpt>minutes and seconds<ept id="5">&lt;/embeddedLabel&gt;</ept> parts of the AnchorDateTime will be ignored.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Offset</source>
            <target state="new">Offset</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Specifies the relative shift of scheduling time.</source>
            <target state="new">Specifies the relative shift of scheduling time.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>For example, if you set the Offset to 2.03:00:00 (2 days and 3 hrs: relative to Sunday), the slice is produced on Tuesday at 3 AM.</source>
            <target state="new">For example, if you set the Offset to 2.03:00:00 (2 days and 3 hrs: relative to Sunday), the slice is produced on Tuesday at 3 AM.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>&lt;days&gt;.&lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt;</source>
            <target state="new">&lt;days&gt;.&lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt;</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>&lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt;</source>
            <target state="new">&lt;hours&gt;:&lt;minutes&gt;:&lt;seconds&gt;</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Example:<ept id="1">&lt;/embeddedLabel&gt;</ept> on a daily schedule, Offset = 06:00:00 means every day at 6 AM.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Example:<ept id="1">&lt;/embeddedLabel&gt;</ept> on a daily schedule, Offset = 06:00:00 means every day at 6 AM.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Example:<ept id="1">&lt;/embeddedLabel&gt;</ept> For a 12 month (frequency = month; interval = 12) schedule, offset: 60.00:00:00 means every year on March 2nd or 3rd (60 days from the beginning of the year if style = StartOfInterval), depending on the year being leap year or not.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Example:<ept id="1">&lt;/embeddedLabel&gt;</ept> For a 12 month (frequency = month; interval = 12) schedule, offset: 60.00:00:00 means every year on March 2nd or 3rd (60 days from the beginning of the year if style = StartOfInterval), depending on the year being leap year or not.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>The two parameters <bpt id="1">&lt;embeddedLabel&gt;</bpt>anchorDateTime<ept id="1">&lt;/embeddedLabel&gt;</ept> and Offset <bpt id="2">&lt;embeddedLabel&gt;</bpt>determine<ept id="2">&lt;/embeddedLabel&gt;</ept> the start of each scheduled execution period/data slice.</source>
            <target state="new">The two parameters <bpt id="1">&lt;embeddedLabel&gt;</bpt>anchorDateTime<ept id="1">&lt;/embeddedLabel&gt;</ept> and Offset <bpt id="2">&lt;embeddedLabel&gt;</bpt>determine<ept id="2">&lt;/embeddedLabel&gt;</ept> the start of each scheduled execution period/data slice.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Style<ept id="1">&lt;/embeddedLabel&gt;</ept> (StartOfInterval or EndOfInteval) determines whether the execution can begin at the start or end of the slice.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Style<ept id="1">&lt;/embeddedLabel&gt;</ept> (StartOfInterval or EndOfInteval) determines whether the execution can begin at the start or end of the slice.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Example:</source>
            <target state="new">Example:</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Offset<ept id="1">&lt;/embeddedLabel&gt;</ept>: 15 min<bpt id="2">&lt;br &gt;</bpt><ept id="2">&lt;/br&gt;</ept><bpt id="3">&lt;embeddedLabel&gt;</bpt>Schedule<ept id="3">&lt;/embeddedLabel&gt;</ept>: Hourly</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Offset<ept id="1">&lt;/embeddedLabel&gt;</ept>: 15 min<bpt id="2">&lt;br &gt;</bpt><ept id="2">&lt;/br&gt;</ept><bpt id="3">&lt;embeddedLabel&gt;</bpt>Schedule<ept id="3">&lt;/embeddedLabel&gt;</ept>: Hourly</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>For the hour 10-11, it is shifted by 15 minutes.</source>
            <target state="new">For the hour 10-11, it is shifted by 15 minutes.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>So the data slice is from: 10:15 to 11:15.</source>
            <target state="new">So the data slice is from: 10:15 to 11:15.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Example 2:</source>
            <target state="new">Example 2:</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Style<ept id="1">&lt;/embeddedLabel&gt;</ept>: StartOfIntervalThe execution for the data starts at 10:15.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Style<ept id="1">&lt;/embeddedLabel&gt;</ept>: StartOfIntervalThe execution for the data starts at 10:15.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Style<ept id="1">&lt;/embeddedLabel&gt;</ept>:EndOfIntervalThe execution for the data starts at 11:15</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Style<ept id="1">&lt;/embeddedLabel&gt;</ept>:EndOfIntervalThe execution for the data starts at 11:15</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>If both anchorDateTime and offset are specified, the result is the combined shift.</source>
            <target state="new">If both anchorDateTime and offset are specified, the result is the combined shift.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>