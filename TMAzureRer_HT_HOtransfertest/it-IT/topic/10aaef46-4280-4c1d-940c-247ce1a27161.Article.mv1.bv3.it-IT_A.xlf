<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="it-IT" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAAdylEKgzAMANCr9AANJDGtdifY/r1ArAkITsF14PGn+37PvbNJuIKZCAg5woTDBBVJcylOqiWGNAtV6u7lDOKJoAhmYJE+DcbEijEQqppLBuEBQSrN96rX6quRck+ZrhXD0uA1xnCui7ud7XHse/tDF8Pz+9ZtPHT7rNqWffsB9vUBEKEAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="content">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Cleans up all the test state in the cluster.</source>
            <target state="new">Cleans up all the test state in the cluster.</target>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>The ClusterManagementClient instance on which the API is called.</source>
            <target state="new">The ClusterManagementClient instance on which the API is called.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Task</source>
            <target state="new">Task</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Action took more than its allocated time.</source>
            <target state="new">Action took more than its allocated time.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Cleans up all the test state in the cluster which has been set for fault operations like StopNode, InvokeDataLoss, RestartPartition and InvokeQuorumLoss This API should be called if any of these operations fail or if the test driver process dies or an operation is cancelled while in flight to ensure that the cluster is back into the normal state.</source>
            <target state="new">Cleans up all the test state in the cluster which has been set for fault operations like StopNode, InvokeDataLoss, RestartPartition and InvokeQuorumLoss This API should be called if any of these operations fail or if the test driver process dies or an operation is cancelled while in flight to ensure that the cluster is back into the normal state.</target>
          </trans-unit>
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Normally all the fault operations clean up their state at the end of the execution of the API so CleanTestState only needs to be called if the API operation is interrupted.</source>
            <target state="new">Normally all the fault operations clean up their state at the end of the execution of the API so CleanTestState only needs to be called if the API operation is interrupted.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Cleans up all the test state in the cluster.</source>
            <target state="new">Cleans up all the test state in the cluster.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>The ClusterManagementClient instance on which the API is called.</source>
            <target state="new">The ClusterManagementClient instance on which the API is called.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>The overall timeout for the operation.</source>
            <target state="new">The overall timeout for the operation.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Cancellation token</source>
            <target state="new">Cancellation token</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Task</source>
            <target state="new">Task</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Action took more than its allocated time.</source>
            <target state="new">Action took more than its allocated time.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Cleans up all the test state in the cluster which has been set for fault operations like StopNode, InvokeDataLoss, RestartPartition and InvokeQuorumLoss This API should be called if any of these operations fail or if the test driver process dies or an operation is cancelled while in flight to ensure that the cluster is back into the normal state.</source>
            <target state="new">Cleans up all the test state in the cluster which has been set for fault operations like StopNode, InvokeDataLoss, RestartPartition and InvokeQuorumLoss This API should be called if any of these operations fail or if the test driver process dies or an operation is cancelled while in flight to ensure that the cluster is back into the normal state.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Normally all the fault operations clean up their state at the end of the execution of the API so CleanTestState only needs to be called if the API operation is interrupted .</source>
            <target state="new">Normally all the fault operations clean up their state at the end of the execution of the API so CleanTestState only needs to be called if the API operation is interrupted .</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>