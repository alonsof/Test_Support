<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="it-IT" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAAdzFEKgzAMANCr9AANNJq2yU6w/XuBRBsQnIKr4PHH9v3guY/NaJihNSIg9ASW2GBOqEXEUVViQK/GLAlUxgwkJQO7ObRFk2Mm5LrEQFZ8UGHwuRlQKgVMaQSUXJWqI+ffFcPa4TXFcG+re7v74zyOHsPwt+f11n06df9s2tdj/wKtqVysoQAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>FROM</source>
            <target state="new">FROM</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>FROM (Azure Stream Analytics)</source>
            <target state="new">FROM (Azure Stream Analytics)</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Specifies the input stream or a step name associated in a WITH clause.</source>
            <target state="new">Specifies the input stream or a step name associated in a WITH clause.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>The FROM clause is always required for any SELECT statement.</source>
            <target state="new">The FROM clause is always required for any SELECT statement.</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Syntax</source>
            <target state="new">Syntax</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Arguments</source>
            <target state="new">Arguments</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>*</source>
            <target state="new">*</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Specifies that all columns from all input streams in the FROM clause should be returned.</source>
            <target state="new">Specifies that all columns from all input streams in the FROM clause should be returned.</target>
          </trans-unit>
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>The columns are returned by input source, as specified in the FROM clause, and in the order in which they exist in the incoming stream.</source>
            <target state="new">The columns are returned by input source, as specified in the FROM clause, and in the order in which they exist in the incoming stream.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>input_name | input_alias.* </source>
            <target state="new">input_name | input_alias.* </target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Limits the scope of the * to the specified input name.</source>
            <target state="new">Limits the scope of the * to the specified input name.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>column_name </source>
            <target state="new">column_name </target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Is the name of a column to return.</source>
            <target state="new">Is the name of a column to return.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Qualify column_name to prevent an ambiguous reference, such as occurs when two input source in the FROM clause have columns with duplicate names.</source>
            <target state="new">Qualify column_name to prevent an ambiguous reference, such as occurs when two input source in the FROM clause have columns with duplicate names.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>expression</source>
            <target state="new">expression</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Is a constant, function, any combination of column names, constants, and functions connected by an operator or operators, or a subquery.</source>
            <target state="new">Is a constant, function, any combination of column names, constants, and functions connected by an operator or operators, or a subquery.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Column_alias </source>
            <target state="new">Column_alias </target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Is an alternative name to replace the column name in the query result set.</source>
            <target state="new">Is an alternative name to replace the column name in the query result set.</target>
          </trans-unit>
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>For example, an alias such as Quantity, or Quantity to Date, or Qty can be specified for a column named quantity.</source>
            <target state="new">For example, an alias such as Quantity, or Quantity to Date, or Qty can be specified for a column named quantity.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Aliases are used also to specify names for the results of expressions.</source>
            <target state="new">Aliases are used also to specify names for the results of expressions.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>column_alias cannot be used in a WHERE, GROUP BY, or HAVING clause.</source>
            <target state="new">column_alias cannot be used in a WHERE, GROUP BY, or HAVING clause.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>