<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ru-RU" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>oQAAAB+LCAAAAAAABAANzFEKgzAMANCr9AANpDXRZifYt2wHSLsEBKfgFDz++v947oNVyg3MiICSI1QsFRomHUU8qUoMOOXm3oGbTkCiXSX6QMuMSJWLjDmG5CyD5NobUSAaRijCBgkzK7PahK2rGI4L5ncM97q4230+jn0/Y+hDieF5fXV7Hbr9Vj2XffsDg09FjaEAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Understanding How Snapshots Accrue Charges</source>
            <target state="new">Understanding How Snapshots Accrue Charges</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Creating a snapshot, which is a read-only copy of a blob, can result in additional data storage charges to your account.</source>
            <target state="new">Creating a snapshot, which is a read-only copy of a blob, can result in additional data storage charges to your account.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>When designing your application, it is important to be aware how these charges may accrue so that you can minimize unnecessary costs.</source>
            <target state="new">When designing your application, it is important to be aware how these charges may accrue so that you can minimize unnecessary costs.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Important Billing Considerations</source>
            <target state="new">Important Billing Considerations</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>The following list includes key points to consider when creating a snapshot.</source>
            <target state="new">The following list includes key points to consider when creating a snapshot.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Charges are incurred for unique blocks or pages, whether they are in the blob or in the snapshot.</source>
            <target state="new">Charges are incurred for unique blocks or pages, whether they are in the blob or in the snapshot.</target>
          </trans-unit>
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Your account does not incur additional charges for snapshots associated with a blob until you update the blob on which they are based.</source>
            <target state="new">Your account does not incur additional charges for snapshots associated with a blob until you update the blob on which they are based.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Once you update the base blob, it diverges from its snapshots, and you will be charged for the unique blocks or pages in each blob or snapshot.</source>
            <target state="new">Once you update the base blob, it diverges from its snapshots, and you will be charged for the unique blocks or pages in each blob or snapshot.</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>When you replace a block within a block blob, that block is subsequently charged as a unique block.</source>
            <target state="new">When you replace a block within a block blob, that block is subsequently charged as a unique block.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>This is true even if the block has the same block ID and the same data as it has in the snapshot.</source>
            <target state="new">This is true even if the block has the same block ID and the same data as it has in the snapshot.</target>
          </trans-unit>
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Once the block is committed again, it diverges from its counterpart in any snapshot, and you will be charged for its data.</source>
            <target state="new">Once the block is committed again, it diverges from its counterpart in any snapshot, and you will be charged for its data.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The same holds true for a page in a page blob that’s updated with identical data.</source>
            <target state="new">The same holds true for a page in a page blob that’s updated with identical data.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Replacing a block blob by calling the <ph id="1">&lt;system&gt;UploadFile&lt;/system&gt;</ph>, <ph id="2">&lt;system&gt;UploadText&lt;/system&gt;</ph>, <ph id="3">&lt;system&gt;UploadStream&lt;/system&gt;</ph>, or <ph id="4">&lt;system&gt;UploadByteArray&lt;/system&gt;</ph> method replaces all of the blocks in that blob.</source>
            <target state="new">Replacing a block blob by calling the <ph id="1">&lt;system&gt;UploadFile&lt;/system&gt;</ph>, <ph id="2">&lt;system&gt;UploadText&lt;/system&gt;</ph>, <ph id="3">&lt;system&gt;UploadStream&lt;/system&gt;</ph>, or <ph id="4">&lt;system&gt;UploadByteArray&lt;/system&gt;</ph> method replaces all of the blocks in that blob.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>If you have a snapshot associated with that blob, all of the blocks in the base blob and snapshot will now diverge and you will be charged for all of the blocks in both blobs.</source>
            <target state="new">If you have a snapshot associated with that blob, all of the blocks in the base blob and snapshot will now diverge and you will be charged for all of the blocks in both blobs.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>This is true even if the data in the base blob and the snapshot remain identical.</source>
            <target state="new">This is true even if the data in the base blob and the snapshot remain identical.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>The Azure Blob service does not have a means to determine whether two blocks contain identical data.</source>
            <target state="new">The Azure Blob service does not have a means to determine whether two blocks contain identical data.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Each block that is uploaded and committed is treated as unique, even if it has the same data and the same block ID.</source>
            <target state="new">Each block that is uploaded and committed is treated as unique, even if it has the same data and the same block ID.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Because charges accrue for unique blocks, it is important to consider that updating a blob that has a snapshot will result in additional unique blocks and additional charges.</source>
            <target state="new">Because charges accrue for unique blocks, it is important to consider that updating a blob that has a snapshot will result in additional unique blocks and additional charges.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Best practices dictate that you manage snapshots carefully to avoid extra charges.</source>
            <target state="new">Best practices dictate that you manage snapshots carefully to avoid extra charges.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>It’s recommended that you manage snapshots in the following manner:</source>
            <target state="new">It’s recommended that you manage snapshots in the following manner:</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Delete and re-create snapshots associated with a blob whenever you update the blob, even if you are updating with identical data, unless your application design requires that you maintain snapshots.</source>
            <target state="new">Delete and re-create snapshots associated with a blob whenever you update the blob, even if you are updating with identical data, unless your application design requires that you maintain snapshots.</target>
          </trans-unit>
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>By deleting and re-creating the blob’s snapshots, you can ensure that the blob and snapshots do not diverge.</source>
            <target state="new">By deleting and re-creating the blob’s snapshots, you can ensure that the blob and snapshots do not diverge.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>If you are maintaining snapshots for a blob, avoid calling <ph id="1">&lt;system&gt;UploadFile&lt;/system&gt;</ph>, <ph id="2">&lt;system&gt;UploadText&lt;/system&gt;</ph>, <ph id="3">&lt;system&gt;UploadStream&lt;/system&gt;</ph>, or <ph id="4">&lt;system&gt;UploadByteArray&lt;/system&gt;</ph> to update the blob, as those methods replace all of the blocks in the blob.</source>
            <target state="new">If you are maintaining snapshots for a blob, avoid calling <ph id="1">&lt;system&gt;UploadFile&lt;/system&gt;</ph>, <ph id="2">&lt;system&gt;UploadText&lt;/system&gt;</ph>, <ph id="3">&lt;system&gt;UploadStream&lt;/system&gt;</ph>, or <ph id="4">&lt;system&gt;UploadByteArray&lt;/system&gt;</ph> to update the blob, as those methods replace all of the blocks in the blob.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Instead, update the fewest possible number of blocks by using the <ph id="1">&lt;system&gt;PutBlock&lt;/system&gt;</ph> and <ph id="2">&lt;system&gt;PutBlockList&lt;/system&gt;</ph> methods.</source>
            <target state="new">Instead, update the fewest possible number of blocks by using the <ph id="1">&lt;system&gt;PutBlock&lt;/system&gt;</ph> and <ph id="2">&lt;system&gt;PutBlockList&lt;/system&gt;</ph> methods.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Snapshot Billing Scenarios</source>
            <target state="new">Snapshot Billing Scenarios</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>The following scenarios demonstrate how charges accrue for a block blob and its snapshots.</source>
            <target state="new">The following scenarios demonstrate how charges accrue for a block blob and its snapshots.</target>
          </trans-unit>
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>In Scenario 1, the base blob has not been updated since the snapshot was taken, so charges are incurred only for unique blocks 1, 2, and 3:</source>
            <target state="new">In Scenario 1, the base blob has not been updated since the snapshot was taken, so charges are incurred only for unique blocks 1, 2, and 3:</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Scenario 1: Only blocks 1, 2, and 3 accrue charges.</source>
            <target state="new">Scenario 1: Only blocks 1, 2, and 3 accrue charges.</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>In Scenario 2, the base blob has been updated, but the snapshot has not.</source>
            <target state="new">In Scenario 2, the base blob has been updated, but the snapshot has not.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Block 3 was updated, and even though it contains the same data and the same ID, it is not the same as block 3 in the snapshot.</source>
            <target state="new">Block 3 was updated, and even though it contains the same data and the same ID, it is not the same as block 3 in the snapshot.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>As a result, the account is charged for four blocks:</source>
            <target state="new">As a result, the account is charged for four blocks:</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Scenario 2: Blocks 1, 2, and 3 in the base blob accrue charges, along with block 3 in the snapshot.</source>
            <target state="new">Scenario 2: Blocks 1, 2, and 3 in the base blob accrue charges, along with block 3 in the snapshot.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>In Scenario 3, the base blob has been updated, but the snapshot has not.</source>
            <target state="new">In Scenario 3, the base blob has been updated, but the snapshot has not.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>Block 3 was replaced with block 4 in the base blob, but the snapshot still reflects block 3.</source>
            <target state="new">Block 3 was replaced with block 4 in the base blob, but the snapshot still reflects block 3.</target>
          </trans-unit>
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>As a result, the account is charged for four blocks:</source>
            <target state="new">As a result, the account is charged for four blocks:</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Scenario 3: Blocks 1, 2, 3, and 4 accrue charges.</source>
            <target state="new">Scenario 3: Blocks 1, 2, 3, and 4 accrue charges.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>In Scenario 4, the base blob has been completely updated and contains none of its original blocks.</source>
            <target state="new">In Scenario 4, the base blob has been completely updated and contains none of its original blocks.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>As a result, the account is charged for all eight unique blocks.</source>
            <target state="new">As a result, the account is charged for all eight unique blocks.</target>
          </trans-unit>
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>This scenario can occur if you are using an update method such as <ph id="1">&lt;system&gt;UploadFile&lt;/system&gt;</ph>, <ph id="2">&lt;system&gt;UploadText&lt;/system&gt;</ph>, <ph id="3">&lt;system&gt;UploadFromStream&lt;/system&gt;</ph>, or <ph id="4">&lt;system&gt;UploadByteArray&lt;/system&gt;</ph>, because these methods replace all of the contents of a blob.</source>
            <target state="new">This scenario can occur if you are using an update method such as <ph id="1">&lt;system&gt;UploadFile&lt;/system&gt;</ph>, <ph id="2">&lt;system&gt;UploadText&lt;/system&gt;</ph>, <ph id="3">&lt;system&gt;UploadFromStream&lt;/system&gt;</ph>, or <ph id="4">&lt;system&gt;UploadByteArray&lt;/system&gt;</ph>, because these methods replace all of the contents of a blob.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Scenario 4: Blocks 1, 2, 3, 4, 5, 6, 7, and 8 accrue charges.</source>
            <target state="new">Scenario 4: Blocks 1, 2, 3, 4, 5, 6, 7, and 8 accrue charges.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>How to Use the Blob Storage Service</source>
            <target state="new">How to Use the Blob Storage Service</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>How to Use the Queue Storage Service</source>
            <target state="new">How to Use the Queue Storage Service</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>