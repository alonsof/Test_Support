<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ru-RU" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANy1EKwyAMgOGreAADiY1Gd4I9j+0AqTVQ6Cx0Fnr89fn/frOpzRwqtMYMTIYwY56hImkqxUi1eGeUiUQUWFMCrrGBpluVbIKiEoTVu4C1TEsmiEYROHKEbAkhsGlkKVlw8Y68O054fby7ttWsXeNx7Pu497uxd8/zq/19aP9tOta9/wESdCzLogAAAA==</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Cumulative Map Operations - Usage and Examples</source>
            <target state="new">Cumulative Map Operations - Usage and Examples</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Lists the Cumulative <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s in <ph id="2">&lt;token&gt;af_integration_full&lt;/token&gt;</ph>.</source>
            <target state="new">Lists the Cumulative <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s in <ph id="2">&lt;token&gt;af_integration_full&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>Cumulative <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s</source>
            <target state="new">Cumulative <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Parameters</source>
            <target state="new">Parameters</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Output</source>
            <target state="new">Output</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>Cumulative Sum</source>
            <target state="new">Cumulative Sum</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Returns the accumulated value of a record.</source>
            <target state="new">Returns the accumulated value of a record.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Requires exactly one input parameter:</source>
            <target state="new">Requires exactly one input parameter:</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Input</source>
            <target state="new">Input</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>A link from a tree node or a List operation that contains a numeric value.</source>
            <target state="new">A link from a tree node or a List operation that contains a numeric value.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>When using a List, the Cumulative operation can operate on a column of the list.</source>
            <target state="new">When using a List, the Cumulative operation can operate on a column of the list.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>A numeric value that is the accumulated sum.</source>
            <target state="new">A numeric value that is the accumulated sum.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>When using a List, an arithmetic expression using the different columns in the List can also return a numeric value.</source>
            <target state="new">When using a List, an arithmetic expression using the different columns in the List can also return a numeric value.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The Lists are written as <bpt id="1">&lt;legacyBold&gt;</bpt>item.<bpt id="2">&lt;legacyItalic&gt;</bpt>ColumnName<ept id="2">&lt;/legacyItalic&gt;</ept><ept id="1">&lt;/legacyBold&gt;</ept>.</source>
            <target state="new">The Lists are written as <bpt id="1">&lt;legacyBold&gt;</bpt>item.<bpt id="2">&lt;legacyItalic&gt;</bpt>ColumnName<ept id="2">&lt;/legacyItalic&gt;</ept><ept id="1">&lt;/legacyBold&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Cumulative Average</source>
            <target state="new">Cumulative Average</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Returns the accumulated average value of a record.</source>
            <target state="new">Returns the accumulated average value of a record.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Requires exactly one input parameter:</source>
            <target state="new">Requires exactly one input parameter:</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Input</source>
            <target state="new">Input</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>A link from a tree node or a List operation that contains a numeric value.</source>
            <target state="new">A link from a tree node or a List operation that contains a numeric value.</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>When using a List operation, the Cumulative operation can operate on a column of the list.</source>
            <target state="new">When using a List operation, the Cumulative operation can operate on a column of the list.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>A numeric value that is the accumulated average.</source>
            <target state="new">A numeric value that is the accumulated average.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Cumulative Concatenate</source>
            <target state="new">Cumulative Concatenate</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Concatenate strings from a record in the source schema to a single record in the target schema.</source>
            <target state="new">Concatenate strings from a record in the source schema to a single record in the target schema.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Can have one and two input parameters:</source>
            <target state="new">Can have one and two input parameters:</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Input</source>
            <target state="new">Input</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>A link from a tree node or a List operation that contains a string value.</source>
            <target state="new">A link from a tree node or a List operation that contains a string value.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>When using a List operation, the Cumulative operation can operate on a column of the list.</source>
            <target state="new">When using a List operation, the Cumulative operation can operate on a column of the list.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Separator</source>
            <target state="new">Separator</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Delimits the string values.</source>
            <target state="new">Delimits the string values.</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>A string value that has been accumulated and concatenated.</source>
            <target state="new">A string value that has been accumulated and concatenated.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Cumulative Maximum</source>
            <target state="new">Cumulative Maximum</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>Returns the accumulated maximum value of a record.</source>
            <target state="new">Returns the accumulated maximum value of a record.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>Requires exactly one input parameter:</source>
            <target state="new">Requires exactly one input parameter:</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Input</source>
            <target state="new">Input</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>A link from a tree node or a List operation that contains a numeric value.</source>
            <target state="new">A link from a tree node or a List operation that contains a numeric value.</target>
          </trans-unit>
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>When using a List operation, the Cumulative operation can operate on a column of the list.</source>
            <target state="new">When using a List operation, the Cumulative operation can operate on a column of the list.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>A numeric value that is the maximum value.</source>
            <target state="new">A numeric value that is the maximum value.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Cumulative Minimum</source>
            <target state="new">Cumulative Minimum</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Returns the accumulated minimum value of a record.</source>
            <target state="new">Returns the accumulated minimum value of a record.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Requires exactly one input parameter:</source>
            <target state="new">Requires exactly one input parameter:</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Input</source>
            <target state="new">Input</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>A link from a tree node or a List operation that contains a numeric value.</source>
            <target state="new">A link from a tree node or a List operation that contains a numeric value.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>When using a List operation, the Cumulative operation can operate on a column of the list.</source>
            <target state="new">When using a List operation, the Cumulative operation can operate on a column of the list.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>A numeric value that is the minimum value.</source>
            <target state="new">A numeric value that is the minimum value.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Cumulative Count</source>
            <target state="new">Cumulative Count</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Returns the number of times a specified repeating structure or value occurs.</source>
            <target state="new">Returns the number of times a specified repeating structure or value occurs.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Requires exactly one input parameter:</source>
            <target state="new">Requires exactly one input parameter:</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>Input</source>
            <target state="new">Input</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>A link from a tree node or a List operation.</source>
            <target state="new">A link from a tree node or a List operation.</target>
          </trans-unit>
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>When using a List operation, the Cumulative operation can operate on a column of the list.</source>
            <target state="new">When using a List operation, the Cumulative operation can operate on a column of the list.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>A numeric value is the total count a repeating value occurs.</source>
            <target state="new">A numeric value is the total count a repeating value occurs.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>Error and Data Handling</source>
            <target state="new">Error and Data Handling</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> provides the ability to configure how an error is handled and how an empty or null node is handled.</source>
            <target state="new"><ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> provides the ability to configure how an error is handled and how an empty or null node is handled.</target>
          </trans-unit>
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>The error handling behavior of the following <bpt id="1">&lt;ui&gt;</bpt>Cumulative<ept id="1">&lt;/ui&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph>s is configurable:</source>
            <target state="new">The error handling behavior of the following <bpt id="1">&lt;ui&gt;</bpt>Cumulative<ept id="1">&lt;/ui&gt;</ept> <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph>s is configurable:</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>Cumulative Sum</source>
            <target state="new">Cumulative Sum</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>Cumulative Minimum, Maximum and Average</source>
            <target state="new">Cumulative Minimum, Maximum and Average</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>Steps:</source>
            <target state="new">Steps:</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>Open a <bpt id="1">&lt;ui&gt;</bpt><ph id="2">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph><ept id="1">&lt;/ui&gt;</ept> or the <bpt id="3">&lt;embeddedLabel&gt;</bpt>BizTalk Service Artifacts<ept id="3">&lt;/embeddedLabel&gt;</ept> project in <ph id="4">&lt;token&gt;vsprvs&lt;/token&gt;</ph>.</source>
            <target state="new">Open a <bpt id="1">&lt;ui&gt;</bpt><ph id="2">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph><ept id="1">&lt;/ui&gt;</ept> or the <bpt id="3">&lt;embeddedLabel&gt;</bpt>BizTalk Service Artifacts<ept id="3">&lt;/embeddedLabel&gt;</ept> project in <ph id="4">&lt;token&gt;vsprvs&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>Double-click a <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> (.trfm) to open the <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> Designer.</source>
            <target state="new">Double-click a <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> (.trfm) to open the <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> Designer.</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>In the <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> toolbar, select <bpt id="2">&lt;ui&gt;</bpt>Settings<ept id="2">&lt;/ui&gt;</ept>.</source>
            <target state="new">In the <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph> toolbar, select <bpt id="2">&lt;ui&gt;</bpt>Settings<ept id="2">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Error Handling<ept id="1">&lt;/ui&gt;</ept> tab</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Error Handling<ept id="1">&lt;/ui&gt;</ept> tab</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>Error Handling<ept id="1">&lt;/ui&gt;</ept> tab, the following <bpt id="2">&lt;ui&gt;</bpt>Cumulative<ept id="2">&lt;/ui&gt;</ept> <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph>s have three <bpt id="4">&lt;ui&gt;</bpt>Behavior<ept id="4">&lt;/ui&gt;</ept> options:</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>Error Handling<ept id="1">&lt;/ui&gt;</ept> tab, the following <bpt id="2">&lt;ui&gt;</bpt>Cumulative<ept id="2">&lt;/ui&gt;</ept> <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph>s have three <bpt id="4">&lt;ui&gt;</bpt>Behavior<ept id="4">&lt;/ui&gt;</ept> options:</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Cumulative Sum<ept id="1">&lt;/ui&gt;</ept>:</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Cumulative Sum<ept id="1">&lt;/ui&gt;</ept>:</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Fail map<ept id="1">&lt;/ui&gt;</ept>: The entire <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> is aborted.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Fail map<ept id="1">&lt;/ui&gt;</ept>: The entire <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> is aborted.</target>
          </trans-unit>
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Since <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s are executed within a pipeline, an error occurs within the pipeline and the error is then sent back to the client that sent the message.</source>
            <target state="new">Since <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s are executed within a pipeline, an error occurs within the pipeline and the error is then sent back to the client that sent the message.</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Output default value NaN<ept id="1">&lt;/ui&gt;</ept>: If the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> fails, NaN (Not a Number) is returned as the output.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Output default value NaN<ept id="1">&lt;/ui&gt;</ept>: If the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> fails, NaN (Not a Number) is returned as the output.</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Output default value 0<ept id="1">&lt;/ui&gt;</ept>: If the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> fails, zero (0) is returned as the output.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Output default value 0<ept id="1">&lt;/ui&gt;</ept>: If the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> fails, zero (0) is returned as the output.</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Cumulative Minimum, Maximum and Average<ept id="1">&lt;/ui&gt;</ept>:</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Cumulative Minimum, Maximum and Average<ept id="1">&lt;/ui&gt;</ept>:</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Fail map<ept id="1">&lt;/ui&gt;</ept>: The entire <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> is aborted.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Fail map<ept id="1">&lt;/ui&gt;</ept>: The entire <ph id="2">&lt;token&gt;transform&lt;/token&gt;</ph> is aborted.</target>
          </trans-unit>
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>Since <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s are executed within a pipeline, an error occurs within the pipeline and the error is then sent back to the client that sent the message.</source>
            <target state="new">Since <ph id="1">&lt;token&gt;transform&lt;/token&gt;</ph>s are executed within a pipeline, an error occurs within the pipeline and the error is then sent back to the client that sent the message.</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Output default value NaN<ept id="1">&lt;/ui&gt;</ept>: If the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> fails, NaN (Not a Number) is returned as the output.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Output default value NaN<ept id="1">&lt;/ui&gt;</ept>: If the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> fails, NaN (Not a Number) is returned as the output.</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Output default value 0<ept id="1">&lt;/ui&gt;</ept>: If the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> fails, zero (0) is returned as the output.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Output default value 0<ept id="1">&lt;/ui&gt;</ept>: If the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> fails, zero (0) is returned as the output.</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Null/Empty Data Handling<ept id="1">&lt;/ui&gt;</ept> tab</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Null/Empty Data Handling<ept id="1">&lt;/ui&gt;</ept> tab</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>In the <bpt id="1">&lt;ui&gt;</bpt>Null/Empty Data Handling<ept id="1">&lt;/ui&gt;</ept> tab, there are three options:</source>
            <target state="new">In the <bpt id="1">&lt;ui&gt;</bpt>Null/Empty Data Handling<ept id="1">&lt;/ui&gt;</ept> tab, there are three options:</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in cumulative operations<ept id="1">&lt;/ui&gt;</ept>: By default, this is not checked.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in cumulative operations<ept id="1">&lt;/ui&gt;</ept>: By default, this is not checked.</target>
          </trans-unit>
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>When not checked, no empty nodes are included in the iteration.</source>
            <target state="new">When not checked, no empty nodes are included in the iteration.</target>
          </trans-unit>
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>When checked, all nodes, including empty nodes, are included in the iteration.</source>
            <target state="new">When checked, all nodes, including empty nodes, are included in the iteration.</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>EXAMPLE: There is a document with 10 &lt;record&gt; nodes.</source>
            <target state="new">EXAMPLE: There is a document with 10 &lt;record&gt; nodes.</target>
          </trans-unit>
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>Three of these &lt;record&gt; nodes are empty.</source>
            <target state="new">Three of these &lt;record&gt; nodes are empty.</target>
          </trans-unit>
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is not checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> returns a value of seven.</source>
            <target state="new">When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is not checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> returns a value of seven.</target>
          </trans-unit>
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> returns a value of 10.</source>
            <target state="new">When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> returns a value of 10.</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept>: By default, this is not checked.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept>: By default, this is not checked.</target>
          </trans-unit>
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>When not checked, no empty nodes are included in the iteration.</source>
            <target state="new">When not checked, no empty nodes are included in the iteration.</target>
          </trans-unit>
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>When checked, all nodes, including empty nodes, are included in the iteration.</source>
            <target state="new">When checked, all nodes, including empty nodes, are included in the iteration.</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>EXAMPLE: there is a document with 10 &lt;record&gt; nodes.</source>
            <target state="new">EXAMPLE: there is a document with 10 &lt;record&gt; nodes.</target>
          </trans-unit>
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>Three of these &lt;record&gt; nodes are empty.</source>
            <target state="new">Three of these &lt;record&gt; nodes are empty.</target>
          </trans-unit>
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is not checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates seven times for the non-empty nodes.</source>
            <target state="new">When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is not checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates seven times for the non-empty nodes.</target>
          </trans-unit>
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>As a result, seven &lt;record&gt; nodes are generated in the Target.</source>
            <target state="new">As a result, seven &lt;record&gt; nodes are generated in the Target.</target>
          </trans-unit>
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates 10 times for all nodes, including the empty nodes.</source>
            <target state="new">When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates 10 times for all nodes, including the empty nodes.</target>
          </trans-unit>
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>As a result, 10 &lt;record&gt; nodes are generated in the Target.</source>
            <target state="new">As a result, 10 &lt;record&gt; nodes are generated in the Target.</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Target Node Generation<ept id="1">&lt;/ui&gt;</ept>: If empty nodes are configured to be considered, you choose to generate an empty node in the output or to not generate an empty node in the output.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Target Node Generation<ept id="1">&lt;/ui&gt;</ept>: If empty nodes are configured to be considered, you choose to generate an empty node in the output or to not generate an empty node in the output.</target>
          </trans-unit>
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>Specifically:</source>
            <target state="new">Specifically:</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>Do not generate empty nodes: Default option.</source>
            <target state="new">Do not generate empty nodes: Default option.</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>Generate empty nodes</source>
            <target state="new">Generate empty nodes</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>EXAMPLE: There is a document with 10 &lt;record&gt; nodes.</source>
            <target state="new">EXAMPLE: There is a document with 10 &lt;record&gt; nodes.</target>
          </trans-unit>
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>Three of these &lt;record&gt; nodes are empty.</source>
            <target state="new">Three of these &lt;record&gt; nodes are empty.</target>
          </trans-unit>
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in cumulative operations<ept id="1">&lt;/ui&gt;</ept> or <bpt id="2">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="2">&lt;/ui&gt;</ept> are not checked, the <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates seven times for the non-empty nodes.</source>
            <target state="new"><bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in cumulative operations<ept id="1">&lt;/ui&gt;</ept> or <bpt id="2">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="2">&lt;/ui&gt;</ept> are not checked, the <ph id="3">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates seven times for the non-empty nodes.</target>
          </trans-unit>
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>As a result, seven &lt;record&gt; nodes are generated in the Target.</source>
            <target state="new">As a result, seven &lt;record&gt; nodes are generated in the Target.</target>
          </trans-unit>
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates 10 times for all nodes, including the empty nodes.</source>
            <target state="new">When <bpt id="1">&lt;ui&gt;</bpt>Consider empty nodes in iterations<ept id="1">&lt;/ui&gt;</ept> is checked, the <ph id="2">&lt;token&gt;mapop&lt;/token&gt;</ph> iterates 10 times for all nodes, including the empty nodes.</target>
          </trans-unit>
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>As a result, 10 &lt;record&gt; nodes are generated in the Target.</source>
            <target state="new">As a result, 10 &lt;record&gt; nodes are generated in the Target.</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>Additional <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s</source>
            <target state="new">Additional <ph id="1">&lt;token&gt;mapop&lt;/token&gt;</ph>s</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>