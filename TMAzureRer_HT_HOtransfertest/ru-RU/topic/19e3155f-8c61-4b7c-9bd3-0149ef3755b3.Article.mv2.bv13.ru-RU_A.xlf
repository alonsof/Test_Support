<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ru-RU" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAANylEKwyAMANCreAADRqM2O8G+x3aAxBoodC10LfT48/s9s9SVYoPeiYDQAmiYFFpAKcyGIuydiVFkFZgjFaBaCXiKM2RJ2LCUFKJ6h9wT5mwwtYJAWhuwzgkCEndLNWdNY3l3XPD6eHevi1m/z8ex76d3cdjw5/WV7X3I9lvlXPbtDxFQHnaiAAAA</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>How to: Implement Claims Authorization in a Claims-Aware ASP.NET Application Using WIF and ACS</source>
            <target state="new">How to: Implement Claims Authorization in a Claims-Aware ASP.NET Application Using WIF and ACS</target>
            <context-group>
              <context context-type="x-metadataname">toc_title</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>Azure</source>
            <target state="new">Azure</target>
            <context-group>
              <context context-type="x-metadataname">applies_to_product</context>
            </context-group>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>How to: Implement Claims Authorization in a Claims-Aware ASP.NET Application Using WIF and ACS</source>
            <target state="new">How to: Implement Claims Authorization in a Claims-Aware ASP.NET Application Using WIF and ACS</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>Applies To</source>
            <target state="new">Applies To</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Microsoft® Azure™ Access Control Service (ACS) </source>
            <target state="new">Microsoft® Azure™ Access Control Service (ACS) </target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Windows® Identity Foundation (WIF)</source>
            <target state="new">Windows® Identity Foundation (WIF)</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>ASP.NET</source>
            <target state="new">ASP.NET</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>Summary</source>
            <target state="new">Summary</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>This topic describes how to implement Claims Based Access Control (CBAC) authorization in claims-aware ASP.NET web applications using WIF and <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph>.</source>
            <target state="new">This topic describes how to implement Claims Based Access Control (CBAC) authorization in claims-aware ASP.NET web applications using WIF and <ph id="1">&lt;token&gt;secondref_acs&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Contents</source>
            <target state="new">Contents</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>Objectives</source>
            <target state="new">Objectives</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Summary of Steps</source>
            <target state="new">Summary of Steps</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>Step 1 – Implement a Claims Authorization Library</source>
            <target state="new">Step 1 – Implement a Claims Authorization Library</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Step 2 – Configure an ASP.NET Application to Use the Claims Authorization Library</source>
            <target state="new">Step 2 – Configure an ASP.NET Application to Use the Claims Authorization Library</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Step 3 – Configure an Authorization Policy</source>
            <target state="new">Step 3 – Configure an Authorization Policy</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>Related Items</source>
            <target state="new">Related Items</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Objectives</source>
            <target state="new">Objectives</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Externalize the authorization logic from the application.</source>
            <target state="new">Externalize the authorization logic from the application.</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Implement the authorization checks beyond roles, resulting in a more detailed control over authorization.</source>
            <target state="new">Implement the authorization checks beyond roles, resulting in a more detailed control over authorization.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Provide for policy driven, declarative, authorization management.</source>
            <target state="new">Provide for policy driven, declarative, authorization management.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Claims authorization is based on using the information that is carried within a token—the claims.</source>
            <target state="new">Claims authorization is based on using the information that is carried within a token—the claims.</target>
          </trans-unit>
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>Claims authorization is useful, when it is insufficient to make the authorization decision based solely on roles.</source>
            <target state="new">Claims authorization is useful, when it is insufficient to make the authorization decision based solely on roles.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>For example, in financial applications, the same role can be given to different limits for transferring money between accounts based on tenure and other attributes.</source>
            <target state="new">For example, in financial applications, the same role can be given to different limits for transferring money between accounts based on tenure and other attributes.</target>
          </trans-unit>
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Such attributes may come in the form of a claim along with the role and therefore allow for a more finely tuned authorization decision.</source>
            <target state="new">Such attributes may come in the form of a claim along with the role and therefore allow for a more finely tuned authorization decision.</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Summary of Steps</source>
            <target state="new">Summary of Steps</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Step 1 – Implement a Claims Authorization Library</source>
            <target state="new">Step 1 – Implement a Claims Authorization Library</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Step 2 – Configure an ASP.NET Application to Use the Claims Authorization Library</source>
            <target state="new">Step 2 – Configure an ASP.NET Application to Use the Claims Authorization Library</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Step 3 – Configure an Authorization Policy</source>
            <target state="new">Step 3 – Configure an Authorization Policy</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Step 1 – Implement a Claims Authorization Library</source>
            <target state="new">Step 1 – Implement a Claims Authorization Library</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>This step shows you how to create an external class library that will read an access policy from a configuration file and enforce the access checks.</source>
            <target state="new">This step shows you how to create an external class library that will read an access policy from a configuration file and enforce the access checks.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The following sample shows how to implement a claims authorization library that makes an authorization decision based on a ZIP code claim.</source>
            <target state="new">The following sample shows how to implement a claims authorization library that makes an authorization decision based on a ZIP code claim.</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>To implement claims authorization library</source>
            <target state="new">To implement claims authorization library</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Make sure you are running Visual Studio® in Administrator mode.</source>
            <target state="new">Make sure you are running Visual Studio® in Administrator mode.</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Right-click the desired solution in <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, add a new <bpt id="2">&lt;ui&gt;</bpt>Class Library<ept id="2">&lt;/ui&gt;</ept> project, and then give it a name, for example, MyClaimsAuthorizationManager.</source>
            <target state="new">Right-click the desired solution in <bpt id="1">&lt;ui&gt;</bpt>Solution Explorer<ept id="1">&lt;/ui&gt;</ept>, add a new <bpt id="2">&lt;ui&gt;</bpt>Class Library<ept id="2">&lt;/ui&gt;</ept> project, and then give it a name, for example, MyClaimsAuthorizationManager.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Delete the default class, <bpt id="1">&lt;ui&gt;</bpt>Class1.cs<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Delete the default class, <bpt id="1">&lt;ui&gt;</bpt>Class1.cs<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Add a new class and give it a name, for example, ZipClaimsAuthorizationManager.</source>
            <target state="new">Add a new class and give it a name, for example, ZipClaimsAuthorizationManager.</target>
          </trans-unit>
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>This will implement an authorization based on postal codes.</source>
            <target state="new">This will implement an authorization based on postal codes.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Add a reference to the <bpt id="1">&lt;ui&gt;</bpt>Microsoft.IdentityModel<ept id="1">&lt;/ui&gt;</ept> and to the <bpt id="2">&lt;ui&gt;</bpt>System.Web<ept id="2">&lt;/ui&gt;</ept> assemblies.</source>
            <target state="new">Add a reference to the <bpt id="1">&lt;ui&gt;</bpt>Microsoft.IdentityModel<ept id="1">&lt;/ui&gt;</ept> and to the <bpt id="2">&lt;ui&gt;</bpt>System.Web<ept id="2">&lt;/ui&gt;</ept> assemblies.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Add the following declarations.</source>
            <target state="new">Add the following declarations.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Extend the <bpt id="1">&lt;ui&gt;</bpt>ClaimsAuthorizationManager<ept id="1">&lt;/ui&gt;</ept> class, overriding its <bpt id="2">&lt;ui&gt;</bpt>AccessCheck<ept id="2">&lt;/ui&gt;</ept> method, and then implementing a constructor to your <bpt id="3">&lt;ui&gt;</bpt>ZipClaimsAuthorizationManager<ept id="3">&lt;/ui&gt;</ept> class.</source>
            <target state="new">Extend the <bpt id="1">&lt;ui&gt;</bpt>ClaimsAuthorizationManager<ept id="1">&lt;/ui&gt;</ept> class, overriding its <bpt id="2">&lt;ui&gt;</bpt>AccessCheck<ept id="2">&lt;/ui&gt;</ept> method, and then implementing a constructor to your <bpt id="3">&lt;ui&gt;</bpt>ZipClaimsAuthorizationManager<ept id="3">&lt;/ui&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Your code should look similar to the following.</source>
            <target state="new">Your code should look similar to the following.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Compile the solution to make sure that there are no compilation errors.</source>
            <target state="new">Compile the solution to make sure that there are no compilation errors.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Locate the compiled library, in this case <bpt id="1">&lt;ui&gt;</bpt>MyClaimsAuthorizationManager.dll<ept id="1">&lt;/ui&gt;</ept>.</source>
            <target state="new">Locate the compiled library, in this case <bpt id="1">&lt;ui&gt;</bpt>MyClaimsAuthorizationManager.dll<ept id="1">&lt;/ui&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>It will need to be dropped into the bin folder of the ASP.NET web application.</source>
            <target state="new">It will need to be dropped into the bin folder of the ASP.NET web application.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Step 2 – Configure an ASP.NET Application to Use the Claims Authorization Library</source>
            <target state="new">Step 2 – Configure an ASP.NET Application to Use the Claims Authorization Library</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>The next steps are performed in your ASP.NET web application.</source>
            <target state="new">The next steps are performed in your ASP.NET web application.</target>
          </trans-unit>
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>Do not add a reference to your Claims Authorization Manager library that you created in previous step.</source>
            <target state="new">Do not add a reference to your Claims Authorization Manager library that you created in previous step.</target>
          </trans-unit>
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>Your ASP.NET web application should be “unaware” of it, except in web.config.</source>
            <target state="new">Your ASP.NET web application should be “unaware” of it, except in web.config.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>To configure an ASAP.NET application to use the Claims Authorization Library</source>
            <target state="new">To configure an ASAP.NET application to use the Claims Authorization Library</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Configure your ASP.NET web application to include WIFs ClaimsAuthorizationModule in its pipeline by adding the following entry to the HttpModules section in the web.config (valid for the development web server that ships with Visual Studio; for Internet Information Services (IIS) version 7, this configuration should be located in the modules section under the system.webServer node).</source>
            <target state="new">Configure your ASP.NET web application to include WIFs ClaimsAuthorizationModule in its pipeline by adding the following entry to the HttpModules section in the web.config (valid for the development web server that ships with Visual Studio; for Internet Information Services (IIS) version 7, this configuration should be located in the modules section under the system.webServer node).</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>Configure your ASP.NET web application to use the custom authorization library you implemented in the previous step by adding the following entry to the microsoft.identityModel.service node.</source>
            <target state="new">Configure your ASP.NET web application to use the custom authorization library you implemented in the previous step by adding the following entry to the microsoft.identityModel.service node.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>Step 3 – Configure an Authorization Policy</source>
            <target state="new">Step 3 – Configure an Authorization Policy</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>In this topic the configuration policy is expressed in the ASP.NET web application web.config file.</source>
            <target state="new">In this topic the configuration policy is expressed in the ASP.NET web application web.config file.</target>
          </trans-unit>
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>The policy carries simple rules that map resources to the claim type and its value.</source>
            <target state="new">The policy carries simple rules that map resources to the claim type and its value.</target>
          </trans-unit>
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>For example, the following policy can be read and enforced by the custom authorization library you created and configured in the previous steps.</source>
            <target state="new">For example, the following policy can be read and enforced by the custom authorization library you created and configured in the previous steps.</target>
          </trans-unit>
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>Add the following entry to the claimsAuthorizationManager node you configured in the previous step.</source>
            <target state="new">Add the following entry to the claimsAuthorizationManager node you configured in the previous step.</target>
          </trans-unit>
          <trans-unit id="59" translate="no" xml:space="preserve">
            <source><bpt id="1">&lt;br &gt;</bpt><ept id="1">&lt;/br&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;br &gt;</bpt><ept id="1">&lt;/br&gt;</ept></target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;br &gt;</bpt><ept id="1">&lt;/br&gt;</ept>The above policy requires that an incoming token must have a zip claim with a value of 11111 in order to access the default.aspx page.</source>
            <target state="new"><bpt id="1">&lt;br &gt;</bpt><ept id="1">&lt;/br&gt;</ept>The above policy requires that an incoming token must have a zip claim with a value of 11111 in order to access the default.aspx page.</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>Related Items</source>
            <target state="new">Related Items</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>