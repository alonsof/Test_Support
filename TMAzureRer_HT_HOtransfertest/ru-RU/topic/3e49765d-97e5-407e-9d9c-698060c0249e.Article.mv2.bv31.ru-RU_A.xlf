<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <file datatype="xml" source-language="en-US" target-language="ru-RU" original="file.ddue" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft">
        <xliffext:info xsi:schemaLocation="urn:microsoft:content:schema:xliffextensions xliffext-xliffextension.xsd" xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
          <xliffext:uhg>ogAAAB+LCAAAAAAABAAVzFEKgzAMgOGr9AANpDW2zU6wZ9kOkLYJCE7BKXj8uef/4zcbtFJsoEoEFAyhYqnQMEhitiDC3llm5EAGRPlWJSCUIURobaRuvZrk6N2gxDmNHTjrCIRZgTs3SFwwYcNIrN4F7/YTprd31zKb6XU89m07vPsf7vg8P7K+dlm/ixzztv4A6dUzlKIAAAA=</xliffext:uhg>
        </xliffext:info>
      </tool>
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>Uses and Stages of Bridges</source>
            <target state="new">Uses and Stages of Bridges</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> provides two kinds of bridges – <ph id="2">&lt;token&gt;passthru&lt;/token&gt;</ph> and <ph id="3">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> provides two kinds of bridges – <ph id="2">&lt;token&gt;passthru&lt;/token&gt;</ph> and <ph id="3">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>s, in turn include <ph id="2">&lt;token&gt;one-way&lt;/token&gt;</ph> and <ph id="3">&lt;token&gt;request_response&lt;/token&gt;</ph>.</source>
            <target state="new"><ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>s, in turn include <ph id="2">&lt;token&gt;one-way&lt;/token&gt;</ph> and <ph id="3">&lt;token&gt;request_response&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>This section provides information on the uses and stages of these <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>s.</source>
            <target state="new">This section provides information on the uses and stages of these <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>s.</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>XML Bridges</source>
            <target state="new">XML Bridges</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Uses of an XML Bridge</source>
            <target state="new">Uses of an XML Bridge</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> can be used to mediate and bridge mismatches between two or more disparate systems that communicate by exchanging XML messages.</source>
            <target state="new">The <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> can be used to mediate and bridge mismatches between two or more disparate systems that communicate by exchanging XML messages.</target>
          </trans-unit>
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source><ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>s, possibly in conjunction with other <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> entities in a message flow, provide a variety of mediation paradigms and scenarios, such as following:</source>
            <target state="new"><ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>s, possibly in conjunction with other <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph> entities in a message flow, provide a variety of mediation paradigms and scenarios, such as following:</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Message Validation<ept id="1">&lt;/embeddedLabel&gt;</ept>: The <ph id="2">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> supports validation of incoming XML messages against an XSD schema.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Message Validation<ept id="1">&lt;/embeddedLabel&gt;</ept>: The <ph id="2">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> supports validation of incoming XML messages against an XSD schema.</target>
          </trans-unit>
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>Messages that fail validation are rejected.</source>
            <target state="new">Messages that fail validation are rejected.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Message Enrichment and Extraction<ept id="1">&lt;/embeddedLabel&gt;</ept>: The <ph id="2">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> supports message enrichment through data lookup from other data sources.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Message Enrichment and Extraction<ept id="1">&lt;/embeddedLabel&gt;</ept>: The <ph id="2">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> supports message enrichment through data lookup from other data sources.</target>
          </trans-unit>
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>This is typically useful in scenarios where messages may require contextual data present beyond the message boundaries typically from a configuration store, an external service, or the likes.</source>
            <target state="new">This is typically useful in scenarios where messages may require contextual data present beyond the message boundaries typically from a configuration store, an external service, or the likes.</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>The <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> also enables you to extract properties from an XML message that can be used for routing eventually.</source>
            <target state="new">The <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> also enables you to extract properties from an XML message that can be used for routing eventually.</target>
          </trans-unit>
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source>For example, in a purchase order message, the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Quantity<ept id="1">&lt;/embeddedLabel&gt;</ept> element can be marked.</source>
            <target state="new">For example, in a purchase order message, the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Quantity<ept id="1">&lt;/embeddedLabel&gt;</ept> element can be marked.</target>
          </trans-unit>
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>The message can then be routed based on the value of quantity ordered.</source>
            <target state="new">The message can then be routed based on the value of quantity ordered.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Message Transformation<ept id="1">&lt;/embeddedLabel&gt;</ept>: The <ph id="2">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> supports message body transformations from one XML structure to another.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Message Transformation<ept id="1">&lt;/embeddedLabel&gt;</ept>: The <ph id="2">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> supports message body transformations from one XML structure to another.</target>
          </trans-unit>
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>This capability of an <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> can also be used to ‘normalize’ a message in scenarios where multiple messages are mapped to a single message.</source>
            <target state="new">This capability of an <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> can also be used to ‘normalize’ a message in scenarios where multiple messages are mapped to a single message.</target>
          </trans-unit>
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>For example, a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> may need to accept purchase orders in different schemas from different clients but they are eventually transformed into a single purchase order schema required by the organization.</source>
            <target state="new">For example, a <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> may need to accept purchase orders in different schemas from different clients but they are eventually transformed into a single purchase order schema required by the organization.</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Location Virtualization<ept id="1">&lt;/embeddedLabel&gt;</ept>: The <ph id="2">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> provides primitive location virtualization of backend services.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Location Virtualization<ept id="1">&lt;/embeddedLabel&gt;</ept>: The <ph id="2">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> provides primitive location virtualization of backend services.</target>
          </trans-unit>
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Clients send messages to the <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> endpoint exposed on the cloud and not the actual service (which may be on the cloud or on premises).</source>
            <target state="new">Clients send messages to the <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> endpoint exposed on the cloud and not the actual service (which may be on the cloud or on premises).</target>
          </trans-unit>
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>The bridge then routes the messages to the backend service based on routing rules.</source>
            <target state="new">The bridge then routes the messages to the backend service based on routing rules.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Custom processing<ept id="1">&lt;/embeddedLabel&gt;</ept>: The <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph>s provide the options of including custom code to incorporate processing tasks that are not included in the out-of-the-box <ph id="3">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Custom processing<ept id="1">&lt;/embeddedLabel&gt;</ept>: The <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph>s provide the options of including custom code to incorporate processing tasks that are not included in the out-of-the-box <ph id="3">&lt;token&gt;bridge&lt;/token&gt;</ph> configuration.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Stages of an XML Bridge</source>
            <target state="new">Stages of an XML Bridge</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>This section provides information about the different stages of an <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>.</source>
            <target state="new">This section provides information about the different stages of an <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Note that each stage is optional and can be turned <bpt id="1">&lt;legacyItalic&gt;</bpt>on<ept id="1">&lt;/legacyItalic&gt;</ept> or <bpt id="2">&lt;legacyItalic&gt;</bpt>off<ept id="2">&lt;/legacyItalic&gt;</ept>.</source>
            <target state="new">Note that each stage is optional and can be turned <bpt id="1">&lt;legacyItalic&gt;</bpt>on<ept id="1">&lt;/legacyItalic&gt;</ept> or <bpt id="2">&lt;legacyItalic&gt;</bpt>off<ept id="2">&lt;/legacyItalic&gt;</ept>.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Validate Stage</source>
            <target state="new">Validate Stage</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>The first stage in the <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> is the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Validate<ept id="2">&lt;/embeddedLabel&gt;</ept> stage.</source>
            <target state="new">The first stage in the <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> is the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Validate<ept id="2">&lt;/embeddedLabel&gt;</ept> stage.</target>
          </trans-unit>
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>This provides XSD validation of XML messages against specified schemas.</source>
            <target state="new">This provides XSD validation of XML messages against specified schemas.</target>
          </trans-unit>
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>The schemas to use for validation are specified during the configuration of the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>.</source>
            <target state="new">The schemas to use for validation are specified during the configuration of the <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>A single <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> can receive and process XML messages with different schemas.</source>
            <target state="new">A single <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> can receive and process XML messages with different schemas.</target>
          </trans-unit>
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>During the validate stage, depending on the incoming message, the corresponding schema is picked and used for validation.</source>
            <target state="new">During the validate stage, depending on the incoming message, the corresponding schema is picked and used for validation.</target>
          </trans-unit>
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>Once the message is validated against the schema, the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Validate<ept id="1">&lt;/embeddedLabel&gt;</ept> stage promotes the <bpt id="2">&lt;embeddedLabel&gt;</bpt>X_PIPELINE_MESSAGETYPE<ept id="2">&lt;/embeddedLabel&gt;</ept> property on the message.</source>
            <target state="new">Once the message is validated against the schema, the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Validate<ept id="1">&lt;/embeddedLabel&gt;</ept> stage promotes the <bpt id="2">&lt;embeddedLabel&gt;</bpt>X_PIPELINE_MESSAGETYPE<ept id="2">&lt;/embeddedLabel&gt;</ept> property on the message.</target>
          </trans-unit>
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>The value of the property is a combination of target namespace for the schema and the root node name, for example, <ph id="1">&lt;codeInline&gt;http://IntegrationServices.Schema#RootNode&lt;/codeInline&gt;</ph>.</source>
            <target state="new">The value of the property is a combination of target namespace for the schema and the root node name, for example, <ph id="1">&lt;codeInline&gt;http://IntegrationServices.Schema#RootNode&lt;/codeInline&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>If the message validation fails either because no matching schema was found or because of an ambiguous match (more than one schema matched), an exception is thrown.</source>
            <target state="new">If the message validation fails either because no matching schema was found or because of an ambiguous match (more than one schema matched), an exception is thrown.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>For instructions on how to configure the validate stage, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</source>
            <target state="new">For instructions on how to configure the validate stage, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Enrich Stage</source>
            <target state="new">Enrich Stage</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Within the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="1">&lt;/embeddedLabel&gt;</ept> stage you can enrich a message by creating properties, the values of which can be derived from the incoming message header, from a system-promoted property, from an element or attribute in the incoming message body, or through a lookup on an external data source such as <ph id="2">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph> tables.</source>
            <target state="new">Within the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="1">&lt;/embeddedLabel&gt;</ept> stage you can enrich a message by creating properties, the values of which can be derived from the incoming message header, from a system-promoted property, from an element or attribute in the incoming message body, or through a lookup on an external data source such as <ph id="2">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph> tables.</target>
          </trans-unit>
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>These properties can then be used for routing messages to destination endpoints and protocol bridging.</source>
            <target state="new">These properties can then be used for routing messages to destination endpoints and protocol bridging.</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>Operation</source>
            <target state="new">Operation</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>Header to Property Assignment</source>
            <target state="new">Header to Property Assignment</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>In this operation, you can use a value from the message header and assign it to a property.</source>
            <target state="new">In this operation, you can use a value from the message header and assign it to a property.</target>
          </trans-unit>
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>For example, you could extract the action from the SOAP header, assign it to a property, and then use that property for further processing and/or routing.</source>
            <target state="new">For example, you could extract the action from the SOAP header, assign it to a property, and then use that property for further processing and/or routing.</target>
          </trans-unit>
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>You could use the properties based on the message protocol that is used to send the message to the bridge.</source>
            <target state="new">You could use the properties based on the message protocol that is used to send the message to the bridge.</target>
          </trans-unit>
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>The supported protocols are HTTP, SOAP, FTP, and SFTP.</source>
            <target state="new">The supported protocols are HTTP, SOAP, FTP, and SFTP.</target>
          </trans-unit>
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>The following properties are available for these protocols.</source>
            <target state="new">The following properties are available for these protocols.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>SOAP</source>
            <target state="new">SOAP</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Action</source>
            <target state="new">Action</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>MessageId</source>
            <target state="new">MessageId</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source>ReplyTo</source>
            <target state="new">ReplyTo</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>To</source>
            <target state="new">To</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>Custom SOAP headers</source>
            <target state="new">Custom SOAP headers</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>HTTP – Standard HTTP headers</source>
            <target state="new">HTTP – Standard HTTP headers</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>FTP/SFTP</source>
            <target state="new">FTP/SFTP</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>FileName</source>
            <target state="new">FileName</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>ServerAddress</source>
            <target state="new">ServerAddress</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>Folder</source>
            <target state="new">Folder</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>For instructions on how to configure the header to property assignment, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_HeaderPropAssgn" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_HeaderPropAssgn" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</source>
            <target state="new">For instructions on how to configure the header to property assignment, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_HeaderPropAssgn" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_HeaderPropAssgn" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>Using system-promoted properties</source>
            <target state="new">Using system-promoted properties</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>By default, <ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> promotes some properties on the messages that are processed by the bridge.</source>
            <target state="new">By default, <ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> promotes some properties on the messages that are processed by the bridge.</target>
          </trans-unit>
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>These properties are also called system-promoted properties.</source>
            <target state="new">These properties are also called system-promoted properties.</target>
          </trans-unit>
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>The values of these properties can also be used for various processing tasks, such as deciding the routing destination, etc. The available system-promoted properties are:</source>
            <target state="new">The values of these properties can also be used for various processing tasks, such as deciding the routing destination, etc. The available system-promoted properties are:</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>RequestId<ept id="1">&lt;/embeddedLabel&gt;</ept> - A unique request ID assigned to the message.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>RequestId<ept id="1">&lt;/embeddedLabel&gt;</ept> - A unique request ID assigned to the message.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>MessageReceivedTime<ept id="1">&lt;/embeddedLabel&gt;</ept> - The timestamp denoting the time the message was received at the bridge endpoint.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>MessageReceivedTime<ept id="1">&lt;/embeddedLabel&gt;</ept> - The timestamp denoting the time the message was received at the bridge endpoint.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>SourceName<ept id="1">&lt;/embeddedLabel&gt;</ept> - The name of the source, as defined in the bridge configuration surface, from which the bridge receives messages.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>SourceName<ept id="1">&lt;/embeddedLabel&gt;</ept> - The name of the source, as defined in the bridge configuration surface, from which the bridge receives messages.</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>SourceType<ept id="1">&lt;/embeddedLabel&gt;</ept> - The type of source, as used in the bridge configuration surface, from which the bridge receives messages.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>SourceType<ept id="1">&lt;/embeddedLabel&gt;</ept> - The type of source, as used in the bridge configuration surface, from which the bridge receives messages.</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>For instructions on how to use system-promoted properties, see , see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_System" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_System" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</source>
            <target state="new">For instructions on how to use system-promoted properties, see , see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_System" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_System" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>Extract</source>
            <target state="new">Extract</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Extract<ept id="1">&lt;/embeddedLabel&gt;</ept> operation of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="2">&lt;/embeddedLabel&gt;</ept> stage is used to extract the values of specific elements or attributes of the message body itself for use during message routing or further processing.</source>
            <target state="new">The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Extract<ept id="1">&lt;/embeddedLabel&gt;</ept> operation of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="2">&lt;/embeddedLabel&gt;</ept> stage is used to extract the values of specific elements or attributes of the message body itself for use during message routing or further processing.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>For instructions on how to configure the extract operation, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_Xpath" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_Xpath" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</source>
            <target state="new">For instructions on how to configure the extract operation, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_Xpath" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_Xpath" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>Lookup</source>
            <target state="new">Lookup</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Lookup<ept id="1">&lt;/embeddedLabel&gt;</ept> operation of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="2">&lt;/embeddedLabel&gt;</ept> stage is used to enrich the message by looking up and including data from sources outside a message boundary.</source>
            <target state="new">The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Lookup<ept id="1">&lt;/embeddedLabel&gt;</ept> operation of the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="2">&lt;/embeddedLabel&gt;</ept> stage is used to enrich the message by looking up and including data from sources outside a message boundary.</target>
          </trans-unit>
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>For example, there could be an online retail store that lets users place their orders using their local currency while the backend service for order processing uses one single currency, say Dollars, for any order processing.</source>
            <target state="new">For example, there could be an online retail store that lets users place their orders using their local currency while the backend service for order processing uses one single currency, say Dollars, for any order processing.</target>
          </trans-unit>
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>In such a case, before the message is sent to the backend service, the value of the order has to be converted from the local currency to Dollars.</source>
            <target state="new">In such a case, before the message is sent to the backend service, the value of the order has to be converted from the local currency to Dollars.</target>
          </trans-unit>
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>This could be done by looking up another service that provides the latest exchange rates.</source>
            <target state="new">This could be done by looking up another service that provides the latest exchange rates.</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>For this release, the enrich stage only supports looking up data from <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph>.</source>
            <target state="new">For this release, the enrich stage only supports looking up data from <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>In other words, <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph> is the only lookup ‘provider’ supported for the current release.</source>
            <target state="new">In other words, <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph> is the only lookup ‘provider’ supported for the current release.</target>
          </trans-unit>
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>The information about the lookup provider is stored in a LookupProviderConfigurations.xml, that is added to a <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph>.</source>
            <target state="new">The information about the lookup provider is stored in a LookupProviderConfigurations.xml, that is added to a <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>You can have multiple providers defined in a single .xml file, corresponding to the fact that you can look up from more than one <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph> data source as part of a single Enrich stage.</source>
            <target state="new">You can have multiple providers defined in a single .xml file, corresponding to the fact that you can look up from more than one <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph> data source as part of a single Enrich stage.</target>
          </trans-unit>
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>A typical provider definition in a LookupProviderConfigurations.xml file looks like the following:</source>
            <target state="new">A typical provider definition in a LookupProviderConfigurations.xml file looks like the following:</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>In the above excerpt, notice that the <bpt id="1">&lt;embeddedLabel&gt;</bpt>type<ept id="1">&lt;/embeddedLabel&gt;</ept> attribute for the <bpt id="2">&lt;embeddedLabel&gt;</bpt>LookupProviderConfiguration<ept id="2">&lt;/embeddedLabel&gt;</ept> element is fixed to <bpt id="3">&lt;embeddedLabel&gt;</bpt>SqlTableLookupProviderConfiguration<ept id="3">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new">In the above excerpt, notice that the <bpt id="1">&lt;embeddedLabel&gt;</bpt>type<ept id="1">&lt;/embeddedLabel&gt;</ept> attribute for the <bpt id="2">&lt;embeddedLabel&gt;</bpt>LookupProviderConfiguration<ept id="2">&lt;/embeddedLabel&gt;</ept> element is fixed to <bpt id="3">&lt;embeddedLabel&gt;</bpt>SqlTableLookupProviderConfiguration<ept id="3">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>This is because currently you can only look up a table in <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph>.</source>
            <target state="new">This is because currently you can only look up a table in <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>There are also some considerations while looking up data from a <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph>.</source>
            <target state="new">There are also some considerations while looking up data from a <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>You can only look up a <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph> table.</source>
            <target state="new">You can only look up a <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph> table.</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>The lookup should be done using a key-value pair.</source>
            <target state="new">The lookup should be done using a key-value pair.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>The lookup must yield just one value, which is assigned to a property in the message.</source>
            <target state="new">The lookup must yield just one value, which is assigned to a property in the message.</target>
          </trans-unit>
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>If the lookup yields more than one value, the first of those values is assigned to the property.</source>
            <target state="new">If the lookup yields more than one value, the first of those values is assigned to the property.</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source>You can look up a value from multiple data sources, which means you can look up from more than one <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph> table or more than one <ph id="2">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph>.</source>
            <target state="new">You can look up a value from multiple data sources, which means you can look up from more than one <ph id="1">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph> table or more than one <ph id="2">&lt;token&gt;ssSDSfull&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>For instructions on how to configure the lookup operation, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_Lookup" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_Lookup" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</source>
            <target state="new">For instructions on how to configure the lookup operation, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_Lookup" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_Lookup" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>While the information about the providers is stored in the LookupProviderConfigurations.xml, the information about which values to assign from header to message properties, what values to extract, and what values to lookup are stored in a bridge configuration file.</source>
            <target state="new">While the information about the providers is stored in the LookupProviderConfigurations.xml, the information about which values to assign from header to message properties, what values to extract, and what values to lookup are stored in a bridge configuration file.</target>
          </trans-unit>
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>When you build a <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph>, the LookupProviderConfigurations.xml also rolls up into a bridge configuration file.</source>
            <target state="new">When you build a <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph>, the LookupProviderConfigurations.xml also rolls up into a bridge configuration file.</target>
          </trans-unit>
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>When you deploy the <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph>, it is this bridge configuration file that gets deployed to the <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</source>
            <target state="new">When you deploy the <ph id="1">&lt;token&gt;msgflow_proj&lt;/token&gt;</ph>, it is this bridge configuration file that gets deployed to the <ph id="2">&lt;token&gt;sb2&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source>What Can I do with the Properties?</source>
            <target state="new">What Can I do with the Properties?</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>In the Enrich stage, you create properties and assign values to those properties.</source>
            <target state="new">In the Enrich stage, you create properties and assign values to those properties.</target>
          </trans-unit>
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>But the question that comes to mind is what can I do with these properties?</source>
            <target state="new">But the question that comes to mind is what can I do with these properties?</target>
          </trans-unit>
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>How do these properties make my task easier?</source>
            <target state="new">How do these properties make my task easier?</target>
          </trans-unit>
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>You can use the properties in two ways:</source>
            <target state="new">You can use the properties in two ways:</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>You can use the properties to set filter conditions to route messages to different destinations.</source>
            <target state="new">You can use the properties to set filter conditions to route messages to different destinations.</target>
          </trans-unit>
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>For instructions on how to achieve this, see <ph id="1">&lt;link xlink:href="498de1a4-3427-4314-a152-8d5a7f026cc0#BKMK_Filter" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;The Routing Condition&lt;/link&gt;</ph>.</source>
            <target state="new">For instructions on how to achieve this, see <ph id="1">&lt;link xlink:href="498de1a4-3427-4314-a152-8d5a7f026cc0#BKMK_Filter" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;The Routing Condition&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>You can use the properties to bridge protocol mismatch between the message sender and the message receiver.</source>
            <target state="new">You can use the properties to bridge protocol mismatch between the message sender and the message receiver.</target>
          </trans-unit>
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>For example, you have an incoming SOAP message that has a custom header value.</source>
            <target state="new">For example, you have an incoming SOAP message that has a custom header value.</target>
          </trans-unit>
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>You want to pass on this value as the custom header of an HTTP message because the message receiver wants a REST message and does not understand a SOAP message format.</source>
            <target state="new">You want to pass on this value as the custom header of an HTTP message because the message receiver wants a REST message and does not understand a SOAP message format.</target>
          </trans-unit>
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>You can use properties to do so.</source>
            <target state="new">You can use properties to do so.</target>
          </trans-unit>
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>You can first assign the value from the incoming message header to a property, say P1, and then while sending the message to the receiver, assign the value of P1 to the message header of the outgoing message.</source>
            <target state="new">You can first assign the value from the incoming message header to a property, say P1, and then while sending the message to the receiver, assign the value of P1 to the message header of the outgoing message.</target>
          </trans-unit>
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="2b28ccb0-dd88-4fbc-a5c4-c3b797a901e8" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Route and Send Actions: Bridging Protocol Mismatch&lt;/link&gt;</ph> .</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="2b28ccb0-dd88-4fbc-a5c4-c3b797a901e8" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Route and Send Actions: Bridging Protocol Mismatch&lt;/link&gt;</ph> .</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>What is the Lifetime of the Properties?</source>
            <target state="new">What is the Lifetime of the Properties?</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>Within a <ph id="1">&lt;token&gt;msgflow&lt;/token&gt;</ph>, the properties that you define as part of the Enrich stage are available throughout the flow of the message for each stage in <ph id="2">&lt;token&gt;msgflow&lt;/token&gt;</ph>.</source>
            <target state="new">Within a <ph id="1">&lt;token&gt;msgflow&lt;/token&gt;</ph>, the properties that you define as part of the Enrich stage are available throughout the flow of the message for each stage in <ph id="2">&lt;token&gt;msgflow&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>In other words, if you defined a property in the Enrich stage, you can use that property during the Transform stage as well as for any map operations.</source>
            <target state="new">In other words, if you defined a property in the Enrich stage, you can use that property during the Transform stage as well as for any map operations.</target>
          </trans-unit>
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>The properties defined in the Enrich stage can also be used outside the boundary of a <ph id="1">&lt;token&gt;msgflow&lt;/token&gt;</ph>, with some considerations.</source>
            <target state="new">The properties defined in the Enrich stage can also be used outside the boundary of a <ph id="1">&lt;token&gt;msgflow&lt;/token&gt;</ph>, with some considerations.</target>
          </trans-unit>
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>Before we go into the details of that, we must understand that the property values are stored as properties of the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>BrokeredMessage<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkId=227144&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept> class.</source>
            <target state="new">Before we go into the details of that, we must understand that the property values are stored as properties of the <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> <bpt id="2">&lt;externalLink&gt;</bpt><bpt id="3">&lt;linkText&gt;</bpt>BrokeredMessage<ept id="3">&lt;/linkText&gt;</ept><ph id="4">&lt;linkUri&gt;http://go.microsoft.com/fwlink/p/?LinkId=227144&lt;/linkUri&gt;</ph><ept id="2">&lt;/externalLink&gt;</ept> class.</target>
          </trans-unit>
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>Now that we are aware of this fact, let’s talk about the lifetime of the properties outside a <ph id="1">&lt;token&gt;msgflow&lt;/token&gt;</ph>.</source>
            <target state="new">Now that we are aware of this fact, let’s talk about the lifetime of the properties outside a <ph id="1">&lt;token&gt;msgflow&lt;/token&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>Because only a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> Queue or a Topic can consume messages of BrokeredMessage type, the properties and their values (as a key-value pair), can directly be consumed by Queues and Topics.</source>
            <target state="new">Because only a <ph id="1">&lt;token&gt;sb2&lt;/token&gt;</ph> Queue or a Topic can consume messages of BrokeredMessage type, the properties and their values (as a key-value pair), can directly be consumed by Queues and Topics.</target>
          </trans-unit>
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>After that, Topics for instance, can potentially use the properties for further processing and routing</source>
            <target state="new">After that, Topics for instance, can potentially use the properties for further processing and routing</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>You cannot pass on the properties and their values to other <ph id="1">&lt;token&gt;msgflow&lt;/token&gt;</ph> components like One-Way/Two-Way Relay Endpoints or One-Way/Two-Way External Service Endpoints.</source>
            <target state="new">You cannot pass on the properties and their values to other <ph id="1">&lt;token&gt;msgflow&lt;/token&gt;</ph> components like One-Way/Two-Way Relay Endpoints or One-Way/Two-Way External Service Endpoints.</target>
          </trans-unit>
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>If you do want to pass the property values to these entities, you must assign the property values to the headers of the outgoing message.</source>
            <target state="new">If you do want to pass the property values to these entities, you must assign the property values to the headers of the outgoing message.</target>
          </trans-unit>
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="2b28ccb0-dd88-4fbc-a5c4-c3b797a901e8" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Route and Send Actions: Bridging Protocol Mismatch&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="2b28ccb0-dd88-4fbc-a5c4-c3b797a901e8" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Route and Send Actions: Bridging Protocol Mismatch&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source>In a “chaining” scenario where the message from one <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> is routed to another <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> and then finally to a <ph id="3">&lt;token&gt;sb2&lt;/token&gt;</ph> Queue (for example), only the properties from the last bridge in the chain are available for any further routing or processing.</source>
            <target state="new">In a “chaining” scenario where the message from one <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph> is routed to another <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> and then finally to a <ph id="3">&lt;token&gt;sb2&lt;/token&gt;</ph> Queue (for example), only the properties from the last bridge in the chain are available for any further routing or processing.</target>
          </trans-unit>
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>Also, to pass property values to the subsequent bridges, property values must be assigned to the headers of the outgoing message.</source>
            <target state="new">Also, to pass property values to the subsequent bridges, property values must be assigned to the headers of the outgoing message.</target>
          </trans-unit>
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>These properties must then be extracted in the second bridge.</source>
            <target state="new">These properties must then be extracted in the second bridge.</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>Transform Stage</source>
            <target state="new">Transform Stage</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Transform<ept id="1">&lt;/embeddedLabel&gt;</ept> stage, as the name suggests, provides the capability to perform structural transformations on the messages.</source>
            <target state="new">The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Transform<ept id="1">&lt;/embeddedLabel&gt;</ept> stage, as the name suggests, provides the capability to perform structural transformations on the messages.</target>
          </trans-unit>
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>Like the other stages in the pipeline, the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Transform<ept id="1">&lt;/embeddedLabel&gt;</ept> stage can work with multiple message-types, so you can have more than one transform available as part of the transform stage.</source>
            <target state="new">Like the other stages in the pipeline, the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Transform<ept id="1">&lt;/embeddedLabel&gt;</ept> stage can work with multiple message-types, so you can have more than one transform available as part of the transform stage.</target>
          </trans-unit>
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source>The right transform to be performed is automatically looked up at runtime based on the incoming message type, provided the corresponding transforms have been configured and uploaded while configuring the bridge.</source>
            <target state="new">The right transform to be performed is automatically looked up at runtime based on the incoming message type, provided the corresponding transforms have been configured and uploaded while configuring the bridge.</target>
          </trans-unit>
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>The transform resolution happens based on the message type of the incoming message.</source>
            <target state="new">The transform resolution happens based on the message type of the incoming message.</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source>The Transform stage matches the message type of the message with the message type of the source schema in a map.</source>
            <target state="new">The Transform stage matches the message type of the message with the message type of the source schema in a map.</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>If the validation stage is turned off, the transform stage matches the incoming message with the source message schema.</source>
            <target state="new">If the validation stage is turned off, the transform stage matches the incoming message with the source message schema.</target>
          </trans-unit>
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source>If the resolution happens, it then promotes the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MessageType<ept id="1">&lt;/embeddedLabel&gt;</ept> property on the message.</source>
            <target state="new">If the resolution happens, it then promotes the <bpt id="1">&lt;embeddedLabel&gt;</bpt>MessageType<ept id="1">&lt;/embeddedLabel&gt;</ept> property on the message.</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>The current release only supports single source to single destination transforms.</source>
            <target state="new">The current release only supports single source to single destination transforms.</target>
          </trans-unit>
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source>For more information, see <ph id="1">&lt;link xlink:href="d8543a8b-269d-4d11-abfa-68ddf2435bec" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Transforms&lt;/link&gt;</ph>.</source>
            <target state="new">For more information, see <ph id="1">&lt;link xlink:href="d8543a8b-269d-4d11-abfa-68ddf2435bec" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Transforms&lt;/link&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="130" translate="yes" xml:space="preserve">
            <source>For instructions on how to configure the Transform stage, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_OneWay_Transform" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_Transform" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</source>
            <target state="new">For instructions on how to configure the Transform stage, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_OneWay_Transform" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_Transform" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="131" translate="yes" xml:space="preserve">
            <source>Enrich Stage – Post Transform</source>
            <target state="new">Enrich Stage – Post Transform</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="132" translate="yes" xml:space="preserve">
            <source>The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="1">&lt;/embeddedLabel&gt;</ept> stage, post transform, is similar to the Enrich stage before transform.</source>
            <target state="new">The <bpt id="1">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="1">&lt;/embeddedLabel&gt;</ept> stage, post transform, is similar to the Enrich stage before transform.</target>
          </trans-unit>
          <trans-unit id="133" translate="yes" xml:space="preserve">
            <source>The only difference is that in the post-transform Enrich stage, you can enrich the transformed message.</source>
            <target state="new">The only difference is that in the post-transform Enrich stage, you can enrich the transformed message.</target>
          </trans-unit>
          <trans-unit id="134" translate="yes" xml:space="preserve">
            <source>The way you configure the Enrich stage remains the same as pre-transform Enrich stage.</source>
            <target state="new">The way you configure the Enrich stage remains the same as pre-transform Enrich stage.</target>
          </trans-unit>
          <trans-unit id="135" translate="yes" xml:space="preserve">
            <source>For instructions on how to configure the Enrich stage, post transform see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_OneWay_EnrichPostTrans" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_EnrichPostTrans" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</source>
            <target state="new">For instructions on how to configure the Enrich stage, post transform see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94#BKMK_OneWay_EnrichPostTrans" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7#BKMK_TwoWay_EnrichPostTrans" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="136" translate="yes" xml:space="preserve">
            <source>All the properties extracted or looked up before the transform stages are also available on the transformed message.</source>
            <target state="new">All the properties extracted or looked up before the transform stages are also available on the transformed message.</target>
          </trans-unit>
          <trans-unit id="137" translate="yes" xml:space="preserve">
            <source>A previously extracted or enriched property will be overwritten if it is modified in the post-transform enrich stage.</source>
            <target state="new">A previously extracted or enriched property will be overwritten if it is modified in the post-transform enrich stage.</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="138" translate="yes" xml:space="preserve">
            <source>Artifacts for an XML Bridge</source>
            <target state="new">Artifacts for an XML Bridge</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="139" translate="yes" xml:space="preserve">
            <source>In the previous section we saw that in the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Validate<ept id="1">&lt;/embeddedLabel&gt;</ept> stage, the validation happens against schemas and in the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Transform<ept id="2">&lt;/embeddedLabel&gt;</ept> stage, the message is transformed using a transform.</source>
            <target state="new">In the previous section we saw that in the <bpt id="1">&lt;embeddedLabel&gt;</bpt>Validate<ept id="1">&lt;/embeddedLabel&gt;</ept> stage, the validation happens against schemas and in the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Transform<ept id="2">&lt;/embeddedLabel&gt;</ept> stage, the message is transformed using a transform.</target>
          </trans-unit>
          <trans-unit id="140" translate="yes" xml:space="preserve">
            <source>So, the artifacts those are available as part of an <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> are:</source>
            <target state="new">So, the artifacts those are available as part of an <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph> are:</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="141" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Schemas<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Schemas<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="142" translate="yes" xml:space="preserve">
            <source>These have .XSD extension</source>
            <target state="new">These have .XSD extension</target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="143" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Transforms<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Transforms<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="144" translate="yes" xml:space="preserve">
            <source>These have .TRFM extension and there can be multiple transforms within a Transform stage.</source>
            <target state="new">These have .TRFM extension and there can be multiple transforms within a Transform stage.</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="145" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Assemblies<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Assemblies<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="146" translate="yes" xml:space="preserve">
            <source>These include the custom-processing logic that can be incorporated at specific stages of the bridge.</source>
            <target state="new">These include the custom-processing logic that can be incorporated at specific stages of the bridge.</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="147" translate="yes" xml:space="preserve">
            <source><bpt id="1">&lt;embeddedLabel&gt;</bpt>Certificates<ept id="1">&lt;/embeddedLabel&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;embeddedLabel&gt;</bpt>Certificates<ept id="1">&lt;/embeddedLabel&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="148" translate="yes" xml:space="preserve">
            <source>These are used for secure message transfer.</source>
            <target state="new">These are used for secure message transfer.</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="149" translate="yes" xml:space="preserve">
            <source>A bridge configuration file is not an artifact because it cannot be shared between different bridges.</source>
            <target state="new">A bridge configuration file is not an artifact because it cannot be shared between different bridges.</target>
          </trans-unit>
          <trans-unit id="150" translate="yes" xml:space="preserve">
            <source>A bridge configuration file is specific to a bridge.</source>
            <target state="new">A bridge configuration file is specific to a bridge.</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="151" translate="yes" xml:space="preserve">
            <source>The BizTalk Service application can have multiple <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>s and each <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> can be using multiple transforms and schemas.</source>
            <target state="new">The BizTalk Service application can have multiple <ph id="1">&lt;token&gt;bridge&lt;/token&gt;</ph>s and each <ph id="2">&lt;token&gt;bridge&lt;/token&gt;</ph> can be using multiple transforms and schemas.</target>
          </trans-unit>
          <trans-unit id="152" translate="yes" xml:space="preserve">
            <source>So, a typical <ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> application would have a large number of transforms and schemas.</source>
            <target state="new">So, a typical <ph id="1">&lt;token&gt;af_integration&lt;/token&gt;</ph> application would have a large number of transforms and schemas.</target>
          </trans-unit>
          <trans-unit id="153" translate="yes" xml:space="preserve">
            <source>However, at the same time, every transform and schema might not be required for each <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>.</source>
            <target state="new">However, at the same time, every transform and schema might not be required for each <ph id="1">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="154" translate="yes" xml:space="preserve">
            <source>Hence, there must be a way to associate the transforms and schemas to a bridge.</source>
            <target state="new">Hence, there must be a way to associate the transforms and schemas to a bridge.</target>
          </trans-unit>
          <trans-unit id="155" translate="yes" xml:space="preserve">
            <source>You can do this association while configuring the bridge.</source>
            <target state="new">You can do this association while configuring the bridge.</target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="156" translate="yes" xml:space="preserve">
            <source>To associate schemas and transforms, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</source>
            <target state="new">To associate schemas and transforms, see <ph id="1">&lt;link xlink:href="45edc54c-7910-46dd-bc35-7e954dd1cf94" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Create an XML Bridge&lt;/link&gt;</ph> or <ph id="2">&lt;link xlink:href="7e5fedb4-9ab1-4470-aa8a-204633391da7" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;XML Request-Reply Bridge : Configuring the Enrich Stage for the Response Message&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="157" translate="yes" xml:space="preserve">
            <source>Pass-Through Bridges</source>
            <target state="new">Pass-Through Bridges</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="158" translate="yes" xml:space="preserve">
            <source>A <ph id="1">&lt;token&gt;passthru&lt;/token&gt;</ph> is used when you want any message type to be processed by the bridge.</source>
            <target state="new">A <ph id="1">&lt;token&gt;passthru&lt;/token&gt;</ph> is used when you want any message type to be processed by the bridge.</target>
          </trans-unit>
          <trans-unit id="159" translate="yes" xml:space="preserve">
            <source>As a result, a <ph id="1">&lt;token&gt;passthru&lt;/token&gt;</ph> does not include validate or transform stages because both these stages are tied to message types.</source>
            <target state="new">As a result, a <ph id="1">&lt;token&gt;passthru&lt;/token&gt;</ph> does not include validate or transform stages because both these stages are tied to message types.</target>
          </trans-unit>
          <trans-unit id="160" translate="yes" xml:space="preserve">
            <source>A <ph id="1">&lt;token&gt;passthru&lt;/token&gt;</ph> only includes the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="2">&lt;/embeddedLabel&gt;</ept> stage, which is used for the same purposes as in an <ph id="3">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>.</source>
            <target state="new">A <ph id="1">&lt;token&gt;passthru&lt;/token&gt;</ph> only includes the <bpt id="2">&lt;embeddedLabel&gt;</bpt>Enrich<ept id="2">&lt;/embeddedLabel&gt;</ept> stage, which is used for the same purposes as in an <ph id="3">&lt;token&gt;xml_bridge&lt;/token&gt;</ph>.</target>
          </trans-unit>
          <trans-unit id="161" translate="yes" xml:space="preserve">
            <source>For more information on how to configure a <ph id="1">&lt;token&gt;passthru&lt;/token&gt;</ph>, see <ph id="2">&lt;link xlink:href="e78d4649-c4ed-4adb-b34f-23b51a4c1d8b" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Configuring a Pass-Through Bridge&lt;/link&gt;</ph>.</source>
            <target state="new">For more information on how to configure a <ph id="1">&lt;token&gt;passthru&lt;/token&gt;</ph>, see <ph id="2">&lt;link xlink:href="e78d4649-c4ed-4adb-b34f-23b51a4c1d8b" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;Configuring a Pass-Through Bridge&lt;/link&gt;</ph>.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>